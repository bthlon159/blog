import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.0d56c066.js";var e="/assets/\u56FE4-1.9de1ad69.jpeg",t="/assets/\u56FE4-2.7955079a.jpeg",o="/assets/\u56FE4-3.421d1082.jpeg",c="/assets/\u56FE4-4.60e53e7a.jpeg",l="/assets/\u56FE4-5.a8cb7911.jpeg",i="/assets/\u56FE4-6.46f7d033.jpeg",u="/assets/\u56FE4-7.c975ce11.jpeg",k="/assets/\u56FE4-8.6a40dd19.jpeg",r="/assets/\u56FE4-9.d0000462.jpeg",d="/assets/\u56FE4-10.24a99506.jpeg";const v={},m=p(`<h1 id="\u7B2C-4-\u7AE0-\u540C\u6B65\u5DE5\u5177\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7B2C-4-\u7AE0-\u540C\u6B65\u5DE5\u5177\u7C7B" aria-hidden="true">#</a> \u7B2C 4 \u7AE0 \u540C\u6B65\u5DE5\u5177\u7C7B</h1><p>\u9664\u4E86\u9501\u4E0E Condition\uFF0CConcurrent \u5305\u8FD8\u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217\u540C\u6B65\u5DE5\u5177\u7C7B\u3002\u8FD9\u4E9B\u540C\u6B65\u5DE5\u5177\u7C7B\u7684\u539F\u7406\uFF0C\u6709\u4E9B\u4E5F\u662F\u57FA\u4E8E AQS \u7684\uFF0C\u6709\u4E9B\u5219\u9700\u8981\u7279\u6B8A\u7684\u5B9E\u73B0\u673A\u5236\uFF0C\u8FD9\u4E00\u7AE0\u5C06\u5BF9\u6240\u6709\u540C\u6B65\u5DE5\u5177\u7C7B\u7684\u5B9E\u73B0\u539F\u7406\u8FDB\u884C\u5256\u6790\u3002</p><h2 id="_4-1-semaphore" tabindex="-1"><a class="header-anchor" href="#_4-1-semaphore" aria-hidden="true">#</a> 4.1 Semaphore</h2><p>Semaphore \u4E5F\u5C31\u662F\u4FE1\u53F7\u91CF\uFF0C\u63D0\u4F9B\u4E86\u8D44\u6E90\u6570\u91CF\u7684\u5E76\u53D1\u8BBF\u95EE\u63A7\u5236\uFF0C\u5176\u4F7F\u7528\u4EE3\u7801\u5F88\u7B80\u5355\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u521D\u59CB\u6709 10 \u4E2A\u5171\u4EAB\u8D44\u6E90\u3002\u7B2C 2 \u4E2A\u53C2\u6570\u662F\u516C\u5E73\u6216\u975E\u516C\u5E73\u9009\u9879</span>
<span class="token class-name">Semaphore</span> available <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6BCF\u6B21\u83B7\u53D6\u4E00\u4E2A\uFF0C\u5982\u679C\u83B7\u53D6\u4E0D\u5230\uFF0C\u5219\u7EBF\u7A0B\u5C31\u963B\u585E</span>
available<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7528\u5B8C\u91CA\u653E</span>
available<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u56FE4-1 \u6240\u793A\uFF0C\u5047\u8BBE\u6709 n \u4E2A\u7EBF\u7A0B\u6765\u83B7\u53D6 Semaphore \u91CC\u9762\u7684\u8D44\u6E90\uFF08n &gt; 10\uFF09\uFF0Cn \u4E2A\u7EBF\u7A0B\u4E2D\u53EA\u6709 10 \u4E2A\u7EBF\u7A0B\u80FD\u83B7\u53D6\u5230\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u90FD\u4F1A\u963B\u585E\u3002\u76F4\u5230\u6709\u7EBF\u7A0B\u91CA\u653E\u4E86\u8D44\u6E90\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u624D\u80FD\u83B7\u53D6\u5230\u3002</p><img src="`+e+'" alt="\u56FE4-1" style="zoom:50%;"><p>\u56FE4-1 \u591A\u4E2A\u7EBF\u7A0B\u8BBF\u95EE Semaphore \u793A\u610F\u56FE</p><p>\u5F53\u521D\u59CB\u7684\u8D44\u6E90\u4E2A\u6570\u4E3A 1 \u7684\u65F6\u5019\uFF0CSemaphore \u9000\u5316\u4E3A\u6392\u4ED6\u9501\u3002\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0CSemaphone \u7684\u5B9E\u73B0\u539F\u7406\u548C\u9501\u5341\u5206\u7C7B\u4F3C\uFF0C\u662F\u57FA\u4E8E AQS\uFF0C\u6709\u516C\u5E73\u548C\u975E\u516C\u5E73\u4E4B\u5206\u3002Semaphore \u76F8\u5173\u7C7B\u7684\u7EE7\u627F\u4F53\u7CFB\u5982\u56FE4-2 \u6240\u793A\u3002</p><img src="'+t+`" alt="\u56FE4-2" style="zoom:50%;"><p>\u56FE4-2 Semaphore \u76F8\u5173\u7C7B\u7684\u7EE7\u627F\u4F53\u7CFB</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    sync<span class="token punctuation">.</span><span class="token function">acquireSharedInterruptibly</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync<span class="token punctuation">.</span><span class="token function">releaseShared</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E Semaphore \u548C\u9501\u7684\u5B9E\u73B0\u539F\u7406\u57FA\u672C\u76F8\u540C\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u4E0D\u518D\u5C55\u5F00\u89E3\u91CA\u3002\u8D44\u6E90\u603B\u6570\u5373 state \u7684\u521D\u59CB\u503C\uFF0C\u5728 acquire \u91CC\u5BF9 state \u53D8\u91CF\u8FDB\u884C CAS \u51CF\u64CD\u4F5C\uFF0C\u51CF\u5230 0 \u4E4B\u540E\uFF0C\u7EBF\u7A0B\u963B\u585E\uFF1B\u5728 release \u91CC\u5BF9 state \u53D8\u91CF\u8FDB\u884C CAS \u52A0\u64CD\u4F5C\u3002</p><h2 id="_4-2-countdownlatch" tabindex="-1"><a class="header-anchor" href="#_4-2-countdownlatch" aria-hidden="true">#</a> 4.2 CountDownLatch</h2><h3 id="_4-2-1-countdownlatch-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_4-2-1-countdownlatch-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> 4.2.1 CountDownLatch \u4F7F\u7528\u573A\u666F</h3><p>\u8003\u8651\u4E00\u4E2A\u573A\u666F\uFF1A\u4E00\u4E2A\u4E3B\u7EBF\u7A0B\u8981\u7B49\u5F85 10 \u4E2A Worker \u7EBF\u7A0B\u5DE5\u4F5C\u5B8C\u6BD5\u624D\u9000\u51FA\uFF0C\u5C31\u80FD\u4F7F\u7528 CountDownLatch \u6765\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u521D\u59CB\u4E3A 10</span>
<span class="token class-name">CountDownLatch</span> doneSingal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E3B\u7EBF\u7A0B\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF0C\u963B\u585E\u5728\u8FD9</span>
doneSingal<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 10 \u4E2A Worker \u7EBF\u7A0B\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u5DE5\u4F5C\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u8C03\u7528 1 \u6B21 countDown()\uFF0C</span>
<span class="token comment">// \u8BA1\u6570\u5668\u51CF 1\u3002\u5F53\u51CF\u5230 0 \u4E4B\u540E\uFF0C\u4E3B\u7EBF\u7A0B\u5C31\u4F1A\u88AB\u5524\u9192\u3002</span>
doneSingal<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56FE4-3 \u6240\u793A\u4E3A CountDownLatch \u76F8\u5173\u7C7B\u7684\u7EE7\u627F\u5C42\u6B21\uFF0CCountDownLatch \u539F\u7406\u548C Semaphore \u539F\u7406\u7C7B\u4F3C\uFF0C\u540C\u6837\u662F\u57FA\u4E8E AQS\uFF0C\u4E0D\u8FC7\u6CA1\u6709\u516C\u5E73\u548C\u975E\u516C\u5E73\u4E4B\u5206\u3002</p><img src="`+o+`" alt="\u56FE4-3" style="zoom:50%;"><p>\u56FE4-3 CountDownLatch \u76F8\u5173\u7C7B\u7684\u7EE7\u627F\u5C42\u6B21</p><h3 id="_4-2-2-await-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-2-2-await-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 4.2.2 await() \u5B9E\u73B0\u5206\u6790</h3><p>\u5982\u4E0B\u6240\u793A\uFF0Cawait() \u8C03\u7528\u7684\u662F AQS \u7684\u6A21\u677F\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5728\u524D\u9762\u5DF2\u7ECF\u4ECB\u7ECD\u8FC7\u3002CountDownLatch.Sync \u91CD\u65B0\u5B9E\u73B0\u4E86 tryAccuqireShared \u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token comment">// AQS \u6A21\u677F\u65B9\u6CD5</span>
    sync<span class="token punctuation">.</span><span class="token function">acquireSharedInterruptibly</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquireSharedInterruptibly</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u88AB CountDownLatch.Sync \u91CD\u65B0\u5B9E\u73B0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryAcquireShared</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">doAcquireSharedInterruptibly</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">tryAcquireShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE tryAcquireShared(..) \u65B9\u6CD5\u7684\u5B9E\u73B0\u6765\u770B\uFF0C\u53EA\u8981 state != 0\uFF0C\u8C03\u7528 await() \u65B9\u6CD5\u7684\u7EBF\u7A0B\u4FBF\u4F1A\u88AB\u653E\u5165 AQS \u7684\u963B\u585E\u961F\u5217\uFF0C\u8FDB\u5165\u963B\u585E\u72B6\u6001\u3002</p><h3 id="_4-2-3-countdown-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-2-3-countdown-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 4.2.3 countDown() \u5B9E\u73B0\u5206\u6790</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// AQS \u6A21\u5757\u65B9\u6CD5</span>
    sync<span class="token punctuation">.</span><span class="token function">releaseShared</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">releaseShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u88AB CountDownLatch.Sync \u91CD\u65B0\u5B9E\u73B0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryReleaseShared</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">doReleaseShared</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">tryReleaseShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> releases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> nextc<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> nextc <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>countDown() \u8C03\u7528\u7684 AQS \u7684\u6A21\u677F\u65B9\u6CD5 releaseShared()\uFF0C\u91CC\u9762\u7684 tryReleaseShared(..) \u88AB CountDownLatch.Sync \u91CD\u65B0\u5B9E\u73B0\u3002\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u53EA\u6709 state == 0\uFF0CtryReleaseShared(..) \u624D\u4F1A\u8FD4\u56DE true\uFF0C\u7136\u540E\u6267\u884C doReleaseShared(..)\uFF0C\u4E00\u6B21\u6027\u5524\u9192\u961F\u5217\u4E2D\u6240\u6709\u963B\u585E\u7684\u7EBF\u7A0B\u3002</p><p>\u6700\u540E\u505A\u4E00\u4E0B\u5C0F\u7ED3\uFF1A\u56E0\u4E3A\u662F\u57FA\u4E8E AQS \u963B\u585E\u961F\u5217\u6765\u5B9E\u73B0\u7684\uFF0C\u6240\u4EE5\u53EF\u4EE5\u8BA9\u591A\u4E2A\u7EBF\u7A0B\u90FD\u963B\u585E\u5728 state == 0 \u6761\u4EF6\u4E0A\uFF0C\u901A\u8FC7 countDown() \u4E00\u76F4\u7D2F\u51CF state\uFF0C\u51CF\u5230 0 \u540E\u4E00\u6B21\u6027\u5524\u9192\u6240\u6709\u7EBF\u7A0B\u3002\u5982\u56FE4-4 \u6240\u793A\uFF0C\u5047\u8BBE\u521D\u59CB\u603B\u6570\u4E3A M\uFF0CN \u4E2A\u7EBF\u7A0B await()\uFF0CM \u4E2A\u7EBF\u7A0B countDown()\uFF0C\u51CF\u5230 0 \u4E4B\u540E\uFF0CN \u4E2A\u7EBF\u7A0B\u88AB\u5524\u9192\u3002</p><img src="`+c+`" alt="\u56FE4-4" style="zoom:50%;"><p>\u56FE4-4 \u591A\u4E2A\u7EBF\u7A0B\u963B\u585E\u5728await() \u793A\u610F\u56FE</p><h2 id="_4-3-cyclicbarrier" tabindex="-1"><a class="header-anchor" href="#_4-3-cyclicbarrier" aria-hidden="true">#</a> 4.3 CyclicBarrier</h2><h3 id="_4-3-1-cyclicbarrier-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_4-3-1-cyclicbarrier-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> 4.3.1 CyclicBarrier \u4F7F\u7528\u573A\u666F</h3><p>CyclicBarrier \u4F7F\u7528\u4EE3\u7801\u4E5F\u5F88\u7B80\u5355\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">CyclicBarrier</span> cb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cb<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8003\u8651\u8FD9\u6837\u4E00\u4E2A\u573A\u666F\uFF1A10 \u4E2A\u5DE5\u7A0B\u5E08\u4E00\u8D77\u6765\u516C\u53F8\u5E94\u8058\uFF0C\u62DB\u8058\u65B9\u5F0F\u5206\u4E3A\u7B14\u8BD5\u548C\u9762\u8BD5\u3002\u9996\u5148\uFF0C\u8981\u7B49\u4EBA\u5230\u9F50\u540E\uFF0C\u5F00\u59CB\u7B14\u8BD5\uFF1B\u7B14\u8BD5\u7ED3\u675F\u4E4B\u540E\uFF0C\u518D\u4E00\u8D77\u53C2\u52A0\u9762\u8BD5\u3002\u628A 10 \u4E2A\u4EBA\u770B\u4F5C 10 \u4E2A\u7EBF\u7A0B\uFF0C10 \u4E2A\u7EBF\u7A0B\u4E4B\u95F4\u7684\u540C\u6B65\u8FC7\u7A0B\u5982\u56FE4-5 \u6240\u793A\u3002</p><img src="`+l+`" alt="\u56FE4-5" style="zoom:50%;"><p>\u56FE4-5 10 \u4E2A\u7EBF\u7A0B\u4E4B\u95F4\u7684\u540C\u6B65\u8FC7\u7A0B</p><p>\u5728\u6574\u4E2A\u8FC7\u7A0B\u4E2D\uFF0C\u6709 2 \u4E2A\u540C\u6B65\u70B9\uFF1A\u7B2C 1 \u4E2A\u540C\u6B65\u70B9\uFF0C\u8981\u7B49\u6240\u6709\u5E94\u8058\u8005\u90FD\u5230\u8FBE\u516C\u53F8\uFF0C\u518D\u4E00\u8D77\u5F00\u59CB\u7B14\u8BD5\uFF1B\u7B2C 2 \u4E2A\u540C\u6B65\u70B9\uFF0C\u8981\u7B49\u6240\u6709\u5E94\u8058\u8005\u90FD\u7ED3\u675F\u7B14\u8BD5\uFF0C\u4E4B\u540E\u4E00\u8D77\u8FDB\u5165\u9762\u8BD5\u73AF\u8282\u3002\u5177\u4F53\u5230\u6BCF\u4E2A\u7EBF\u7A0B\u7684 run() \u65B9\u6CD5\u4E2D\uFF0C\u5C31\u662F\u4E0B\u9762\u7684\u4F2A\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9636\u6BB5 1</span>
    <span class="token function">report</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u5DF2\u5230\u516C\u53F8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C 1 \u4E2A\u540C\u6B65\u70B9</span>
    cb<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9636\u6BB5 2</span>
    \u7B14\u8BD5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C 2 \u4E2A\u540C\u6B65\u70B9</span>
    cb<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9636\u6BB5 3</span>
    \u9762\u8BD5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-2-cyclicbarrier-\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_4-3-2-cyclicbarrier-\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 4.3.2 CyclicBarrier \u5B9E\u73B0\u539F\u7406</h3><p>CyclicBarrier \u57FA\u4E8E ReentrantLock + Condition \u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CyclicBarrier</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528\u4E8E\u7EBF\u7A0B\u4E4B\u95F4\u4E92\u76F8\u5524\u9192</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> trip <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u603B\u7EBF\u7A0B\u6570</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> parties<span class="token punctuation">;</span>
    <span class="token comment">// \u5728\u8BB2 await \u5B9E\u73B0\u7684\u65F6\u5019\uFF0C\u518D\u8BE6\u7EC6\u4ECB\u7ECD count \u548C generation</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Generation</span> generation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Generation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u8BE6\u7EC6\u4ECB\u7ECD CyclicBarrier \u7684\u5B9E\u73B0\u539F\u7406\u3002\u5148\u4ECE\u6784\u9020\u51FD\u6570\u8BF4\u8D77\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u4E0D\u4EC5\u53EF\u4EE5\u4F20\u5165\u53C2\u4E0E\u65B9\u7684\u603B\u6570\u91CF\uFF0C\u8FD8\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u3002\u5F53\u6240\u6709\u7684\u7EBF\u7A0B\u88AB\u5524\u9192\u65F6\uFF0CbarrierAction \u88AB\u6267\u884C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token keyword">int</span> parties<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> barrierAction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parties <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> 
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parties <span class="token operator">=</span> parties<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> parties<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>barrierCommand <span class="token operator">=</span> barrierAction<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B await() \u51FD\u6570\u7684\u5B9E\u73B0\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">BrokenBarrierException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">dowait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TimeoutException</span> toe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>toe<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">dowait</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> timed<span class="token punctuation">,</span> <span class="token keyword">long</span> nanos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">BrokenBarrierException</span><span class="token punctuation">,</span> <span class="token class-name">TimeoutException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Generation</span> g <span class="token operator">=</span> generation<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>broken<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BrokenBarrierException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u54CD\u5E94\u4E2D\u65AD</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5524\u9192\u6240\u6709\u963B\u585E\u7684\u7EBF\u7A0B</span>
            <span class="token function">breakBarrier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u6BCF\u4E2A\u7EBF\u7A0B\u8C03\u7528 1 \u6B21 await()\uFF0Ccount--</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token operator">--</span>count<span class="token punctuation">;</span>
        <span class="token comment">// \u5F53 count \u51CF\u5230 0 \u7684\u65F6\u5019\uFF0C\u6B64\u7EBF\u7A0B\u5524\u9192\u5176\u4ED6\u6240\u6709\u7EBF\u7A0B</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token keyword">boolean</span> ranAction <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token class-name">Runnable</span> command <span class="token operator">=</span> barrierCommand<span class="token punctuation">;</span>
                <span class="token comment">// \u4E00\u8D77\u5524\u9192\u4E4B\u540E\uFF0C\u8FD8\u53EF\u4EE5\u6267\u884C\u4E00\u4E2A\u56DE\u8C03</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    command<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ranAction <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5524\u9192\u5176\u4ED6\u6240\u6709\u7EBF\u7A0B\uFF0C\u540C\u65F6\u628A count \u503C\u590D\u539F\uFF0C\u7528\u4E8E\u4E0B\u4E00\u6B21\u7684 CyclicBarrier\uFF08\u56E0\u4E3A\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528\uFF09</span>
                <span class="token function">nextGeneration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ranAction<span class="token punctuation">)</span>
                    <span class="token function">breakBarrier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5F53 count &gt; 0 \u65F6\uFF0C\u8BF4\u660E\u4EBA\u6CA1\u5230\u671F\uFF0C\u963B\u585E\u81EA\u5DF1</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timed<span class="token punctuation">)</span>
                    <span class="token comment">// \u5173\u952E\u70B9\uFF1Aawait \u5728\u963B\u585E\u81EA\u5DF1\u7684\u540C\u65F6\uFF0C\u4F1A\u628A\u9501\u91CA\u653E\u6389\uFF0C\u8FD9\u6837\u522B\u7684\u7EBF\u7A0B\u5C31\u4F1A\u62FF\u5230\u9501\uFF0C\u6267\u884C\u4E0A\u9762\u7684 index = count--</span>
                    trip<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;</span> <span class="token number">0L</span><span class="token punctuation">)</span>
                    nanos <span class="token operator">=</span> trip<span class="token punctuation">.</span><span class="token function">awaitNanos</span><span class="token punctuation">(</span>nanos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">==</span> generation <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>g<span class="token punctuation">.</span>broken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">breakBarrier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">throw</span> ie<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>broken<span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BrokenBarrierException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u4ECE\u963B\u585E\u4E2D\u5524\u9192\uFF0C\u8FD4\u56DE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">!=</span> generation<span class="token punctuation">)</span>
                <span class="token keyword">return</span> index<span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>timed <span class="token operator">&amp;&amp;</span> nanos <span class="token operator">&lt;=</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">breakBarrier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TimeoutException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u4E0A\u9762\u7684\u51FD\u6570\uFF0C\u6709\u51E0\u70B9\u8BF4\u660E\uFF1A</p><ol><li><p>CyclicBarrier \u662F\u53EF\u4EE5\u88AB\u91CD\u7528\u7684\u3002\u4EE5\u4E0A\u4E00\u8282\u7684\u5E94\u8058\u573A\u666F\u4E3A\u4F8B\uFF0C\u6765\u4E86 10 \u4E2A\u7EBF\u7A0B\uFF0C\u8FD9 10 \u4E2A\u7EBF\u7A0B\u4E92\u76F8\u7B49\u5F85\uFF0C\u5230\u9F50\u540E\u4E00\u8D77\u88AB\u5524\u9192\uFF0C\u5404\u81EA\u6267\u884C\u63A5\u4E0B\u6765\u7684\u903B\u8F91\uFF1B\u7136\u540E\uFF0C\u8FD9 10 \u4E2A\u7EBF\u7A0B\u7EE7\u7EED\u4E92\u76F8\u7B49\u5F85\uFF0C\u5230\u9F50\u540E\u518D\u4E00\u8D77\u88AB\u5524\u9192\u3002\u6BCF\u4E00\u8F6E\u88AB\u79F0\u4E3A\u4E00\u4E2A Generation\uFF0C\u5C31\u662F\u4E00\u6B21\u540C\u6B65\u70B9\u3002</p></li><li><p>CyclicBarrier \u4F1A\u54CD\u5E94\u4E2D\u65AD\u300210 \u4E2A\u7EBF\u7A0B\u6CA1\u6709\u5230\u9F50\uFF0C\u5982\u679C\u6709\u7EBF\u7A0B\u6536\u5230\u4E86\u4E2D\u65AD\u4FE1\u53F7\uFF0C\u6240\u6709\u963B\u585E\u7684\u7EBF\u7A0B\u4E5F\u4F1A\u88AB\u5524\u9192\uFF0C\u5C31\u662F\u4E0A\u9762\u7684 breakBarrier() \u51FD\u6570\u3002\u7136\u540E count \u88AB\u91CD\u7F6E\u4E3A\u521D\u59CB\u503C\uFF08parties\uFF09\uFF0C\u91CD\u65B0\u5F00\u59CB\u3002</p></li><li><p>\u4E0A\u9762\u7684\u56DE\u8C03\u51FD\u6570\uFF0CbarrierAction \u53EA\u4F1A\u88AB\u7B2C 10 \u4E2A\u7EBF\u7A0B\u6267\u884C 1 \u6B21\uFF08\u5728\u5524\u9192\u5176\u4ED6 9 \u4E2A\u7EBF\u7A0B\u4E4B\u524D\uFF09\uFF0C\u800C\u4E0D\u662F 10 \u4E2A\u7EBF\u7A0B\u6BCF\u4E2A\u90FD\u6267\u884C 1 \u6B21\u3002</p></li></ol><h2 id="_4-4-exchanger" tabindex="-1"><a class="header-anchor" href="#_4-4-exchanger" aria-hidden="true">#</a> 4.4 Exchanger</h2><h3 id="_4-4-1-exchanger-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_4-4-1-exchanger-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> 4.4.1 Exchanger \u4F7F\u7528\u573A\u666F</h3><p>Exchanger \u7528\u4E8E\u7EBF\u7A0B\u4E4B\u95F4\u4EA4\u6362\u6570\u636E\uFF0C\u5176\u4F7F\u7528\u4EE3\u7801\u5F88\u7B80\u5355\uFF0C\u662F\u4E00\u4E2A exchange(..) \u51FD\u6570\uFF0C\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Exchanger</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> exchange <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Exchanger</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5EFA 1 \u4E2A\u591A\u7EBF\u7A0B\u5171\u7528\u7684 exchange \u5BF9\u8C61\uFF0C\u628A exchage \u5BF9\u8C61\u4F20\u7ED9 4 \u4E2A\u7EBF\u7A0B\u5BF9\u8C61\u3002</span>
<span class="token comment">// \u6BCF\u4E2A\u7EBF\u7A0B\u5728\u81EA\u5DF1\u7684 run \u51FD\u6570\u91CC\u9762\uFF0C\u8C03\u7528 exchange\uFF0C\u628A\u81EA\u5DF1\u7684\u6570\u636E\u5F53\u53C2\u6570\u4F20\u8FDB\u53BB\uFF0C</span>
<span class="token comment">// \u8FD4\u56DE\u503C\u662F\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528 exchange \u4F20\u8FDB\u53BB\u7684\u53C2\u6570</span>
<span class="token class-name">ThreadA</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadA</span><span class="token punctuation">(</span>exchage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u8C03\u7528 exchange\uFF0C\u81EA\u5DF1\u4F1A\u963B\u585E\u5728\u8FD9\u3002\u76F4\u5230\u6709\u522B\u7684\u7EBF\u7A0B\u8C03\u7528 exchange</span>
    <span class="token class-name">String</span> other <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">ThreadB</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadB</span><span class="token punctuation">(</span>exchage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> other <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">ThreadC</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadC</span><span class="token punctuation">(</span>exchage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> other <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">ThreadD</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadD</span><span class="token punctuation">(</span>exchage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> other <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C4 \u4E2A\u7EBF\u7A0B\u5E76\u53D1\u5730\u8C03\u7528 exchange(..)\uFF0C\u4F1A\u4E24\u4E24\u4EA4\u4E92\u6570\u636E\uFF0C\u5982 A / B\u3001C / D\u3001A / C\u3001B / D\u3001A / D \u6216 B / C\u3002</p><h3 id="_4-4-2-exchanger-\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_4-4-2-exchanger-\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 4.4.2 Exchanger \u5B9E\u73B0\u539F\u7406</h3><p>Exchanger \u7684\u6838\u5FC3\u673A\u5236\u548C Lock \u4E00\u6837\uFF0C\u4E5F\u662F CAS + park / unpark\u3002\u5728\u5B9E\u73B0\u4E0A\u9762\uFF0CJDK 7 \u548C JDK 8 \u6709\u4E00\u5B9A\u5DEE\u5F02\uFF0C\u8FD9\u91CC\u4EE5 JDK 7 \u7684\u5B9E\u73B0\u4E3A\u4F8B\u8FDB\u884C\u5206\u6790\u3002</p><p>\u9996\u5148\uFF0C\u5728 Exchanger \u5185\u90E8\uFF0C\u6709\u4E24\u4E2A\u5185\u90E8\u7C7B\uFF1ASlot \u548C Node\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Exchanger</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token keyword">extends</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token comment">// \u81EA\u5DF1\u8981\u62FF\u53BB\u4EA4\u4E92\u7684\u6570\u636E</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> item<span class="token punctuation">;</span>
        <span class="token comment">// \u81EA\u5DF1</span>
        <span class="token keyword">public</span> <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> waiter<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> var1<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Slot</span> <span class="token keyword">extends</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7F13\u5B58\u884C\u586B\u5145</span>
        <span class="token keyword">long</span> q0<span class="token punctuation">,</span> q1<span class="token punctuation">,</span> q2<span class="token punctuation">,</span> q3<span class="token punctuation">,</span> q4<span class="token punctuation">,</span> q5<span class="token punctuation">,</span> q6<span class="token punctuation">,</span> q7<span class="token punctuation">,</span> q8<span class="token punctuation">,</span> q9<span class="token punctuation">,</span> qa<span class="token punctuation">,</span> qb<span class="token punctuation">,</span> qc<span class="token punctuation">,</span> qd<span class="token punctuation">,</span> qe<span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E2A\u7EBF\u7A0B\u5728\u8C03\u7528 exchange(..) \u51FD\u6570\u4EA4\u6362\u6570\u636E\u7684\u65F6\u5019\uFF0C\u4F1A\u5148\u521B\u5EFA\u4E00\u4E2A Node \u5BF9\u8C61\uFF0C\u8FD9\u4E2A Node \u5BF9\u8C61\u5C31\u662F\u5BF9\u8BE5\u7EBF\u7A0B\u7684\u5305\u88C5\uFF0C\u91CC\u9762\u5305\u542B\u4E86 2 \u4E2A\u5B57\u6BB5\uFF1A1 \u4E2A\u662F\u8BE5\u7EBF\u7A0B\u8981\u4EA4\u4E92\u7684\u6570\u636E\uFF0C\u53E6 1 \u4E2A\u662F\u8BE5\u7EBF\u7A0B\u81EA\u8EAB\u3002\u8FD9\u91CC\u6709\u4E2A\u5173\u952E\u70B9\uFF1ANode \u672C\u8EAB\u662F\u7EE7\u627F\u81EA AtomicReference \u7684\uFF0C\u6240\u4EE5\u9664\u4E86\u8FD9 2 \u4E2A\u5B57\u6BB5\uFF0CNode \u8FD8\u6709\u7B2C 3 \u4E2A\u5B57\u6BB5\uFF0C\u8BB0\u5F55\u7684\u662F\u5BF9\u65B9\u6240\u8981\u4EA4\u6362\u7684\u6570\u636E\uFF0C\u521D\u59CB\u4E3A NULL\u3002</p><p>Slot \u5176\u5B9E\u662F\u4E00\u4E2A AtomicReference\uFF0C\u91CC\u9762\u7684 q0\uFF0Cq1\uFF0C\u2026\uFF0Cqd \u53D8\u91CF\u90FD\u662F\u591A\u4F59\u7684\u3002\u4E3A\u4EC0\u4E48\u8981\u6DFB\u52A0\u8FD9\u4E9B\u591A\u4F59\u7684\u53D8\u91CF\u5462\uFF1F\u662F\u4E3A\u4E86\u4F18\u5316\u6027\u80FD\u800C\u505A\u7684\u7F13\u5B58\u884C\u586B\u5145\u3002</p><p>Slot \u7684 AtomicReference \u5C31\u662F\u6307\u5411\u7684\u4E00\u4E2A Node\uFF0C\u901A\u8FC7 Slot \u548C Node \u76F8\u7ED3\u5408\uFF0C\u5B9E\u73B0\u4E86 2 \u4E2A\u7EBF\u7A0B\u4E4B\u95F4\u7684\u6570\u636E\u4EA4\u6362\uFF0C\u5982\u56FE4-6 \u6240\u793A\u3002\u7EBF\u7A0B 1 \u6301\u6709\u6570\u636E item1\uFF0C\u7EBF\u7A0B 2 \u6301\u6709\u6570\u636E item2\uFF0C\u5404\u81EA\u8C03\u7528 exchange(..)\uFF0C\u4F1A\u5404\u81EA\u751F\u6210\u4E00\u4E2A Node\u3002\u800C Slot \u53EA\u4F1A\u6307\u5411 2 \u4E2A Node \u4E2D\u7684 1 \u4E2A\uFF1A\u5982\u679C\u662F\u7EBF\u7A0B 1 \u5148\u8C03\u7528\u7684 exchange(..)\uFF0C\u90A3\u4E48 Slot \u5C31\u6307\u5411 Node1\uFF0C\u7EBF\u7A0B 1 \u963B\u585E\uFF0C\u7B49\u5F85\u7EBF\u7A0B 2 \u6765\u4EA4\u6362\uFF1B\u53CD\u4E4B\uFF0C\u5982\u679C\u662F\u7EBF\u7A0B 2 \u5148\u8C03\u7528\u7684 exchange(..)\uFF0C\u90A3\u4E48 Slot \u5C31\u6307\u5411 Node2\uFF0C\u7EBF\u7A0B 2 \u963B\u585E\uFF0C\u7B49\u5F85\u7EBF\u7A0B 1 \u6765\u4EA4\u6362\u6570\u636E\u3002</p><img src="`+i+`" alt="\u56FE4-6" style="zoom:50%;"><p>\u56FE4-6 Slot \u4E0E Node \u76F8\u7ED3\u5408\u5B9E\u73B0 2 \u4E2A\u7EBF\u7A0B\u4EA4\u6362\u6570\u636E</p><p>\u4E00\u4E2A Slot \u53EA\u80FD\u652F\u6301 2 \u4E2A\u7EBF\u7A0B\u4E4B\u95F4\u4EA4\u6362\u6570\u636E\uFF0C\u8981\u5B9E\u73B0\u591A\u4E2A\u7EBF\u7A0B\u5E76\u884C\u5730\u4EA4\u6362\u6570\u636E\uFF0C\u9700\u8981\u591A\u4E2A Slot\uFF0C\u56E0\u6B64\u5728 Exchanger \u91CC\u9762\u5B9A\u4E49\u4E86 Slot \u6570\u7EC4\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Slot</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arena <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slot</span><span class="token punctuation">[</span>CAPACITY<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-4-3-exchange-v-x-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-4-3-exchange-v-x-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 4.4.3 exchange(V x) \u5B9E\u73B0\u5206\u6790</h3><p>\u660E\u767D\u4E86\u5927\u81F4\u601D\u8DEF\uFF0C\u4E0B\u9762\u6765\u770B exchange(V x) \u51FD\u6570\u7684\u8BE6\u7EC6\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">exchange</span><span class="token punctuation">(</span><span class="token class-name">V</span> x<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> v <span class="token operator">=</span> <span class="token function">doExchange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> NULL_ITEM <span class="token operator">:</span> x<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> NULL_ITEM<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> CANCEL<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span>v<span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>exchange(..) \u51FD\u6570\uFF0C\u53C2\u6570\u662F\u81EA\u5DF1\u8981\u4EA4\u4E92\u7684\u6570\u636E item\uFF0C\u8FD4\u56DE\u7684\u662F\u4ECE\u5BF9\u65B9\u7EBF\u7A0B\u5F97\u5230\u7684 item\u3002\u5185\u90E8\u8C03\u7528\u7684\u662F\u4E0B\u9762\u7684 doExchange(..) \u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Object</span> <span class="token function">doExchange</span><span class="token punctuation">(</span><span class="token class-name">Object</span> item<span class="token punctuation">,</span> <span class="token keyword">boolean</span> timed<span class="token punctuation">,</span> <span class="token keyword">long</span> nanos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E3A\u8BE5\u7EBF\u7A0B\u65B0\u5EFA\u4E00\u4E2A Node</span>
    <span class="token class-name">Node</span> me <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>                 
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">hashIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  
    <span class="token keyword">int</span> fails <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                            

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> y<span class="token punctuation">;</span>                             
        <span class="token class-name">Slot</span> slot <span class="token operator">=</span> arena<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>slot <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>      
            <span class="token comment">// slot == null\uFF0C\u521B\u5EFA\u4E00\u4E2A slot\uFF0C\u7136\u540E\u56DE\u5230 for \u5FAA\u73AF\uFF0C\u518D\u6B21\u5F00\u59CB</span>
            <span class="token function">createSlot</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                
        <span class="token comment">// \u5982\u679C slot \u91CC\u9762\u6709\u7EBF\u7A0B\u7B49\u5F85\uFF08\u6709 Node\uFF09\uFF0C\u5219\u5C1D\u8BD5\u4E0E\u5176\u4EA4\u6362</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">=</span> slot<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> slot<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> you <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">)</span> y<span class="token punctuation">;</span>               
            <span class="token comment">// \u628A Node \u7684 AtomiReference \u6307\u5411\u81EA\u5DF1\u7684 item\uFF0C\u4E5F\u5C31\u662F\u628A\u81EA\u5DF1\u7684 item \u7ED9\u5BF9\u65B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>you<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5524\u9192\u5BF9\u65B9</span>
                <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>you<span class="token punctuation">.</span>waiter<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u53D6\u56DE\u5BF9\u65B9\u7684 itme\uFF0C\u8FD4\u56DE</span>
                <span class="token keyword">return</span> you<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>                                
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C Slot \u91CC\u9762\u4E3A\u7A7A\uFF08\u6CA1\u6709 Node\uFF09\uFF0C\u5219\u5C1D\u8BD5\u628A\u81EA\u5DF1\u7684 Node \u653E\u8FDB\u53BB</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> slot<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> me<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u4F4D\u7F6E\u662F 0\uFF0C\u81EA\u5DF1\u963B\u585E\uFF0C\u7B49\u5F85\u5176\u4ED6\u7EBF\u7A0B\u6765\u4EA4\u6362</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                   
                <span class="token keyword">return</span> timed <span class="token operator">?</span>  <span class="token function">awaitNanos</span><span class="token punctuation">(</span>me<span class="token punctuation">,</span> slot<span class="token punctuation">,</span> nanos<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">await</span><span class="token punctuation">(</span>me<span class="token punctuation">,</span> slot<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4E0D\u662F\u4F4D\u7F6E 0\uFF0C\u5219\u81EA\u65CB\u7B49\u5F85</span>
            <span class="token class-name">Object</span> v <span class="token operator">=</span> <span class="token function">spinWait</span><span class="token punctuation">(</span>me<span class="token punctuation">,</span> slot<span class="token punctuation">)</span><span class="token punctuation">;</span>    
            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> CANCEL<span class="token punctuation">)</span>
                <span class="token keyword">return</span> v<span class="token punctuation">;</span>
            me <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>              
            <span class="token keyword">int</span> m <span class="token operator">=</span> max<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u81EA\u65CB\u7684\u65F6\u5019\uFF0C\u6CA1\u6709\u7EBF\u7A0B\u6765\u4EA4\u6362\u3002\u6267\u884C\u4E0B\u9762\u7684\uFF0Cindex \u51CF\u534A\uFF0C\u632A\u4E2A\u4F4D\u7F6E\uFF0C\u91CD\u65B0\u5F00\u59CB for \u5FAA\u73AF </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&gt;</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          
                max<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5931\u8D25 case1\uFF1Asolt \u6709\u7EBF\u7A0B\uFF0C\u8981\u4EA4\u4E92\uFF0C\u4F46\u88AB\u5176\u4ED6\u7EBF\u7A0B\u62A2\u4E86\uFF1B</span>
        <span class="token comment">// case2\uFF1Aslot \u6CA1\u6709\u7EBF\u7A0B\uFF0C\u81EA\u5DF1\u51C6\u5907\u5360\u4F4D\u7F6E\uFF0C\u53C8\u88AB\u5176\u4ED6\u7EBF\u7A0B\u62A2\u4E86</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>fails <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               
            <span class="token keyword">int</span> m <span class="token operator">=</span> max<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fails <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> m <span class="token operator">&lt;</span> FULL <span class="token operator">&amp;&amp;</span> max<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 3 \u6B21\u5339\u914D\u5931\u8D25\uFF0C\u6269\u5927 index\uFF0C\u518D\u6B21\u5F00\u59CB for \u5FAA\u73AF</span>
                index <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                index <span class="token operator">=</span> m<span class="token punctuation">;</span>                    
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u6709\u51E0\u4E2A\u70B9\u8981\u8BF4\u660E\uFF1A</p><ol><li><p>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528 exchange \u51C6\u5907\u548C\u5176\u4ED6\u7EBF\u7A0B\u4EA4\u6362\u6570\u636E\u7684\u65F6\u5019\uFF0C\u65E0\u5916\u4E4E\u4E24\u79CD\u60C5\u51B5\u3002\u4E00\u79CD\u662F\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u8981\u4EA4\u6362\u6570\u636E\uFF0C\u81EA\u5DF1\u53EA\u80FD\u81EA\u65CB\u6216\u8005\u963B\u585E\uFF0C\u7B49\u5F85\uFF1B\u53E6\u4E00\u79CD\u662F\u6070\u597D\u6709\u5176\u4ED6\u7EBF\u7A0B\u5728 Slot \u91CC\u9762\u7B49\u7740\uFF0C\u90A3\u4E48\u548C\u5BF9\u65B9\u4EA4\u6362\u3002</p></li><li><p>\u7531\u4E8E Slot \u4E0D\u6B62 1 \u4E2A\uFF0C\u800C\u662F\u591A\u4E2A\u3002\u5982\u679C\u8FD0\u6C14\u597D\uFF0C\u6839\u636E\u81EA\u5DF1\u7684 thread id \u627E\u5230\u5BF9\u5E94\u7684 Slot\uFF0C\u91CC\u9762\u6070\u597D\u6709\u522B\u7684\u7EBF\u7A0B\u5728\u7B49\u5F85\uFF0C\u5C31\u548C\u5BF9\u65B9\u4EA4\u6362\u3002\u4EA4\u6362\u529E\u6CD5\u662F\uFF1A\u53D6\u51FA Slot \u6307\u5411\u7684 Node\uFF0C\u4E5F\u5C31\u662F\u5BF9\u65B9\u7684 Node\uFF0C\u7136\u540E\u628A\u8FD9\u4E2A Node\uFF08\u672C\u8EAB\u4E5F\u662F\u4E00\u4E2A AtomicReference\uFF09\u6307\u5411\u81EA\u5DF1\u7684 item\uFF0C\u5524\u9192\u5BF9\u65B9\uFF0C\u540C\u65F6\u8FD4\u56DE\u5BF9\u65B9\u7684 item\u3002\uFF08\u518D\u6B21\u5F3A\u8C03\u4E00\u6B21\uFF1A1 \u4E2A Node \u5B9E\u9645\u4E0A\u6709 2 \u4E2A item \u5B57\u6BB5\uFF0C1 \u4E2A\u8BB0\u5F55\u7684\u662F\u81EA\u5DF1\u7684 item\uFF0C1 \u4E2A\u8BB0\u5F55\u7684\u662F\u5BF9\u65B9\u7684 item\uFF0C\u56E0\u6B64\u5B9E\u73B0 2 \u4E2A\u7EBF\u7A0B\u7684\u6570\u636E\u4EA4\u6362\uFF09\u3002</p></li><li><p>\u5982\u679C\u8FD0\u6C14\u4E0D\u597D\uFF0CSlot \u662F\u7A7A\u7684\uFF0C\u5982\u4F55\u5904\u7406\u5462\uFF1F\u5F53\u524D Slot \u4E3A\u7A7A\uFF0C\u4E0D\u4EE3\u8868\u5176\u4ED6 Slot \u6CA1\u6709\u7EBF\u7A0B\u5728\u7B49\u5F85\u3002\u56E0\u6B64\uFF0C\u5982\u679C\u5F53\u524D Slot \u7684 index = 0\uFF0C\u81EA\u5DF1\u5C31\u963B\u585E\u5728\u90A3\uFF1B\u5982\u679C index != 0\uFF0C\u5219\u9700\u8981\u904D\u5386\u6240\u6709\u7684 Slot\uFF0C\u770B\u5176\u4ED6\u7684 Slot \u91CC\u9762\u662F\u5426\u6709\u7EBF\u7A0B\u5728\u7B49\u5F85\u3002\u6700\u597D\u662F\u904D\u5386\u4E00\u5708\u53D1\u73B0\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u81EA\u5DF1\u518D\u5728 index = 0 \u7684\u4F4D\u7F6E\u7B49\u5F85\u3002</p></li></ol><h2 id="_4-5-phaser" tabindex="-1"><a class="header-anchor" href="#_4-5-phaser" aria-hidden="true">#</a> 4.5 Phaser</h2><h3 id="_4-5-1-\u7528-phaser-\u66FF\u4EE3-cyclicbarrier-\u548C-countdownlatch" tabindex="-1"><a class="header-anchor" href="#_4-5-1-\u7528-phaser-\u66FF\u4EE3-cyclicbarrier-\u548C-countdownlatch" aria-hidden="true">#</a> 4.5.1 \u7528 Phaser \u66FF\u4EE3 CyclicBarrier \u548C CountDownLatch</h3><p>\u4ECE JDK 7 \u5F00\u59CB\uFF0C\u65B0\u589E\u4E86\u4E00\u4E2A\u540C\u6B65\u5DE5\u5177\u7C7B Phaser\uFF0C\u5176\u529F\u80FD\u6BD4 CyclicBarrier \u548C CountDownLatch \u66F4\u52A0\u5F3A\u5927\u3002</p><ol><li><p>\u7528 Phaser \u66FF\u4EE3 CountDownLatch</p><p>\u8003\u8651\u8BB2 CountDownLatch \u65F6\u7684\u4F8B\u5B50\uFF0C1 \u4E2A\u4E3B\u7EBF\u7A0B\u8981\u7B49 10 \u4E2A worker \u7EBF\u7A0B\u5B8C\u6210\u4E4B\u540E\uFF0C\u624D\u80FD\u505A\u63A5\u4E0B\u6765\u7684\u4E8B\u60C5\uFF0C\u4E5F\u53EF\u4EE5\u7528 Phaser \u6765\u5B9E\u73B0\u6B64\u529F\u80FD\u3002\u5728 CountDownLatch \u4E2D\uFF0C\u4E3B\u8981\u662F 2 \u4E2A\u51FD\u6570\uFF1Aawait() \u548C countDown()\uFF0C\u5728 Phaser \u4E2D\uFF0C\u4E0E\u4E4B\u76F8\u5BF9\u5E94\u7684\u51FD\u6570\u662F awaitAdance(int n) \u548C arrive()\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u521D\u59CB\u4E3A 10</span>
<span class="token class-name">Phaser</span> ph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E3B\u7EBF\u7A0B\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF0C\u963B\u585E\u5728\u8FD9\u3002awaitAdance(int phase)\uFF0C\u8868\u793A\u7B49\u5F85\u5F53\u524D phase\uFF08\u5F53\u524D\u540C\u6B65\u70B9\uFF09\u5B8C\u6210</span>
ph<span class="token punctuation">.</span><span class="token function">awaitAdance</span><span class="token punctuation">(</span>ph<span class="token punctuation">.</span><span class="token function">getPhase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 10 \u4E2A worker \u7EBF\u7A0B\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u5DE5\u4F5C\u5B8C\u6210\u4E4B\u540E\uFF0C\u8C03\u7528 1 \u6B21 arrive()\u3002\u987E\u540D\u601D\u4E49\uFF0C\u201C\u6211\u5230\u8FBE\u4E86\u8FD9\u4E2A\u540C\u6B65\u70B9\u201D</span>
ph<span class="token punctuation">.</span><span class="token function">arrive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u7528 Phaser \u66FF\u4EE3 CyclicBarrier</p><p>\u8003\u8651\u524D\u9762\u8BB2 CyclicBarrier \u65F6\uFF0C10 \u4E2A\u5DE5\u7A0B\u5E08\u53BB\u516C\u53F8\u5E94\u8058\u7684\u4F8B\u5B50\uFF0C\u4E5F\u53EF\u4EE5\u7528 Phaser \u5B9E\u73B0\uFF0C\u4EE3\u7801\u57FA\u672C\u7C7B\u4F3C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Phaser</span> ph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9636\u6BB5 1</span>
    <span class="token function">report</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u5DF2\u5230\u516C\u53F8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C 1 \u4E2A\u540C\u6B65\u70B9\uFF08\u4EE3\u66FF CyclicBarrier \u7684 await\uFF09</span>
    ph<span class="token punctuation">.</span><span class="token function">arriveAndAwaitAdvance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9636\u6BB5 2</span>
    \u7B14\u8BD5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C 2 \u4E2A\u540C\u6B65\u70B9\uFF08\u4EE3\u66FF CyclicBarrier \u7684 await\uFF09</span>
    ph<span class="token punctuation">.</span><span class="token function">arriveAndAwaitAdvance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9636\u6BB5 3</span>
    \u9762\u8BD5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>arriveAndAwaitAdance() \u5C31\u662F arrive() \u4E0E awaitAdvance(int) \u7684\u7EC4\u5408\uFF0C\u8868\u793A \u201C\u6211\u81EA\u5DF1\u5DF2\u5230\u8FBE\u8FD9\u4E2A\u540C\u6B65\u70B9\uFF0C\u540C\u65F6\u8981\u7B49\u5F85\u6240\u6709\u4EBA\u90FD\u5230\u8FBE\u8FD9\u4E2A\u540C\u6B65\u70B9\uFF0C\u7136\u540E\u518D\u4E00\u8D77\u524D\u884C\u201D\u3002</p></li></ol><h3 id="_4-5-2-phaser-\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_4-5-2-phaser-\u65B0\u7279\u6027" aria-hidden="true">#</a> 4.5.2 Phaser \u65B0\u7279\u6027</h3><p>\u7279\u6027 1\uFF1A\u52A8\u6001\u8C03\u6574\u7EBF\u7A0B\u4E2A\u6570</p><p>CyclicBarrier \u6240\u8981\u540C\u6B65\u7684\u7EBF\u7A0B\u4E2A\u6570\u662F\u5728\u6784\u9020\u51FD\u6570\u4E2D\u6307\u5B9A\u7684\uFF0C\u4E4B\u540E\u4E0D\u80FD\u66F4\u6539\uFF0C\u800C Phaser \u53EF\u4EE5\u5728\u8FD0\u884C\u671F\u95F4\u52A8\u6001\u5730\u8C03\u6574\u8981\u540C\u6B65\u7684\u7EBF\u7A0B\u4E2A\u6570\u3002Phaser \u63D0\u4F9B\u4E86\u4E0B\u9762\u8FD9\u4E9B\u51FD\u6570\u6765\u589E\u52A0\u3001\u51CF\u5C11\u6240\u8981\u540C\u6B65\u7684\u7EBF\u7A0B\u4E2A\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6CE8\u518C 1 \u4E2A</span>
<span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6CE8\u518C\u591A\u4E2A</span>
<span class="token function">bulkRegister</span><span class="token punctuation">(</span><span class="token keyword">int</span> parties<span class="token punctuation">)</span>
<span class="token comment">// \u89E3\u6CE8\u518C</span>
<span class="token function">arriveAndDeregister</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7279\u6027 2\uFF1A\u5C42\u6B21 Phaser</p><p>\u591A\u4E2A Phaser \u53EF\u4EE5\u7EC4\u6210\u5982\u56FE4-7 \u6240\u793A\u7684\u6811\u72B6\u7ED3\u6784\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5728\u6784\u9020\u51FD\u6570\u4E2D\u4F20\u5165\u7236 Phaser \u6765\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span><span class="token class-name">Phaser</span> parent<span class="token punctuation">,</span> <span class="token keyword">int</span> parties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+u+`" alt="\u56FE4-7" style="zoom:50%;"><p>\u56FE4-7 \u6811\u72B6\u7684 Phaser</p><p>\u5148\u7B80\u5355\u770B\u4E00\u4E0B Phaser \u5185\u90E8\u5173\u4E8E\u6811\u72B6\u7ED3\u6784\u7684\u5B58\u50A8\uFF0C\u5982\u4E0B\u9762\u4EE3\u7801\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Phaser</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Phaser</span> parent<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u53D1\u73B0\uFF0C\u5728 Phaser \u7684\u5185\u90E8\u7ED3\u6784\u4E2D\uFF0C\u6BCF\u4E2A Phaser \u8BB0\u5F55\u4E86\u81EA\u5DF1\u7684\u7236\u8282\u70B9\uFF0C\u4F46\u5E76\u6CA1\u6709\u8BB0\u5F55\u81EA\u5DF1\u7684\u5B50\u8282\u70B9\u5217\u8868\u3002\u6240\u4EE5\uFF0C\u6BCF\u4E2A Phaser \u77E5\u9053\u81EA\u5DF1\u7684\u7236\u8282\u70B9\u662F\u8C01\uFF0C\u4F46\u7236\u8282\u70B9\u5E76\u4E0D\u77E5\u9053\u81EA\u5DF1\u6709\u591A\u5C11\u4E2A\u5B50\u8282\u70B9\uFF0C\u5BF9\u7236\u8282\u70B9\u7684\u64CD\u4F5C\uFF0C\u662F\u901A\u8FC7\u5B50\u8282\u70B9\u6765\u5B9E\u73B0\u7684\u3002</p><p>\u6811\u72B6\u7684 Phaser \u600E\u4E48\u4F7F\u7528\u5462\uFF1F\u8003\u8651\u5982\u4E0B\u4EE3\u7801\uFF0C\u4F1A\u7EC4\u6210\u5982\u56FE4-8 \u6240\u793A\u7684\u6811\u72B6 Phaser\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Phaser</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Phaser</span> c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Phaser</span> c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Phaser</span> c3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+k+`" alt="\u56FE4-8" style="zoom:50%;"><p>\u56FE4-8 \u4EE3\u7801\u7EC4\u6210\u7684\u6811\u72B6 Phaser</p><p>\u672C\u6765 root \u6709\u4E24\u4E2A\u53C2\u4E0E\u8005\uFF0C\u7136\u540E\u4E3A\u5176\u52A0\u5165\u4E86\u4E24\u4E2A\u5B50 Phaser(c1, c2)\uFF0C\u6BCF\u4E2A\u5B50 Phaser \u4F1A\u7B97\u4F5C 1 \u4E2A\u53C2\u4E0E\u8005\uFF0Croot \u7684\u53C2\u4E0E\u8005\u5C31\u53D8\u6210 2 + 2 = 4 \u4E2A\u3002c1 \u672C\u6765\u6709 3 \u4E2A\u53C2\u4E0E\u8005\uFF0C\u4E3A\u5176\u52A0\u5165\u4E86\u4E00\u4E2A\u5B50 Phaser c3\uFF0C\u53C2\u4E0E\u8005\u6570\u91CF\u53D8\u6210 3 + 1 = 4 \u4E2A\u3002c3 \u7684\u53C2\u4E0E\u8005\u521D\u59CB\u4E3A 0\uFF0C\u540E\u7EED\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 register() \u51FD\u6570\u52A0\u5165\u3002</p><p>\u5BF9\u4E8E\u6811\u72B6 Phaser \u4E0A\u7684\u6BCF\u4E2A\u8282\u70B9\u6765\u8BF4\uFF0C\u53EF\u4EE5\u5F53\u4F5C\u4E00\u4E2A\u72EC\u7ACB\u7684 Phaser \u6765\u770B\u5F85\uFF0C\u5176\u8FD0\u4F5C\u673A\u5236\u548C\u4E00\u4E2A\u5355\u72EC\u7684 Phaser \u662F\u4E00\u6837\u7684\u3002\u5177\u4F53\u6765\u8BB2\uFF1A\u7236 Phaser \u5E76\u4E0D\u7528\u611F\u77E5\u5B50 Phaser \u7684\u5B58\u5728\uFF0C\u5F53\u5B50 Phaser \u4E2D\u6CE8\u518C\u7684\u53C2\u4E0E\u8005\u6570\u91CF\u5927\u4E8E 0 \u65F6\uFF0C\u4F1A\u628A\u81EA\u5DF1\u5411\u7236\u8282\u70B9\u6CE8\u518C\uFF1B\u5F53\u5B50 Phaser \u4E2D\u6CE8\u518C\u7684\u53C2\u4E0E\u8005\u6570\u91CF\u7B49\u4E8E 0 \u65F6\uFF0C\u4F1A\u81EA\u52A8\u5411\u7236\u8282\u70B9\u89E3\u6CE8\u518C\u3002\u7236 Phaser \u628A\u5B50 Phaser \u5F53\u4F5C\u4E00\u4E2A\u6B63\u5E38\u53C2\u4E0E\u7684\u7EBF\u7A0B\u5C31\u53EF\u4EE5\u4E86\u3002</p><h3 id="_4-5-3-state-\u53D8\u91CF\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_4-5-3-state-\u53D8\u91CF\u89E3\u6790" aria-hidden="true">#</a> 4.5.3 state \u53D8\u91CF\u89E3\u6790</h3><p>\u5927\u81F4\u4E86\u89E3\u4E86 Phaser \u7684\u7528\u6CD5\u548C\u65B0\u7279\u6027\u4E4B\u540E\uFF0C\u4E0B\u9762\u4ED4\u7EC6\u5256\u6790\u5176\u5B9E\u73B0\u539F\u7406\u3002Phaser \u6CA1\u6709\u57FA\u4E8E AQS \u6765\u5B9E\u73B0\uFF0C\u4F46\u5177\u5907 AQS \u7684\u6838\u5FC3\u7279\u6027\uFF1Astate \u53D8\u91CF\u3001CAS \u64CD\u4F5C\u3001\u963B\u585E\u961F\u5217\u3002\u5148\u4ECE state \u53D8\u91CF\u8BF4\u8D77\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Phaser</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> state<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A 64 \u4F4D\u7684 state \u53D8\u91CF\u88AB\u62C6\u6210 4 \u90E8\u5206\uFF0C\u5982\u56FE4-9 \u6240\u793A\u4E3A state \u53D8\u91CF\u5404\u90E8\u5206\u8868\u793A\u7684\u610F\u601D\u3002</p><img src="`+r+`" alt="\u56FE4-9" style="zoom:50%;"><p>\u56FE4-9 state \u53D8\u91CF\u5404\u90E8\u5206\u8868\u793A\u7684\u610F\u601D</p><p>\u6700\u9AD8\u4F4D 0 \u8868\u793A\u672A\u540C\u6B65\u5B8C\u6210\uFF0C1 \u8868\u793A\u540C\u6B65\u5B8C\u6210\uFF0C\u521D\u59CB\u6700\u9AD8\u4F4D\u4E3A 0\u3002</p><p>Phaser \u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217\u7684\u6210\u5458\u51FD\u6570\u6765\u4ECE state \u4E2D\u83B7\u53D6\u56FE4-9 \u4E2D\u7684\u51E0\u4E2A\u6570\u5B57\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7684\u8F6E\u6570\u3002\u5F53\u524D\u8F6E\u6570\u5DF2\u7ECF\u540C\u6B65\u5B8C\u6210\uFF0C\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u8D1F\u6570\uFF08\u6700\u9AD8\u4F4D\u4E3A 1\uFF09</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getPhase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u524D phase \u5DF2\u5B8C\u6210\uFF0C\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u8D1F\u6570\uFF08\u6700\u9AD8\u4F4D\u4E3A 1\uFF09</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>state <span class="token operator">&gt;&gt;&gt;</span> PHASE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> PHASE_SHIFT <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F53\u524D\u8F6E\u6570\u540C\u6B65\u5B8C\u6210\uFF0C\u6700\u9AD8\u4F4D\u4E3A 1</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> root<span class="token punctuation">.</span>state <span class="token operator">&lt;</span> <span class="token number">0L</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u83B7\u53D6\u603B\u7EBF\u7A0B\u6CE8\u518C\u6570</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getRegisteredParties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">partiesOf</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">partiesOf</span><span class="token punctuation">(</span><span class="token keyword">long</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5148\u628A state \u5F3A\u5236\u8F6C\u6210 32 \u4F4D int\uFF0C\u518D\u53F3\u79FB 16 \u4F4D</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>s <span class="token operator">&gt;&gt;&gt;</span> PARTIES_SHIFT<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> PARTIES_SHIFT <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>

<span class="token comment">// \u83B7\u53D6\u672A\u5230\u8FBE\u7684\u7EBF\u7A0B\u6570</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getUnarrivedParties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">unarrivedOf</span><span class="token punctuation">(</span><span class="token function">reconcileState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">unarrivedOf</span><span class="token punctuation">(</span><span class="token keyword">long</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> counts <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> s<span class="token punctuation">;</span>
    <span class="token comment">// \u622A\u53D6\u4F4E 16 \u4F4D</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>counts <span class="token operator">==</span> EMPTY<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> counts <span class="token operator">&amp;</span> UNARRIVED_MASK<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UNARRIVED_MASK <span class="token operator">=</span> <span class="token number">0xffff</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u518D\u770B\u4E00\u4E0B state \u53D8\u91CF\u5728\u6784\u9020\u51FD\u6570\u4E2D\u662F\u5982\u4F55\u88AB\u8D4B\u503C\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span><span class="token class-name">Phaser</span> parent<span class="token punctuation">,</span> <span class="token keyword">int</span> parties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// parties \u8D85\u51FA\u4E86\u6700\u5927\u4E2A\u6570\uFF082 \u7684 16 \u6B21\u65B9\uFF09\uFF0C\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parties <span class="token operator">&gt;&gt;&gt;</span> PARTIES_SHIFT <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal number of parties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521D\u59CB\u8F6E\u6570\u4E3A 0</span>
    <span class="token keyword">int</span> phase <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">(</span>parties <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>EMPTY <span class="token operator">:</span>
    <span class="token comment">// \u6216\u64CD\u4F5C\uFF0C\u8D4B\u7ED9 state\u3002\u6700\u9AD8\u4F4D\u4E3A 0\uFF0C\u8868\u793A\u672A\u5B8C\u6210\u540C\u6B65</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> phase <span class="token operator">&lt;&lt;</span> PHASE_SHIFT<span class="token punctuation">)</span> <span class="token operator">|</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> parties <span class="token operator">&lt;&lt;</span> PARTIES_SHIFT<span class="token punctuation">)</span> <span class="token operator">|</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> parties<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> EMPTY <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> PARTIES_SHIFT <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> PHASE_SHIFT <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53 parties = 0 \u65F6\uFF0Cstate \u88AB\u8D4B\u4E88\u4E00\u4E2A EMPTY \u5E38\u91CF\uFF0C\u5E38\u91CF\u4E3A 1\uFF1B</p><p>\u5F53 parties != 0 \u65F6\uFF0C\u628A phase \u503C\u5DE6\u79FB 32 \u4F4D\uFF1B\u628A parties \u5DE6\u79FB 16 \u4F4D\uFF1B\u7136\u540E parties \u4E5F\u4F5C\u4E3A\u6700\u4F4E\u7684 16 \u4F4D\uFF0C3 \u4E2A\u503C\u505A\u6216\u64CD\u4F5C\uFF0C\u8D4B\u503C\u7ED9 state\u3002\u8FD9\u4E2A\u8D4B\u503C\u64CD\u4F5C\u4E5F\u53CD\u6620\u4E86\u56FE4-9 \u7684\u610F\u601D\u3002</p><h3 id="_4-5-4-\u963B\u585E\u4E0E\u5524\u9192-treiber-stack" tabindex="-1"><a class="header-anchor" href="#_4-5-4-\u963B\u585E\u4E0E\u5524\u9192-treiber-stack" aria-hidden="true">#</a> 4.5.4 \u963B\u585E\u4E0E\u5524\u9192\uFF08Treiber Stack\uFF09</h3><p>\u57FA\u4E8E\u4E0A\u8FF0\u7684 state \u53D8\u91CF\uFF0C\u5BF9\u5176\u6267\u884C CAS \u64CD\u4F5C\uFF0C\u5E76\u8FDB\u884C\u76F8\u5E94\u7684\u963B\u585E\u4E0E\u5524\u9192\u3002\u5982\u56FE4-10 \u6240\u793A\uFF0C\u53F3\u8FB9\u7684\u4E3B\u7EBF\u7A0B\u4F1A\u8C03\u7528 awaitAdvance() \u8FDB\u884C\u963B\u585E\uFF1B\u5DE6\u8FB9\u7684 arrive() \u4F1A\u5BF9 state \u8FDB\u884C CAS \u7684\u7D2F\u51CF\u64CD\u4F5C\uFF0C\u5F53\u672A\u5230\u8FBE\u7684\u7EBF\u7A0B\u6570\u51CF\u5230 0 \u65F6\uFF0C\u5524\u9192\u53F3\u8FB9\u963B\u585E\u7684\u4E3B\u7EBF\u7A0B\u3002</p><img src="`+d+`" alt="\u56FE4-10" style="zoom:50%;"><p>\u56FE4-10 \u57FA\u4E8E state \u7684 CAS \u7684\u963B\u585E\u4E0E\u5524\u9192\u793A\u610F\u56FE</p><p>\u5728\u8FD9\u91CC\uFF0C\u963B\u585E\u4F7F\u7528\u7684\u662F\u4E00\u4E2A\u79F0\u4E3A Treiber Stack \u7684\u6570\u636E\u7ED3\u6784\uFF0C\u800C\u4E0D\u662F AQS \u7684\u53CC\u5411\u94FE\u8868\u3002Treiber Stack \u662F\u4E00\u4E2A\u65E0\u9501\u7684\u6808\uFF0C\u7531 R.Kent Treiber \u5728\u5176\u4E8E 1986 \u5E74\u53D1\u8868\u7684\u8BBA\u6587 Systems Programming: Coping with Para llelism \u4E2D\u9996\u6B21\u63D0\u51FA\u3002\u5B83\u662F\u4E00\u4E2A\u5355\u5411\u94FE\u8868\uFF0C\u51FA\u6808\u3001\u5165\u6808\u90FD\u5728\u94FE\u8868\u5934\u90E8\uFF0C\u6240\u4EE5\u53EA\u9700\u8981\u4E00\u4E2A head \u6307\u9488\uFF0C\u800C\u4E0D\u9700\u8981 tail \u6307\u9488\u3002\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Phaser</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">QNode</span> <span class="token keyword">implements</span> <span class="token class-name">ForkJoinPool<span class="token punctuation">.</span>ManagedBlocker</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5355\u5411\u94FE\u8868</span>
        <span class="token class-name">QNode</span> next<span class="token punctuation">;</span>
        <span class="token comment">// \u548C AQS \u4E00\u6837\uFF0C\u6BCF\u4E2A Node \u5BF9\u5E94\u4E00\u4E2A Thread \u5BF9\u8C61</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> thread<span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u94FE\u8868\u7684\u5934\u6307\u9488</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QNode</span><span class="token punctuation">&gt;</span></span> evenQ<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QNode</span><span class="token punctuation">&gt;</span></span> oddQ<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u51CF\u5C11\u5E76\u53D1\u51B2\u7A81\uFF0C\u8FD9\u91CC\u5B9A\u4E49\u4E86 2 \u4E2A\u94FE\u8868\uFF0C\u4E5F\u5C31\u662F 2 \u4E2A Treiber Stack\u3002\u5F53 phase \u4E3A\u5947\u6570\u8F6E\u7684\u65F6\u5019\uFF0C\u963B\u585E\u7EBF\u7A0B\u653E\u5728 oddQ \u91CC\u9762\uFF1B\u5F53 phase \u4E3A\u5076\u6570\u8F6E\u7684\u65F6\u5019\uFF0C\u963B\u585E\u7EBF\u7A0B\u653E\u5728 evenQ \u91CC\u9762\u3002\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QNode</span><span class="token punctuation">&gt;</span></span> <span class="token function">queueFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> phase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>phase <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> evenQ <span class="token operator">:</span> oddQ<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-5-arrive-\u51FD\u6570\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-5-5-arrive-\u51FD\u6570\u5206\u6790" aria-hidden="true">#</a> 4.5.5 arrive() \u51FD\u6570\u5206\u6790</h3><p>\u4E0B\u9762\u770B arrive() \u51FD\u6570\u662F\u5982\u4F55\u5BF9 state \u53D8\u91CF\u8FDB\u884C\u64CD\u4F5C\uFF0C\u53C8\u662F\u5982\u4F55\u5524\u9192\u7EBF\u7A0B\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">arrive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doArrive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">arriveAndDeregister</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doArrive</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>arrive() \u548C arriveAndDeregister() \u5185\u90E8\u8C03\u7528\u7684\u90FD\u662F doArrive(boolean) \u51FD\u6570\u3002\u533A\u522B\u5728\u4E8E\u524D\u8005\u53EA\u662F\u628A \u201C\u672A\u8FBE\u5230\u7EBF\u7A0B\u6570\u201D \u51CF 1\uFF1B\u540E\u8005\u5219\u628A \u201C\u672A\u5230\u8FBE\u7EBF\u7A0B\u6570\u201D \u548C \u201C\u4E0B\u4E00\u8F6E\u7684\u603B\u7EBF\u7A0B\u6570\u201D \u90FD\u51CF 1\u3002\u4E0B\u9762\u770B\u4E00\u4E0B doArrive(boolean) \u51FD\u6570\u7684\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">doArrive</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> deregister<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6700\u4F4E 16 \u4F4D\u51CF 1 \u6216\u8005\u4F4E 32 \u4F4D\u4E2D\u7684 2 \u4E2A 16 \u4F4D\u90FD\u51CF 1</span>
    <span class="token keyword">int</span> adj <span class="token operator">=</span> deregister <span class="token operator">?</span> ONE_ARRIVAL <span class="token operator">|</span> ONE_PARTY <span class="token operator">:</span> ONE_ARRIVAL<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">Phaser</span> root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> s <span class="token operator">=</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">?</span> state <span class="token operator">:</span> <span class="token function">reconcileState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> phase <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;&gt;&gt;</span> PHASE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> counts <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> s<span class="token punctuation">;</span>
        <span class="token keyword">int</span> unarrived <span class="token operator">=</span> <span class="token punctuation">(</span>counts <span class="token operator">&amp;</span> UNARRIVED_MASK<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>phase <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> phase<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>counts <span class="token operator">==</span> EMPTY <span class="token operator">||</span> unarrived <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">this</span> <span class="token operator">||</span> <span class="token function">reconcileState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> s<span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token function">badArrive</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// CAS \u51CF 1</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> stateOffset<span class="token punctuation">,</span> s<span class="token punctuation">,</span> s <span class="token operator">-=</span> adj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6240\u6709\u7EBF\u7A0B\u5230\u8FBE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>unarrived <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> n <span class="token operator">=</span> s <span class="token operator">&amp;</span> PARTIES_MASK<span class="token punctuation">;</span>  
                <span class="token keyword">int</span> nextUnarrived <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>n <span class="token operator">&gt;&gt;&gt;</span> PARTIES_SHIFT<span class="token punctuation">;</span>
                <span class="token comment">// \u5982\u679C\u7236 Phaser \u4E0D\u4E3A\u7A7A</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
                    <span class="token comment">// \u5148\u8C03\u7528 parent \u7684 doArrive</span>
                    <span class="token keyword">return</span> parent<span class="token punctuation">.</span><span class="token function">doArrive</span><span class="token punctuation">(</span>nextUnarrived <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">onAdvance</span><span class="token punctuation">(</span>phase<span class="token punctuation">,</span> nextUnarrived<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token comment">// \u6700\u9AD8\u4F4D\u7F6E\u4E3A 1</span>
                    n <span class="token operator">|=</span> TERMINATION_BIT<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nextUnarrived <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    n <span class="token operator">|=</span> EMPTY<span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    <span class="token comment">// \u4E0B\u4E00\u8F6E\u7684\u672A\u5230\u8FBE\u6570\u7B49\u4E8E\u603B\u7684\u7EBF\u7A0B\u4E2A\u6570</span>
                    n <span class="token operator">|=</span> nextUnarrived<span class="token punctuation">;</span>
                <span class="token comment">// phase \u52A0 1</span>
                n <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>phase <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> MAX_PHASE<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> PHASE_SHIFT<span class="token punctuation">;</span>
                <span class="token comment">// \u91CD\u7F6E state</span>
                UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> stateOffset<span class="token punctuation">,</span> s<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5524\u9192\u961F\u5217\u4E2D\u7B49\u5F85\u7684\u7EBF\u7A0B</span>
                <span class="token function">releaseWaiters</span><span class="token punctuation">(</span>phase<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5982\u679C\u6240\u6709\u7EBF\u7A0B\u6CA1\u6709\u5230\u8FBE\uFF0C\u53EA\u662F\u628A\u672A\u5230\u8FBE\u7EBF\u7A0B\u6570\u51CF 1\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A\uFF0C\u8BE5\u51FD\u6570\u8FD4\u56DE</span>
            <span class="token keyword">return</span> phase<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u4E0A\u9762\u7684\u51FD\u6570\uFF0C\u6709\u4EE5\u4E0B\u51E0\u70B9\u8BF4\u660E\uFF1A</p><ol><li><p>\u5B9A\u4E49\u4E86 2 \u4E2A\u5E38\u91CF\u5982\u4E0B\u3002\u5F53 deregister = false \u65F6\uFF0C\u53EA\u6700\u4F4E\u7684 16 \u4F4D\u9700\u8981\u51CF 1\uFF0Cadj = ONE_ARRIVAL\uFF1B\u5F53 deregister = true \u65F6\uFF0C\u4F4E 32 \u4F4D\u4E2D\u7684 2 \u4E2A 16 \u4F4D\u90FD\u9700\u8981\u51CF 1\uFF0Cadj = ONE_ARRIVAL | ONE_PARTY\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>  ONE_ARRIVAL <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>  ONE_PARTY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> PARTIES_SHIFT<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u628A\u672A\u5230\u8FBE\u7EBF\u7A0B\u6570\u51CF 1\u3002\u51CF\u4E86\u4E4B\u540E\uFF0C\u5982\u679C\u8FD8\u672A\u5230 0\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A\uFF0C\u76F4\u63A5\u8FD4\u56DE\u3002\u5982\u679C\u5230 0\uFF0C\u4F1A\u505A 2 \u4EF6\u4E8B\u60C5\uFF1A\u7B2C 1\uFF0C\u91CD\u7F6E state\uFF0C\u628A state \u7684\u672A\u5230\u8FBE\u7EBF\u7A0B\u4E2A\u6570\u91CD\u7F6E\u5230\u603B\u7684\u6CE8\u518C\u7684\u7EBF\u7A0B\u6570\u4E2D\uFF0C\u540C\u65F6 phase \u52A0 1\uFF1B\u7B2C 2\uFF0C\u5524\u9192\u961F\u5217\u4E2D\u7684\u7EBF\u7A0B\u3002</p><p>\u4E0B\u9762\u770B\u4E00\u4E0B\u5524\u9192\u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">releaseWaiters</span><span class="token punctuation">(</span><span class="token keyword">int</span> phase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">QNode</span> q<span class="token punctuation">;</span>
    <span class="token class-name">Thread</span> t<span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E phase \u662F\u5947\u6570\u8FD8\u662F\u5076\u6570\uFF0C\u51B3\u5B9A\u7528 evenQ \u8FD8\u662F oddQ\u3002</span>
    <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QNode</span><span class="token punctuation">&gt;</span></span> head <span class="token operator">=</span> <span class="token punctuation">(</span>phase <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> evenQ <span class="token operator">:</span> oddQ<span class="token punctuation">;</span>
    <span class="token comment">// \u904D\u5386\u6808</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> q<span class="token punctuation">.</span>phase <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>state <span class="token operator">&gt;&gt;&gt;</span> PHASE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> q<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> q<span class="token punctuation">.</span>thread<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            q<span class="token punctuation">.</span>thread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u904D\u5386\u6574\u4E2A\u6808\uFF0C\u53EA\u8981\u6808\u5F53\u4E2D\u8282\u70B9\u7684 phase \u4E0D\u7B49\u4E8E\u5F53\u524D Phaser \u7684 phase\uFF0C\u8BF4\u660E\u8BE5\u8282\u70B9\u4E0D\u662F\u5F53\u524D\u8F6E\u7684\uFF0C\u800C\u662F\u524D\u4E00\u8F6E\u7684\uFF0C\u5E94\u8BE5\u88AB\u91CA\u653E\u5E76\u5524\u9192\u3002\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B\u7EBF\u7A0B\u662F\u5982\u4F55\u88AB\u963B\u585E\u7684\u3002</p></li></ol><h3 id="_4-5-6-awaitadvance-\u51FD\u6570\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-5-6-awaitadvance-\u51FD\u6570\u5206\u6790" aria-hidden="true">#</a> 4.5.6 awaitAdvance() \u51FD\u6570\u5206\u6790</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">awaitAdvance</span><span class="token punctuation">(</span><span class="token keyword">int</span> phase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Phaser</span> root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">;</span>
    <span class="token comment">// \u5F53\u53EA\u6709\u4E00\u4E2A Phaser\uFF0C\u6CA1\u6709\u6811\u72B6\u7ED3\u6784\u65F6\uFF0Croot = this</span>
    <span class="token keyword">long</span> s <span class="token operator">=</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">?</span> state <span class="token operator">:</span> <span class="token function">reconcileState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>s <span class="token operator">&gt;&gt;&gt;</span> PHASE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// phase \u5DF2\u7ECF\u7ED3\u675F\uFF0C\u4E0D\u518D\u963B\u585E\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>phase <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> phase<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> phase<span class="token punctuation">)</span>
        <span class="token comment">// \u963B\u585E\u5728 phase \u8FD9\u4E00\u8F6E\u4E0A\u9762</span>
        <span class="token keyword">return</span> root<span class="token punctuation">.</span><span class="token function">internalAwaitAdvance</span><span class="token punctuation">(</span>phase<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u7684 while \u5FAA\u73AF\u4E2D\u6709 4 \u4E2A\u5206\u652F\uFF1A\u521D\u59CB\u7684\u65F6\u5019\uFF0Cnode == null\uFF0C\u8FDB\u5165\u7B2C 1 \u4E2A\u5206\u652F\u8FDB\u884C\u81EA\u65CB\uFF0C\u81EA\u65CB\u6B21\u6570\u6EE1\u8DB3\u4E4B\u540E\uFF0C\u4F1A\u65B0\u5EFA\u4E00\u4E2A QNode \u8282\u70B9\uFF1B\u4E4B\u540E\u6267\u884C\u7B2C 3\u3001\u7B2C 4 \u4E2A\u5206\u652F\uFF0C\u5206\u522B\u628A\u8BE5\u8282\u70B9\u5165\u6808\u5E76\u963B\u585E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">internalAwaitAdvance</span><span class="token punctuation">(</span><span class="token keyword">int</span> phase<span class="token punctuation">,</span> <span class="token class-name">QNode</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">releaseWaiters</span><span class="token punctuation">(</span>phase <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          
    <span class="token keyword">boolean</span> queued <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>           
    <span class="token keyword">int</span> lastUnarrived <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            
    <span class="token keyword">int</span> spins <span class="token operator">=</span> SPINS_PER_ARRIVAL<span class="token punctuation">;</span>
    <span class="token keyword">long</span> s<span class="token punctuation">;</span>
    <span class="token keyword">int</span> p<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> state<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> PHASE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> phase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u81EA\u65CB</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           
            <span class="token keyword">int</span> unarrived <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> s <span class="token operator">&amp;</span> UNARRIVED_MASK<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>unarrived <span class="token operator">!=</span> lastUnarrived <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>lastUnarrived <span class="token operator">=</span> unarrived<span class="token punctuation">)</span> <span class="token operator">&lt;</span> NCPU<span class="token punctuation">)</span>
                spins <span class="token operator">+=</span> SPINS_PER_ARRIVAL<span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> interrupted <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u7531\u81EA\u65CB\u7ED3\u675F\uFF0C\u5EFA\u4E00\u4E2A\u8282\u70B9\uFF0C\u63A5\u4E0B\u6765\u8FDB\u5165\u963B\u585E</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>interrupted <span class="token operator">||</span> <span class="token operator">--</span>spins <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> phase<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                node<span class="token punctuation">.</span>wasInterrupted <span class="token operator">=</span> interrupted<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7531\u963B\u585E\u4E2D\u5524\u9192\uFF0C\u9000\u51FA while \u5FAA\u73AF</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">isReleasable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>queued<span class="token punctuation">)</span> <span class="token punctuation">{</span>           
            <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QNode</span><span class="token punctuation">&gt;</span></span> head <span class="token operator">=</span> <span class="token punctuation">(</span>phase <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> evenQ <span class="token operator">:</span> oddQ<span class="token punctuation">;</span>
            <span class="token class-name">QNode</span> q <span class="token operator">=</span> node<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> q<span class="token punctuation">.</span>phase <span class="token operator">==</span> phase<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>state <span class="token operator">&gt;&gt;&gt;</span> PHASE_SHIFT<span class="token punctuation">)</span> <span class="token operator">==</span> phase<span class="token punctuation">)</span> 
                <span class="token comment">// \u8282\u70B9\u5165\u6808</span>
                queued <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8C03\u7528 node.block() \u963B\u585E</span>
                <span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span><span class="token function">managedBlock</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                node<span class="token punctuation">.</span>wasInterrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u8C03\u7528\u4E86 ForkJoinPool.managedBlock(ManagedBlocker blocker) \u51FD\u6570\uFF0C\u76EE\u7684\u662F\u628A node \u5BF9\u5E94\u7684\u7EBF\u7A0B\u963B\u585E\u3002ManagerdBlocker \u662F ForkJoinPool \u91CC\u9762\u7684\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">interface</span> <span class="token class-name">ManagedBlocker</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">isReleasable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>QNode \u5B9E\u73B0\u4E86\u8BE5\u63A5\u53E3\uFF0C\u5B9E\u73B0\u539F\u7406\u8FD8\u662F park()\uFF0C\u5982\u4E0B\u6240\u793A\u3002\u4E4B\u6240\u4EE5\u6CA1\u6709\u76F4\u63A5\u4F7F\u7528 park() / unpark() \u6765\u5B9E\u73B0\u963B\u585E\u3001\u5524\u9192\uFF0C\u800C\u662F\u5C01\u88C5\u4E86 ManagedBlocker \u8FD9\u4E00\u5C42\uFF0C\u4E3B\u8981\u662F\u51FA\u4E8E\u4F7F\u7528\u4E0A\u7684\u65B9\u4FBF\u8003\u8651\u3002\u4E00\u65B9\u9762\u662F park() \u53EF\u80FD\u88AB\u4E2D\u65AD\u5524\u9192\uFF0C\u53E6\u4E00\u65B9\u9762\u662F\u5E26\u8D85\u65F6\u65F6\u95F4\u7684 park()\uFF0C\u628A\u8FD9\u4E8C\u8005\u90FD\u5C01\u88C5\u5728\u4E00\u8D77\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">QNode</span> <span class="token keyword">implements</span> <span class="token class-name">ForkJoinPool<span class="token punctuation">.</span>ManagedBlocker</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isReleasable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>thread <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>phaser<span class="token punctuation">.</span><span class="token function">getPhase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> phase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            thread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            wasInterrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>wasInterrupted <span class="token operator">&amp;&amp;</span> interruptible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            thread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                nanos <span class="token operator">-=</span> now <span class="token operator">-</span> lastTime<span class="token punctuation">;</span>
                lastTime <span class="token operator">=</span> now<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&lt;=</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                thread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// block \u51FD\u6570\u5C01\u88C5\u4E86 park() \u548C parkNanos(xx)\uFF0C\u4F7F\u7528\u8D77\u6765\u66F4\u65B9\u4FBF</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReleasable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timed<span class="token punctuation">)</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">parkNanos</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> nanos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">isReleasable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7406\u89E3\u4E86 arrive() \u548C awaitAdvance()\uFF0CarriveAndAwaitAdvance() \u5C31\u662F\u4E8C\u8005\u7684\u4E00\u4E2A\u7EC4\u5408\u7248\u672C\uFF0C\u6B64\u5904\u4E0D\u518D\u5C55\u5F00\u5206\u6790\u3002</p>`,130),b=[m];function w(y,h){return s(),a("div",null,b)}var x=n(v,[["render",w],["__file","\u7B2C4\u7AE0\u540C\u6B65\u5DE5\u5177\u7C7B.html.vue"]]);export{x as default};
