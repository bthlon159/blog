import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.0d56c066.js";var e="/assets/\u56FE2-1.f54727cc.jpeg",t="/assets/\u56FE2-2.64229535.jpeg",o="/assets/\u56FE2-3.bfd60908.jpeg",c="/assets/\u56FE2-4.2ed316d2.jpeg",l="/assets/\u56FE2-5.69a1fbda.jpeg";const i={},u=p('<h1 id="\u7B2C-2-\u7AE0-atomic-\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7B2C-2-\u7AE0-atomic-\u7C7B" aria-hidden="true">#</a> \u7B2C 2 \u7AE0 Atomic \u7C7B</h1><p>\u4ECE\u672C\u7AE0\u5F00\u59CB\uFF0C\u6211\u4EEC\u5C06\u4ECE\u7B80\u5355\u5230\u590D\u6742\uFF0C\u4ECE\u5E95\u5C42\u5230\u4E0A\u5C42\uFF0C\u4E00\u6B65\u6B65\u5256\u6790\u6574\u4E2A Concurrent \u5305\u7684\u5C42\u6B21\u4F53\u7CFB\uFF0C\u5982\u56FE2-1 \u6240\u793A\u3002</p><img src="'+e+`" alt="\u56FE2-1" style="zoom:50%;"><p>\u56FE2-1 \u6574\u4E2A Concurrent \u5305\u7684\u5C42\u6B21\u4F53\u7CFB</p><h2 id="_2-1-atomicinteger-\u548C-atomiclong" tabindex="-1"><a class="header-anchor" href="#_2-1-atomicinteger-\u548C-atomiclong" aria-hidden="true">#</a> 2.1 AtomicInteger \u548C AtomicLong</h2><p>\u5982\u4E0B\u9762\u4EE3\u7801\u6240\u793A\uFF0C\u5BF9\u4E8E\u4E00\u4E2A\u6574\u6570\u7684\u52A0\u51CF\u64CD\u4F5C\uFF0C\u8981\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u9700\u8981\u52A0\u9501\uFF0C\u4E5F\u5C31\u662F\u52A0 synchronized \u5173\u952E\u5B57\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u7EBF\u7A0B A \u8C03\u7528</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token keyword">synchronized</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u7EBF\u7A0B B \u8C03\u7528</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token keyword">synchronized</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        count<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u6709\u4E86 Concurrent \u5305\u7684 Atomic \u76F8\u5173\u7684\u7C7B\u4E4B\u540E\uFF0Csynchronized \u5173\u952E\u5B57\u53EF\u4EE5\u7528 AtomicInteger \u4EE3\u66FF\uFF0C\u5176\u6027\u80FD\u66F4\u597D\uFF0C\u5BF9\u5E94\u7684\u4EE3\u7801\u53D8\u4E3A\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        count<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        count<span class="token punctuation">.</span><span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5BF9\u5E94\u7684\u6E90\u7801\u5982\u4E0B\uFF08\u6E90\u81EA JDK 7\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicInteger</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u5C01\u88C5\u4E86\u4E00\u4E2A int \u53D8\u91CF\uFF0C\u5BF9\u5176\u8FDB\u884C CAS \u64CD\u4F5C</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span>
    <span class="token comment">//...</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> current <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> current <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> current<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> current <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> current <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> current<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u6E90\u7801\u5F88\u7B80\u5355\uFF0C\u4F46\u5374\u53CD\u6620\u4E86\u51E0\u4E2A\u5F88\u91CD\u8981\u7684\u601D\u60F3\uFF0C\u4E0B\u9762\u4E00\u4E00\u8BF4\u660E\u3002</p><h3 id="_2-1-1-\u60B2\u89C2\u9501\u4E0E\u4E50\u89C2\u9501" tabindex="-1"><a class="header-anchor" href="#_2-1-1-\u60B2\u89C2\u9501\u4E0E\u4E50\u89C2\u9501" aria-hidden="true">#</a> 2.1.1 \u60B2\u89C2\u9501\u4E0E\u4E50\u89C2\u9501</h3><p>\u5BF9\u4E8E\u60B2\u89C2\u9501\uFF0C\u4F5C\u8005\u8BA4\u4E3A\u6570\u636E\u53D1\u751F\u5E76\u53D1\u51B2\u7A81\u7684\u6982\u7387\u5F88\u5927\uFF0C\u6240\u4EE5\u8BFB\u64CD\u4F5C\u4E4B\u524D\u5C31\u4E0A\u9501\u3002synchronized \u5173\u952E\u5B57\uFF0C\u4EE5\u53CA\u540E\u9762\u8981\u8BB2\u7684 ReentrantLock \u90FD\u662F\u60B2\u89C2\u9501\u7684\u5178\u578B\u4F8B\u5B50\u3002</p><p>\u5BF9\u4E8E\u4E50\u89C2\u9501\uFF0C\u4F5C\u8005\u8BA4\u4E3A\u6570\u636E\u53D1\u751F\u5E76\u53D1\u51B2\u7A81\u7684\u6982\u7387\u6BD4\u8F83\u5C0F\uFF0C\u6240\u4EE5\u8BFB\u64CD\u4F5C\u4E4B\u524D\u4E0D\u4E0A\u9501\u3002\u7B49\u5230\u5199\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u518D\u5224\u65AD\u6570\u636E\u5728\u6B64\u671F\u95F4\u662F\u5426\u88AB\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u4E86\u3002\u5982\u679C\u88AB\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u4E86\uFF0C\u5C31\u628A\u6570\u636E\u91CD\u65B0\u8BFB\u51FA\u6765\uFF0C\u91CD\u590D\u8BE5\u8FC7\u7A0B\uFF1B\u5982\u679C\u6CA1\u6709\u88AB\u4FEE\u6539\uFF0C\u5C31\u5199\u56DE\u53BB\u3002\u5224\u65AD\u6570\u636E\u662F\u5426\u88AB\u4FEE\u6539\uFF0C\u540C\u65F6\u5199\u56DE\u65B0\u503C\uFF0C\u8FD9\u4E24\u4E2A\u64CD\u4F5C\u8981\u5408\u6210\u4E00\u4E2A\u539F\u5B50\u64CD\u4F5C\uFF0C\u4E5F\u5C31\u662F CAS\uFF08Compare And Set\uFF09\u3002</p><p>AtomicInteger \u7684\u5B9E\u73B0\u5C31\u662F\u5178\u578B\u7684\u4E50\u89C2\u9501\uFF0C\u5728 MySQL \u548C Redis \u4E2D\u6709\u7C7B\u4F3C\u7684\u601D\u8DEF\u3002</p><h3 id="_2-1-2-unsafe-\u7684-cas-\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#_2-1-2-unsafe-\u7684-cas-\u8BE6\u89E3" aria-hidden="true">#</a> 2.1.2 Unsafe \u7684 CAS \u8BE6\u89E3</h3><p>\u4E0A\u9762\u8C03\u7528\u7684 CAS \u51FD\u6570\uFF0C\u5176\u5B9E\u662F\u5C01\u88C5\u7684 Unsafe \u7C7B\u4E2D\u7684\u4E00\u4E2A native \u51FD\u6570\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AtomicInteger \u5C01\u88C5\u8FC7\u7684 compareAndSet \u6709\u4E24\u4E2A\u53C2\u6570\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570 expect \u662F\u6307\u53D8\u91CF\u7684\u65E7\u503C\uFF08\u662F\u8BFB\u51FA\u6765\u7684\u503C\uFF0C\u5199\u56DE\u53BB\u7684\u65F6\u5019\uFF0C\u5E0C\u671B\u6CA1\u6709\u88AB\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\uFF0C\u6240\u4EE5\u79F0\u4E3A expect\uFF09\uFF1B\u7B2C\u4E8C\u4E2A\u53C2\u6570 update \u662F\u6307\u53D8\u91CF\u7684\u65B0\u503C\uFF08\u4FEE\u6539\u8FC7\u7684\uFF0C\u5E0C\u671B\u5199\u5165\u7684\u503C\uFF09\u3002\u5F53 expect \u7B49\u4E8E\u53D8\u91CF\u5F53\u524D\u7684\u503C\u65F6\uFF0C\u8BF4\u660E\u5728\u4FEE\u6539\u7684\u671F\u95F4\uFF0C\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u5BF9\u6B64\u53D8\u91CF\u8FDB\u884C\u8FC7\u4FEE\u6539\uFF0C\u6240\u4EE5\u53EF\u4EE5\u6210\u529F\u5199\u5165\uFF0C\u53D8\u91CF\u88AB\u66F4\u65B0\u4E3A update\uFF0C\u8FD4\u56DE true\uFF1B\u5426\u5219\u8FD4\u56DE false\u3002</p><p>Unsafe \u7C7B\u662F\u6574\u4E2A Concurrent \u5305\u7684\u57FA\u7840\uFF0C\u91CC\u9762\u6240\u6709\u51FD\u6570\u90FD\u662F native \u7684\u3002\u5177\u4F53\u5230 compareAndSwapInt \u51FD\u6570\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span> var2<span class="token punctuation">,</span> <span class="token keyword">int</span> var4<span class="token punctuation">,</span> <span class="token keyword">int</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u6709 4 \u4E2A\u53C2\u6570\u3002\u5728\u524D\u4E24\u4E2A\u53C2\u6570\u4E2D\uFF0C\u7B2C\u4E00\u4E2A\u662F\u5BF9\u8C61\uFF08\u4E5F\u5C31\u662F AtomicInteger \u5BF9\u8C61\uFF09\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u5BF9\u8C61\u7684\u6210\u5458\u53D8\u91CF\uFF08\u4E5F\u5C31\u662F AtomictInteger \u91CC\u9762\u5305\u7684 int \u53D8\u91CF value\uFF09\uFF0C\u540E\u4E24\u4E2A\u53C2\u6570\u4FDD\u6301\u4E0D\u53D8\u3002</p><p>\u8981\u7279\u522B\u8BF4\u660E\u4E00\u4E0B\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5B83\u662F\u4E00\u4E2A long \u578B\u7684\u6574\u6570\uFF0C\u7ECF\u5E38\u88AB\u79F0\u4E3A xxxOffset\uFF0C\u610F\u601D\u662F\u67D0\u4E2A\u6210\u5458\u53D8\u91CF\u5728\u5BF9\u5E94\u7684\u7C7B\u4E2D\u7684\u5185\u5B58\u504F\u79FB\u91CF\uFF08\u8BE5\u53D8\u91CF\u5728\u5185\u5B58\u4E2D\u7684\u4F4D\u7F6E\uFF09\uFF0C\u8868\u793A\u8BE5\u6210\u5458\u53D8\u91CF\u672C\u8EAB\u3002\u5728 Unsafe \u4E2D\u4E13\u95E8\u6709\u4E00\u4E2A\u51FD\u6570\uFF0C\u628A\u6210\u5458\u53D8\u91CF\u8F6C\u5316\u6210\u504F\u79FB\u91CF\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">long</span> <span class="token function">objectFieldOffset</span><span class="token punctuation">(</span><span class="token class-name">Field</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6240\u6709\u8C03\u7528 CAS \u7684\u5730\u65B9\uFF0C\u90FD\u4F1A\u5148\u901A\u8FC7\u8FD9\u4E2A\u51FD\u6570\u628A\u6210\u5458\u53D8\u91CF\u8F6C\u6362\u6210\u4E00\u4E2A Offset\u3002\u4EE5 AtomicInteger \u4E3A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicInteger</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Unsafe</span> unsafe <span class="token operator">=</span> <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> valueOffset<span class="token punctuation">;</span>
    
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            valueOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span><span class="token class-name">AtomicInteger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0C\u65E0\u8BBA\u662F Unsafe \u8FD8\u662F valueOffset\uFF0C\u90FD\u662F\u9759\u6001\u7684\uFF0C\u4E5F\u5C31\u662F\u7C7B\u7EA7\u522B\u7684\uFF0C\u6240\u6709\u5BF9\u8C61\u5171\u7528\u7684\u3002</p><p>\u5728\u8F6C\u5316\u7684\u65F6\u5019\uFF0C\u5148\u901A\u8FC7\u53CD\u5C04\uFF08getDeclaredField\uFF09\u83B7\u53D6 value \u6210\u5458\u53D8\u91CF\u5BF9\u5E94\u7684 Field \u5BF9\u8C61\uFF0C\u518D\u901A\u8FC7 objectFieldOffset \u51FD\u6570\u8F6C\u5316\u6210 valueOffset\u3002\u6B64\u5904\u7684 valueOffset \u5C31\u4EE3\u8868\u4E86 value \u53D8\u91CF\u672C\u8EAB\uFF0C\u540E\u9762\u6267\u884C CAS \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u4E0D\u662F\u76F4\u63A5\u64CD\u4F5C value\uFF0C\u800C\u662F\u64CD\u4F5C valueOffset\u3002</p><h3 id="_2-1-3-\u81EA\u65CB\u4E0E\u963B\u585E" tabindex="-1"><a class="header-anchor" href="#_2-1-3-\u81EA\u65CB\u4E0E\u963B\u585E" aria-hidden="true">#</a> 2.1.3 \u81EA\u65CB\u4E0E\u963B\u585E</h3><p>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u62FF\u4E0D\u5230\u9501\u7684\u65F6\u5019\uFF0C\u6709\u4EE5\u4E0B\u4E24\u79CD\u57FA\u672C\u7684\u7B49\u5F85\u7B56\u7565\u3002</p><p>\u7B56\u7565 1\uFF1A\u653E\u5F03 CPU\uFF0C\u8FDB\u5165\u963B\u585E\u72B6\u6001\uFF0C\u7B49\u5F85\u540E\u7EED\u88AB\u5524\u9192\uFF0C\u518D\u91CD\u65B0\u88AB\u64CD\u4F5C\u7CFB\u7EDF\u8C03\u5EA6\u3002</p><p>\u7B56\u7565 2\uFF1A\u4E0D\u653E\u5F03 CPU\uFF0C\u7A7A\u8F6C\uFF0C\u4E0D\u65AD\u91CD\u8BD5\uFF0C\u4E5F\u5C31\u662F\u6240\u8C13\u7684 \u201C\u81EA\u65CB\u201D\u3002</p><p>\u5F88\u663E\u7136\uFF0C\u5982\u679C\u662F\u5355\u6838\u7684 CPU\uFF0C\u53EA\u80FD\u7528\u7B56\u7565 1\u3002\u56E0\u4E3A\u5982\u679C\u4E0D\u653E\u5F03 CPU\uFF0C\u90A3\u4E48\u5176\u4ED6\u7EBF\u7A0B\u65E0\u6CD5\u8FD0\u884C\uFF0C\u4E5F\u5C31\u65E0\u6CD5\u91CA\u653E\u9501\u3002\u4F46\u5BF9\u4E8E\u591A CPU \u6216\u8005\u591A\u6838\uFF0C\u7B56\u7565 2 \u5C31\u5F88\u6709\u7528\u4E86\uFF0C\u56E0\u4E3A\u6CA1\u6709\u7EBF\u7A0B\u5207\u6362\u7684\u5F00\u9500\u3002</p><p>AtomicInteger \u7684\u5B9E\u73B0\u5C31\u7528\u7684\u662F \u201C\u81EA\u65CB\u201D \u7B56\u7565\uFF0C\u5982\u679C\u62FF\u4E0D\u5230\u9501\uFF0C\u5C31\u4F1A\u4E00\u76F4\u91CD\u8BD5\u3002</p><p>\u6709\u4E00\u70B9\u8981\u8BF4\u660E\uFF1A\u8FD9\u4E24\u79CD\u7B56\u7565\u5E76\u4E0D\u662F\u4E92\u65A5\u7684\uFF0C\u53EF\u4EE5\u7ED3\u5408\u4F7F\u7528\u3002\u5982\u679C\u62FF\u4E0D\u5230\u9501\uFF0C\u5148\u81EA\u65CB\u51E0\u5708\uFF1B\u5982\u679C\u81EA\u65CB\u8FD8\u62FF\u4E0D\u5230\u9501\uFF0C\u518D\u963B\u585E\uFF0Csynchronized \u5173\u952E\u5B57\u5C31\u662F\u8FD9\u6837\u7684\u5B9E\u73B0\u7B56\u7565\u3002</p><p>\u9664\u4E86 AtomicInteger\uFF0CAtomicLong \u4E5F\u662F\u540C\u6837\u7684\u539F\u7406\uFF0C\u6B64\u5904\u4E0D\u518D\u8D58\u8FF0\u3002</p><h2 id="_2-2-atomicboolean-\u548C-atomicreference" tabindex="-1"><a class="header-anchor" href="#_2-2-atomicboolean-\u548C-atomicreference" aria-hidden="true">#</a> 2.2 AtomicBoolean \u548C AtomicReference</h2><h3 id="_2-2-1-\u4E3A\u4EC0\u4E48\u9700\u8981-atomicboolean" tabindex="-1"><a class="header-anchor" href="#_2-2-1-\u4E3A\u4EC0\u4E48\u9700\u8981-atomicboolean" aria-hidden="true">#</a> 2.2.1 \u4E3A\u4EC0\u4E48\u9700\u8981 AtomicBoolean</h3><p>\u5BF9\u4E8E int \u6216\u8005 long \u578B\u53D8\u91CF\uFF0C\u9700\u8981\u8FDB\u884C\u52A0\u51CF\u64CD\u4F5C\uFF0C\u6240\u4EE5\u8981\u52A0\u9501\uFF1B\u4F46\u5BF9\u4E8E\u4E00\u4E2A boolean \u7C7B\u578B\u6765\u8BF4\uFF0Ctrue \u6216 false \u7684\u8D4B\u503C\u548C\u53D6\u503C\u64CD\u4F5C\uFF0C\u52A0\u4E0A volatile \u5173\u952E\u5B57\u5C31\u591F\u4E86\uFF0C\u4E3A\u4EC0\u4E48\u8FD8\u9700\u8981 AtomicBoolean \u5462\uFF1F</p><p>\u8FD9\u662F\u56E0\u4E3A\u5F80\u5F80\u8981\u5B9E\u73B0\u4E0B\u9762\u8FD9\u79CD\u529F\u80FD\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8981\u5B9E\u73B0 compare \u548C set \u4E24\u4E2A\u64CD\u4F5C\u5408\u5728\u4E00\u8D77\u7684\u539F\u5B50\u6027\uFF0C\u800C\u8FD9\u4E5F\u6B63\u662F CAS \u63D0\u4F9B\u7684\u529F\u80FD\u3002\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u5C31\u53D8\u6210\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u6837\u5730\uFF0CAtomicReference \u4E5F\u9700\u8981\u540C\u6837\u7684\u529F\u80FD\uFF0C\u5BF9\u5E94\u7684\u51FD\u6570\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token class-name">V</span> expect<span class="token punctuation">,</span> <span class="token class-name">V</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwap</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0Cexpect \u662F\u65E7\u7684\u5F15\u7528\uFF0Cupdate \u4E3A\u65B0\u7684\u5F15\u7528\u3002</p><h3 id="_2-2-2-\u5982\u4F55\u652F\u6301-boolean-\u548C-double-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_2-2-2-\u5982\u4F55\u652F\u6301-boolean-\u548C-double-\u7C7B\u578B" aria-hidden="true">#</a> 2.2.2 \u5982\u4F55\u652F\u6301 boolean \u548C double \u7C7B\u578B</h3><p>\u5728 Unsafe \u7C7B\u4E2D\uFF0C\u53EA\u63D0\u4F9B\u4E86\u4E09\u79CD\u7C7B\u578B\u7684 CAS \u64CD\u4F5C\uFF1Aint\u3001long\u3001Object\uFF08\u4E5F\u5C31\u662F\u5F15\u7528\u7C7B\u578B\uFF09\u3002\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Unsafe</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span> var2<span class="token punctuation">,</span> <span class="token class-name">Object</span> var4<span class="token punctuation">,</span> <span class="token class-name">Object</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span> var2<span class="token punctuation">,</span> <span class="token keyword">int</span> var4<span class="token punctuation">,</span> <span class="token keyword">int</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span> var2<span class="token punctuation">,</span> <span class="token keyword">long</span> var4<span class="token punctuation">,</span> <span class="token keyword">long</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u8981\u4FEE\u6539\u7684\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u5BF9\u8C61\u7684\u6210\u5458\u53D8\u91CF\u5728\u5185\u5B58\u4E2D\u7684\u4F4D\u7F6E\uFF08\u4E00\u4E2A long \u578B\u7684\u6574\u6570\uFF09\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570\u662F\u8BE5\u53D8\u91CF\u7684\u65E7\u503C\uFF0C\u7B2C\u56DB\u4E2A\u53C2\u6570\u662F\u8BE5\u53D8\u91CF\u7684\u65B0\u503C\u3002</p><p>AtomicBoolean \u7C7B\u578B\u600E\u4E48\u652F\u6301\u5462\uFF1F</p><p>\u5BF9\u4E8E\u7528 int \u578B\u6765\u4EE3\u66FF\u7684\uFF0C\u5728\u5165\u53C2\u7684\u65F6\u5019\uFF0C\u5C06 boolean \u7C7B\u578B\u8F6C\u6362\u6210 int \u7C7B\u578B\uFF1B\u5728\u8FD4\u56DE\u503C\u7684\u65F6\u5019\uFF0C\u5C06 int \u7C7B\u578B\u8F6C\u6362\u6210 boolean \u7C7B\u578B\u3002\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicBoolean</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> value <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> expect<span class="token punctuation">,</span> <span class="token keyword">boolean</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> e <span class="token operator">=</span> expect <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> u <span class="token operator">=</span> update <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> e<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u662F double \u7C7B\u578B\uFF0C\u53C8\u5982\u4F55\u652F\u6301\u5462\uFF1F</p><p>\u8FD9\u4F9D\u8D56 double \u7C7B\u578B\u63D0\u4F9B\u7684\u4E00\u5BF9 double \u7C7B\u578B\u548C long \u7C7B\u578B\u4E92\u8F6C\u7684\u51FD\u6570\uFF0C\u8FD9\u70B9\u5728\u4ECB\u7ECD DoubleAdder \u7684\u65F6\u5019\u4F1A\u63D0\u5230\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Double</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">double</span> <span class="token function">longBitsToDouble</span><span class="token punctuation">(</span><span class="token keyword">long</span> bits<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">long</span> <span class="token function">doubleToRawLongBits</span><span class="token punctuation">(</span><span class="token keyword">double</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-atomicstampedreference-\u548C-atomicmarkablereference" tabindex="-1"><a class="header-anchor" href="#_2-3-atomicstampedreference-\u548C-atomicmarkablereference" aria-hidden="true">#</a> 2.3 AtomicStampedReference \u548C AtomicMarkableReference</h2><h3 id="_2-3-1-aba-\u95EE\u9898\u4E0E\u89E3\u51B3\u529E\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-3-1-aba-\u95EE\u9898\u4E0E\u89E3\u51B3\u529E\u6CD5" aria-hidden="true">#</a> 2.3.1 ABA \u95EE\u9898\u4E0E\u89E3\u51B3\u529E\u6CD5</h3><p>\u5230\u76EE\u524D\u4E3A\u6B62\uFF0CCAS \u90FD\u662F\u57FA\u4E8E \u201C\u503C\u201D \u6765\u505A\u6BD4\u8F83\u7684\u3002\u4F46\u5982\u679C\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u628A\u53D8\u91CF\u7684\u503C\u4ECE A \u6539\u4E3A B\uFF0C\u518D\u4ECE B \u6539\u56DE\u5230 A\uFF0C\u90A3\u4E48\u5C3D\u7BA1\u4FEE\u6539\u8FC7\u4E24\u6B21\uFF0C\u53EF\u662F\u5728\u5F53\u524D\u7EBF\u7A0B\u505A CAS \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u5374\u4F1A\u56E0\u4E3A\u503C\u6CA1\u53D8\u800C\u8BA4\u4E3A\u6570\u636E\u6CA1\u6709\u88AB\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u8FC7\uFF0C\u8FD9\u5C31\u662F\u6240\u8C13\u7684 ABA \u95EE\u9898\u3002</p><p>\u8981\u89E3\u51B3 ABA \u95EE\u9898\uFF0C\u4E0D\u4EC5\u8981\u6BD4\u8F83 \u201C\u503C\u201D\uFF0C\u8FD8\u8981\u6BD4\u8F83 \u201C\u7248\u672C\u53F7\u201D\uFF0C\u800C\u8FD9\u6B63\u662F AtomicStampedReference \u505A\u7684\u4E8B\u60C5\uFF0C\u5176\u5BF9\u5E94\u7684 CAS \u51FD\u6570\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token class-name">V</span> expectedReference<span class="token punctuation">,</span> <span class="token class-name">V</span> newReference<span class="token punctuation">,</span> <span class="token keyword">int</span> expectedStamp<span class="token punctuation">,</span> <span class="token keyword">int</span> newStamp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E4B\u524D\u7684 CAS \u53EA\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u8FD9\u91CC\u7684 CAS \u6709\u56DB\u4E2A\u53C2\u6570\uFF0C\u540E\u4E24\u4E2A\u53C2\u6570\u5C31\u662F\u7248\u672C\u53F7\u7684\u65E7\u503C\u548C\u65B0\u503C\u3002</p><p>\u5F53 expectedReference != \u5BF9\u8C61\u5F53\u524D\u7684 reference \u65F6\uFF0C\u8BF4\u660E\u8BE5\u6570\u636E\u80AF\u5B9A\u88AB\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u8FC7\uFF1B</p><p>\u5F53 expectedReference == \u5BF9\u8C61\u5F53\u524D\u7684 reference \u65F6\uFF0C\u518D\u8FDB\u4E00\u6B65\u6BD4\u8F83 expectedStamp \u662F\u5426\u7B49\u4E8E\u5BF9\u8C61\u5F53\u524D\u7684\u7248\u672C\u53F7\uFF0C\u4EE5\u6B64\u5224\u65AD\u6570\u636E\u662F\u5426\u88AB\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u8FC7\u3002</p><h3 id="_2-3-2-\u4E3A\u4EC0\u4E48\u6CA1\u6709-atomicstampedinteger-\u6216-atomictstampedlong" tabindex="-1"><a class="header-anchor" href="#_2-3-2-\u4E3A\u4EC0\u4E48\u6CA1\u6709-atomicstampedinteger-\u6216-atomictstampedlong" aria-hidden="true">#</a> 2.3.2 \u4E3A\u4EC0\u4E48\u6CA1\u6709 AtomicStampedInteger \u6216 AtomictStampedLong</h3><p>\u8981\u89E3\u51B3 Integer \u6216\u8005 Long \u578B\u53D8\u91CF\u7684 ABA \u95EE\u9898\uFF0C\u4E3A\u4EC0\u4E48\u53EA\u6709 AtomicStampedReference\uFF0C\u800C\u6CA1\u6709 AtomicStampedInteger \u6216\u8005 AtomictStampedLong \u5462\uFF1F</p><p>\u56E0\u4E3A\u8FD9\u91CC\u8981\u540C\u65F6\u6BD4\u8F83\u6570\u636E\u7684 \u201C\u503C\u201D \u548C \u201C\u7248\u672C\u53F7\u201D\uFF0C\u800C Integer \u578B\u6216\u8005 Long \u578B\u7684 CAS \u6CA1\u6709\u529E\u6CD5\u540C\u65F6\u6BD4\u8F83\u4E24\u4E2A\u53D8\u91CF\uFF0C\u4E8E\u662F\u53EA\u80FD\u628A\u503C\u548C\u7248\u672C\u53F7\u5C01\u88C5\u6210\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4E5F\u5C31\u662F\u8FD9\u91CC\u9762\u7684 Pair \u5185\u90E8\u7C7B\uFF0C\u7136\u540E\u901A\u8FC7\u5BF9\u8C61\u5F15\u7528\u7684 CAS \u6765\u5B9E\u73B0\u3002\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">T</span> reference<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> stamp<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Pair</span><span class="token punctuation">(</span><span class="token class-name">T</span> reference<span class="token punctuation">,</span> <span class="token keyword">int</span> stamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>reference <span class="token operator">=</span> reference<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>stamp <span class="token operator">=</span> stamp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">T</span> reference<span class="token punctuation">,</span> <span class="token keyword">int</span> stamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pair<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token class-name">V</span> expectedReference<span class="token punctuation">,</span> <span class="token class-name">V</span> newReference<span class="token punctuation">,</span> <span class="token keyword">int</span> expectedStamp<span class="token punctuation">,</span> <span class="token keyword">int</span> newStamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> pair<span class="token punctuation">;</span>
        <span class="token keyword">return</span>
            expectedReference <span class="token operator">==</span> current<span class="token punctuation">.</span>reference <span class="token operator">&amp;&amp;</span>
            expectedStamp <span class="token operator">==</span> current<span class="token punctuation">.</span>stamp <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>newReference <span class="token operator">==</span> current<span class="token punctuation">.</span>reference <span class="token operator">&amp;&amp;</span> newStamp <span class="token operator">==</span> current<span class="token punctuation">.</span>stamp<span class="token punctuation">)</span> 
             <span class="token operator">||</span> <span class="token function">casPair</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>newReference<span class="token punctuation">,</span> newStamp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">casPair</span><span class="token punctuation">(</span><span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> cmp<span class="token punctuation">,</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSetObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> pairOffest<span class="token punctuation">,</span> cmp<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4F7F\u7528\u7684\u65F6\u5019\uFF0C\u5728\u6784\u9020\u51FD\u6570\u91CC\u9762\u4F20\u5165\u503C\u548C\u7248\u672C\u53F7\u4E24\u4E2A\u53C2\u6570\uFF0C\u5E94\u7528\u7A0B\u5E8F\u5BF9\u7248\u672C\u53F7\u8FDB\u884C\u7D2F\u52A0\u64CD\u4F5C\uFF0C\u7136\u540E\u8C03\u7528\u4E0A\u9762\u7684 CAS\u3002\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AtomicStampedReference</span><span class="token punctuation">(</span><span class="token class-name">V</span> initialRef<span class="token punctuation">,</span> <span class="token keyword">int</span> initialStamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pair <span class="token operator">=</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> initialStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-3-atomicmarkablereference" tabindex="-1"><a class="header-anchor" href="#_2-3-3-atomicmarkablereference" aria-hidden="true">#</a> 2.3.3 AtomicMarkableReference</h3><p>AtomicMarkableReference \u4E0E AtomicStampedReference \u539F\u7406\u7C7B\u4F3C\uFF0C\u53EA\u662F Pair \u91CC\u9762\u7684\u7248\u672C\u53F7\u662F boolean \u7C7B\u578B\u7684\uFF0C\u800C\u4E0D\u662F\u6574\u578B\u7684\u7D2F\u52A0\u53D8\u91CF\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicMarkableReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">T</span> reference<span class="token punctuation">;</span>
        <span class="token comment">// boolean \u7C7B\u578B\u7684\u7248\u672C\u53F7</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> mark<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Pair</span><span class="token punctuation">(</span><span class="token class-name">T</span> reference<span class="token punctuation">,</span> <span class="token keyword">boolean</span> mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>reference <span class="token operator">=</span> reference<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mark <span class="token operator">=</span> mark<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">T</span> reference<span class="token punctuation">,</span> <span class="token keyword">boolean</span> mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> mark<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pair<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u662F boolean \u7C7B\u578B\uFF0C\u53EA\u80FD\u6709 true\u3001false \u4E24\u4E2A\u7248\u672C\u53F7\uFF0C\u6240\u4EE5\u5E76\u4E0D\u80FD\u5B8C\u5168\u907F\u514D ABA \u95EE\u9898\uFF0C\u53EA\u662F\u964D\u4F4E\u4E86 ABA \u53D1\u751F\u7684\u6982\u7387\u3002</p><h2 id="_2-4-atomicintegerfieldupdater\u3001atomiclongfieldupdater-\u548C-atomicreferencefieldupdater" tabindex="-1"><a class="header-anchor" href="#_2-4-atomicintegerfieldupdater\u3001atomiclongfieldupdater-\u548C-atomicreferencefieldupdater" aria-hidden="true">#</a> 2.4 AtomicIntegerFieldUpdater\u3001AtomicLongFieldUpdater \u548C AtomicReferenceFieldUpdater</h2><h3 id="_2-4-1-\u4E3A\u4EC0\u4E48\u9700\u8981-atomicxxxfieldupdater" tabindex="-1"><a class="header-anchor" href="#_2-4-1-\u4E3A\u4EC0\u4E48\u9700\u8981-atomicxxxfieldupdater" aria-hidden="true">#</a> 2.4.1 \u4E3A\u4EC0\u4E48\u9700\u8981 AtomicXXXFieldUpdater</h3><p>\u5982\u679C\u4E00\u4E2A\u7C7B\u662F\u81EA\u5DF1\u7F16\u5199\u7684\uFF0C\u5219\u53EF\u4EE5\u5728\u7F16\u5199\u7684\u65F6\u5019\u628A\u6210\u5458\u53D8\u91CF\u5B9A\u4E49\u4E3A Atomic \u7C7B\u578B\u3002\u4F46\u5982\u679C\u662F\u4E00\u4E2A\u5DF2\u7ECF\u6709\u7684\u7C7B\uFF0C\u5728\u4E0D\u80FD\u66F4\u6539\u5176\u6E90\u4EE3\u7801\u7684\u60C5\u51B5\u4E0B\uFF0C\u8981\u60F3\u5B9E\u73B0\u5BF9\u5176\u6210\u5458\u53D8\u91CF\u7684\u539F\u5B50\u64CD\u4F5C\uFF0C\u5C31\u9700\u8981 AtomicIntegerFieldUpdater\u3001AtomicLongFieldUpdater \u548C AtomicReferenceFieldUpdater\u3002\u4E0B\u9762\u4EE5 AtomicIntegerFieldUpdater \u4E3A\u4F8B\u4ECB\u7ECD\u5176\u5B9E\u73B0\u539F\u7406\u3002</p><p>\u9996\u5148\uFF0C\u5176\u6784\u9020\u51FD\u6570\u662F protected\uFF0C\u4E0D\u80FD\u76F4\u63A5\u6784\u9020\u5176\u5BF9\u8C61\uFF0C\u5FC5\u987B\u901A\u8FC7\u5B83\u63D0\u4F9B\u7684\u4E00\u4E2A\u9759\u6001\u51FD\u6570\u6765\u521B\u5EFA\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">newUpdater</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> tclass<span class="token punctuation">,</span> <span class="token class-name">String</span> fieldName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>newUpdater(..) \u9759\u6001\u51FD\u6570\u4F20\u5165\u7684\u662F\u8981\u4FEE\u6539\u7684\u7C7B\uFF08\u4E0D\u662F\u5BF9\u8C61\uFF09\u548C\u5BF9\u5E94\u7684\u6210\u5458\u53D8\u91CF\u7684\u540D\u5B57\uFF0C\u5185\u90E8\u901A\u8FC7\u53CD\u5C04\u62FF\u5230\u8FD9\u4E2A\u7C7B\u7684\u6210\u5458\u53D8\u91CF\uFF0C\u7136\u540E\u5305\u88C5\u6210\u4E00\u4E2A AtomicIntegerFieldUpdater \u5BF9\u8C61\u3002\u6240\u4EE5\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u8868\u793A\u7684\u662F\u7C7B\u7684\u67D0\u4E2A\u6210\u5458\uFF0C\u800C\u4E0D\u662F\u5BF9\u8C61\u7684\u6210\u5458\u53D8\u91CF\u3002</p><p>\u82E5\u8981\u4FEE\u6539\u67D0\u4E2A\u5BF9\u8C61\u7684\u6210\u5458\u53D8\u91CF\u7684\u503C\uFF0C\u518D\u4F20\u5165\u76F8\u5E94\u7684\u5BF9\u8C61\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token class-name">T</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> prev<span class="token punctuation">,</span> next<span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        prev <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        next <span class="token operator">=</span> prev <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> prev<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token class-name">T</span> obj<span class="token punctuation">,</span> <span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">accessCheck</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSetInt</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>accecssCheck \u51FD\u6570\u7684\u4F5C\u7528\u662F\u68C0\u67E5\u8BE5 obj \u662F\u4E0D\u662F tclass \u7C7B\u578B\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u5219\u62D2\u7EDD\u4FEE\u6539\uFF0C\u629B\u51FA\u5F02\u5E38\u3002</p><p>\u4ECE\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0C\u5176 CAS \u539F\u7406\u548C AtomictInteger \u662F\u4E00\u6837\u7684\uFF0C\u5E95\u5C42\u90FD\u8C03\u7528\u4E86 Unsafe \u7684 compareAndSwapInt(..) \u51FD\u6570\u3002</p><h3 id="_2-4-2-\u9650\u5236\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-4-2-\u9650\u5236\u6761\u4EF6" aria-hidden="true">#</a> 2.4.2 \u9650\u5236\u6761\u4EF6</h3><p>\u8981\u60F3\u4F7F\u7528 AtomicIntegerFieldUpdater \u4FEE\u6539\u6210\u5458\u53D8\u91CF\uFF0C\u6210\u5458\u53D8\u91CF\u5FC5\u987B\u662F volatile \u7684 int \u7C7B\u578B\uFF08\u4E0D\u80FD\u662F Integer \u5305\u88C5\u7C7B\uFF09\uFF0C\u8BE5\u9650\u5236\u4ECE\u5176\u6784\u9020\u51FD\u6570\u4E2D\u53EF\u4EE5\u770B\u5230\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">newUpdater</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> tclass<span class="token punctuation">,</span> <span class="token class-name">String</span> fieldName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AtomicIntegerFieldUpdaterImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>tclass<span class="token punctuation">,</span> fieldName<span class="token punctuation">,</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">AtomicIntegerFieldUpdaterImpl</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> tclass<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> fieldName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>field<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Must be integer type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isVolatile</span><span class="token punctuation">(</span>modifiers<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Must be volatile type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u4E8E AtomicLongFieldUpdater\u3001AtomicReferenceFieldUpdater\uFF0C\u4E5F\u6709\u7C7B\u4F3C\u7684\u9650\u5236\u6761\u4EF6\u3002\u5176\u5E95\u5C42\u7684 CAS \u539F\u7406\uFF0C\u4E5F\u548C AtomicLong\u3001AtomicReference \u4E00\u6837\uFF0C\u6B64\u5904\u4E0D\u518D\u8D58\u8FF0\u3002</p><h2 id="_2-5-atomicintegerarray\u3001atomiclongarray-\u548C-atomicreferencearray" tabindex="-1"><a class="header-anchor" href="#_2-5-atomicintegerarray\u3001atomiclongarray-\u548C-atomicreferencearray" aria-hidden="true">#</a> 2.5 AtomicIntegerArray\u3001AtomicLongArray \u548C AtomicReferenceArray</h2><p>Concurrent \u5305\u63D0\u4F9B\u4E86 AtomicIntegerArray\u3001AtomicLongArray\u3001AtomicReferenceArray \u4E09\u4E2A\u6570\u7EC4\u5143\u7D20\u7684\u539F\u5B50\u64CD\u4F5C\u3002\u6CE8\u610F\uFF0C\u8FD9\u91CC\u5E76\u4E0D\u662F\u8BF4\u5BF9\u6574\u4E2A\u6570\u7EC4\u7684\u64CD\u4F5C\u662F\u539F\u5B50\u7684\uFF0C\u800C\u662F\u9488\u5BF9\u6570\u7EC4\u4E2D\u4E00\u4E2A\u5143\u7D20\u7684\u539F\u5B50\u64CD\u4F5C\u800C\u8A00\u3002</p><h3 id="_2-5-1-\u4F7F\u7528\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-5-1-\u4F7F\u7528\u65B9\u5F0F" aria-hidden="true">#</a> 2.5.1 \u4F7F\u7528\u65B9\u5F0F</h3><p>\u4EE5 AtomicIntegerArray \u4E3A\u4F8B\uFF0C\u5176\u4F7F\u7528\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getAndAdd</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u6BD4\u4E8E AtomicInteger \u7684 getAndIncrement() \u51FD\u6570\uFF0C\u8FD9\u91CC\u53EA\u662F\u591A\u4E86\u4E00\u4E2A\u4F20\u5165\u53C2\u6570\uFF1A\u6570\u7EC4\u7684\u4E0B\u6807 i\u3002</p><p>\u5176\u4ED6\u51FD\u6570\u4E5F\u4E0E\u6B64\u7C7B\u4F3C\uFF0C\u76F8\u6BD4\u4E8E AtomicInteger \u7684\u5404\u79CD\u52A0\u51CF\u51FD\u6570\uFF0C\u4E5F\u90FD\u662F\u591A\u4E00\u4E2A\u4E0B\u6807 i\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> expectedValue<span class="token punctuation">,</span> <span class="token keyword">int</span> newValue<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> newValue<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-2-\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2-5-2-\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 2.5.2 \u5B9E\u73B0\u539F\u7406</h3><p>\u5176\u5E95\u5C42\u7684 CAS \u51FD\u6570\u7528\u7684\u8FD8\u662F compareAndSwapInt\uFF0C\u4F46\u662F\u628A\u6570\u7EC4\u4E0B\u6807 i \u8F6C\u5316\u6210\u5BF9\u5E94\u7684\u5185\u5B58\u504F\u79FB\u91CF\uFF0C\u6240\u7528\u7684\u65B9\u6CD5\u548C\u4E4B\u524D\u7684 AtomicInteger \u4E0D\u592A\u4E00\u6837\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">byteOffset</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> i <span class="token operator">&lt;&lt;</span> shift<span class="token punctuation">)</span> <span class="token operator">+</span> base<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A\u4E0B\u6807 i \u8F6C\u6362\u6210\u5BF9\u5E94\u7684\u5185\u5B58\u5730\u5740\uFF0C\u7528\u5230\u4E86 shift \u548C base \u4E24\u4E2A\u53D8\u91CF\u3002\u8FD9\u4E24\u4E2A\u53D8\u91CF\u90FD\u662F AtomicIntegerArray \u7684\u9759\u6001\u6210\u5458\u53D8\u91CF\uFF0C\u7528\u4E86 Unsafe \u7C7B\u7684 arrayBaseOffset \u548C arrayIndexScale \u4E24\u4E2A\u51FD\u6570\u6765\u83B7\u53D6\u3002\u8D4B\u503C\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> base <span class="token operator">=</span> unsafe<span class="token punctuation">.</span><span class="token function">arrayBaseOffset</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token punctuation">{</span>
    <span class="token comment">// scale \u521A\u597D\u662F 2 \u7684\u6574\u6570\u6B21\u65B9</span>
    <span class="token keyword">int</span> scale <span class="token operator">=</span> unsafe<span class="token punctuation">.</span><span class="token function">arrayBaseOffset</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scale <span class="token operator">&amp;</span> <span class="token punctuation">(</span>scale <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;data type scale not a power of two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    shift <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">-</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">numberOfLeadingZeros</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0Cbase \u8868\u793A\u6570\u7EC4\u7684\u9996\u5730\u5740\u7684\u4F4D\u7F6E\uFF0Cscale \u8868\u793A\u4E00\u4E2A\u6570\u7EC4\u5143\u7D20\u7684\u5927\u5C0F\uFF0Ci \u7684\u504F\u79FB\u91CF\u5219\u7B49\u4E8E\uFF1Ai * scale + base\u3002</p><p>\u4F46\u4E3A\u4E86\u4F18\u5316\u6027\u80FD\uFF0C\u4F7F\u7528\u4E86\u4F4D\u79FB\u64CD\u4F5C\uFF0Cshift \u8868\u793A scale \u4E2D 1 \u7684\u4F4D\u7F6E\uFF08scale \u662F 2 \u7684\u6574\u6570\u6B21\u65B9\uFF09\u3002\u6240\u4EE5\uFF0C\u504F\u79FB\u91CF\u7684\u8BA1\u7B97\u53D8\u6210\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684\uFF1Ai &lt;&lt; shift + base\uFF0C\u8868\u8FBE\u7684\u610F\u601D\u5C31\u662F\uFF1Ai * scale + base\u3002</p><p>\u77E5\u9053\u4E86\u504F\u79FB\u91CF\u7684\u8BA1\u7B97\u65B9\u5F0F\uFF0C\u7406\u89E3 CAS \u64CD\u4F5C\u5C31\u5BB9\u6613\u4E86\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> delta<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0B\u6807 i \u8F6C\u6362\u6210\u6570\u7EC4\u4E2D\u7684\u5185\u5B58\u504F\u79FB\u91CF\uFF08\u4E5F\u5C31\u662F\u4E0A\u9762\u7684\u8BA1\u7B97\u516C\u5F0F\uFF09</span>
    <span class="token keyword">long</span> offset <span class="token operator">=</span> <span class="token function">checkedByteOffset</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u504F\u79FB\u91CF\u83B7\u53D6\u4E0B\u6807 i \u7684\u65E7\u503C</span>
        <span class="token keyword">int</span> current <span class="token operator">=</span> <span class="token function">getRaw</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetRaw</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> current<span class="token punctuation">,</span> current <span class="token operator">+</span> delta<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> current<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSetRaw</span><span class="token punctuation">(</span><span class="token keyword">long</span> offset<span class="token punctuation">,</span> <span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C 1 \u4E2A\u53C2\u6570\u662F int[] \u5BF9\u8C61\uFF0C\u7B2C 2 \u4E2A\u53C2\u6570\u662F\u4E0B\u6807 i \u5BF9\u5E94\u7684\u5185\u5B58\u504F\u79FB\u91CF\uFF0C\u7B2C 3 \u4E2A\u548C\u7B2C 4 \u4E2A\u53C2\u6570\u5206\u522B\u662F\u65E7\u503C\u548C\u65B0\u503C\u3002</p><p>\u660E\u767D\u4E86 AtomicIntegerArray \u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u53E6\u5916\u4E24\u4E2A\u6570\u7EC4\u7684\u539F\u5B50\u7C7B\u5B9E\u73B0\u539F\u7406\u4E0E\u4E4B\u7C7B\u4F3C\uFF0C\u6B64\u5904\u4E0D\u518D\u8D58\u8FF0\u3002</p><h2 id="_2-6-striped64-\u4E0E-longadder" tabindex="-1"><a class="header-anchor" href="#_2-6-striped64-\u4E0E-longadder" aria-hidden="true">#</a> 2.6 Striped64 \u4E0E LongAdder</h2><p>\u4ECE JDK 8 \u5F00\u59CB\uFF0C\u9488\u5BF9 Long \u578B\u7684\u539F\u5B50\u64CD\u4F5C\uFF0CJava \u53C8\u63D0\u4F9B\u4E86 LongAdder\u3001LongAccumulator\uFF1B\u9488\u5BF9 Double \u7C7B\u578B\uFF0CJava \u63D0\u4F9B\u4E86 DoubleAdder\u3001DoubleAccumulator\u3002Striped64 \u76F8\u5173\u7684\u7C7B\u7684\u7EE7\u627F\u5C42\u6B21\u5982\u56FE2-2 \u6240\u793A\u3002</p><img src="`+t+'" alt="\u56FE2-2" style="zoom:50%;"><p>\u56FE2-2 Striped64 \u76F8\u5173\u7684\u7C7B\u7684\u7EE7\u627F\u5C42\u6B21</p><p>\u8BFB\u8005\u4F1A\u6709\u4E00\u4E2A\u7591\u95EE\uFF0C\u65E2\u7136\u5DF2\u6709\u4E86 AtomicLong\uFF0C\u4E3A\u4EC0\u4E48\u8FD8\u8981\u63D0\u4F9B LongAdder\uFF1F\u5E76\u4E14\u8FD8\u63D0\u4F9B\u4E86 LongAccumulator\uFF1F</p><h3 id="_2-6-1-longadder-\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2-6-1-longadder-\u539F\u7406" aria-hidden="true">#</a> 2.6.1 LongAdder \u539F\u7406</h3><p>AtomicLong \u5185\u90E8\u662F\u4E00\u4E2A volatile long \u578B\u53D8\u91CF\uFF0C\u7531\u591A\u4E2A\u7EBF\u7A0B\u5BF9\u8FD9\u4E2A\u53D8\u91CF\u8FDB\u884C CAS \u64CD\u4F5C\u3002\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u5BF9\u4E00\u4E2A\u53D8\u91CF\u8FDB\u884C CAS \u64CD\u4F5C\uFF0C\u5728\u9AD8\u5E76\u53D1\u7684\u573A\u666F\u4E0B\u4ECD\u4E0D\u591F\u5FEB\uFF0C\u5982\u679C\u518D\u8981\u63D0\u9AD8\u6027\u80FD\uFF0C\u8BE5\u600E\u4E48\u505A\u5462\uFF1F</p><p>\u628A\u4E00\u4E2A\u53D8\u91CF\u62C6\u6210\u591A\u4EFD\uFF0C\u53D8\u4E3A\u591A\u4E2A\u53D8\u91CF\uFF0C\u6709\u4E9B\u7C7B\u4F3C\u4E8E ConcurrentHashMap \u7684\u5206\u6BB5\u9501\u7684\u4F8B\u5B50\u3002\u5982\u56FE2-3 \u6240\u793A\uFF0C\u628A\u4E00\u4E2A Long \u578B\u62C6\u6210\u4E00\u4E2A base \u53D8\u91CF\u5916\u52A0\u591A\u4E2A Cell\uFF0C\u6BCF\u4E2A Cell \u5305\u88C5\u4E86\u4E00\u4E2A Long \u578B\u53D8\u91CF\u3002\u5F53\u591A\u4E2A\u7EBF\u7A0B\u5E76\u53D1\u7D2F\u52A0\u7684\u65F6\u5019\uFF0C\u5982\u679C\u5E76\u53D1\u5EA6\u4F4E\uFF0C\u5C31\u76F4\u63A5\u52A0\u5230 base \u53D8\u91CF\u4E0A\uFF1B\u5982\u679C\u5E76\u53D1\u5EA6\u9AD8\uFF0C\u51B2\u7A81\u5927\uFF0C\u5E73\u644A\u5230\u8FD9\u4E9B Cell \u4E0A\u3002\u5728\u6700\u540E\u53D6\u503C\u7684\u65F6\u5019\uFF0C\u518D\u628A base \u548C\u8FD9\u4E9B Cell \u6C42 sum \u8FD0\u7B97\u3002</p><img src="'+o+`" alt="\u56FE2-3" style="zoom:50%;"><p>\u56FE2-3 1 \u4E2A Long \u578B\u53D8\u91CF\u88AB\u62C6\u6210\u591A\u4E2A Long \u578B\u7684\u793A\u610F\u56FE</p><p>\u4EE5 LongAdder \u7684 sum() \u51FD\u6570\u4E3A\u4F8B\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span>
    <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">long</span> sum <span class="token operator">=</span> base<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                sum <span class="token operator">+=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u65E0\u8BBA\u662F long\uFF0C\u8FD8\u662F double\uFF0C\u90FD\u662F 64 \u4F4D\u7684\u3002\u4F46\u56E0\u4E3A\u6CA1\u6709 double \u578B\u7684 CAS \u64CD\u4F5C\uFF0C\u6240\u4EE5\u662F\u901A\u8FC7\u628A double \u578B\u8F6C\u5316\u6210 long \u578B\u6765\u5B9E\u73B0\u7684\u3002\u6240\u4EE5\uFF0C\u4E0A\u9762\u7684 base \u548C cell[] \u53D8\u91CF\uFF0C\u662F\u4F4D\u4E8E\u57FA\u7C7B Striped64 \u5F53\u4E2D\u7684\u3002\u82F1\u6587 Striped \u610F\u4E3A \u201C\u6761\u5E26\u201D\uFF0C\u4E5F\u5C31\u662F\u5206\u7247\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Striped64</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token punctuation">{</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> base<span class="token punctuation">;</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cells<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@sun.misc.Contended</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Cell</span> <span class="token punctuation">{</span>
        <span class="token keyword">volatile</span> <span class="token keyword">long</span> value<span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-2-\u6700\u7EC8\u4E00\u81F4\u6027" tabindex="-1"><a class="header-anchor" href="#_2-6-2-\u6700\u7EC8\u4E00\u81F4\u6027" aria-hidden="true">#</a> 2.6.2 \u6700\u7EC8\u4E00\u81F4\u6027</h3><p>\u5728 sum \u6C42\u548C\u51FD\u6570\u4E2D\uFF0C\u5E76\u6CA1\u6709\u5BF9 cells[] \u6570\u7EC4\u52A0\u9501\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E00\u8FB9\u6709\u7EBF\u7A0B\u5BF9\u5176\u6267\u884C\u6C42\u548C\u64CD\u4F5C\uFF0C\u4E00\u8FB9\u8FD8\u6709\u7EBF\u7A0B\u4FEE\u6539\u6570\u7EC4\u91CC\u7684\u503C\uFF0C\u4E5F\u5C31\u662F\u6700\u7EC8\u4E00\u81F4\u6027\uFF0C\u800C\u4E0D\u662F\u5F3A\u4E00\u81F4\u6027\u3002\u8FD9\u4E5F\u7C7B\u4F3C\u4E8E ConcurrentHashMap \u4E2D\u7684 clear() \u51FD\u6570\uFF0C\u4E00\u8FB9\u6267\u884C\u6E05\u7A7A\u64CD\u4F5C\uFF0C\u4E00\u8FB9\u8FD8\u6709\u7EBF\u7A0B\u653E\u5165\u6570\u636E\uFF0Cclear() \u51FD\u6570\u8C03\u7528\u5B8C\u6BD5\u540E\u518D\u8BFB\u53D6\uFF0Chash map \u91CC\u9762\u53EF\u80FD\u8FD8\u6709\u5143\u7D20\u3002\u56E0\u6B64\uFF0C\u5728 LongAdder \u5F00\u7BC7\u7684\u6CE8\u91CA\u4E2D\uFF0C\u628A\u5B83\u548C AtomicLong \u7684\u4F7F\u7528\u573A\u666F\u505A\u4E86\u6BD4\u8F83\u3002\u5B83\u9002\u5408\u9AD8\u5E76\u53D1\u7684\u7EDF\u8BA1\u573A\u666F\uFF0C\u800C\u4E0D\u9002\u5408\u8981\u5BF9\u67D0\u4E2A Long \u578B\u53D8\u91CF\u8FDB\u884C\u4E25\u683C\u540C\u6B65\u7684\u573A\u666F\u3002</p><h3 id="_2-6-3-\u4F2A\u5171\u4EAB\u4E0E\u7F13\u5B58\u884C\u586B\u5145" tabindex="-1"><a class="header-anchor" href="#_2-6-3-\u4F2A\u5171\u4EAB\u4E0E\u7F13\u5B58\u884C\u586B\u5145" aria-hidden="true">#</a> 2.6.3 \u4F2A\u5171\u4EAB\u4E0E\u7F13\u5B58\u884C\u586B\u5145</h3><p>\u5728 Cell \u7C7B\u7684\u5B9A\u4E49\u4E2D\uFF0C\u7528\u4E86\u4E00\u4E2A\u72EC\u7279\u7684\u6CE8\u89E3 @sun.misc.Contended\uFF0C\u8FD9\u662F JDK 8 \u4E4B\u540E\u624D\u6709\u7684\uFF0C\u80CC\u540E\u6D89\u53CA\u4E00\u4E2A\u5F88\u91CD\u8981\u7684\u4F18\u5316\u539F\u7406\uFF1A\u4F2A\u5171\u4EAB\u4E0E\u7F13\u5B58\u884C\u586B\u5145\u3002</p><p>\u5728\u8BB2 CPU \u67B6\u6784\u7684\u65F6\u5019\u63D0\u5230\u8FC7\uFF0C\u6BCF\u4E2A CPU \u90FD\u6709\u81EA\u5DF1\u7684\u7F13\u5B58\u3002\u7F13\u5B58\u4E0E\u4E3B\u5185\u5B58\u8FDB\u884C\u6570\u636E\u4EA4\u6362\u7684\u57FA\u672C\u5355\u4F4D\u53EB Cache Line\uFF08\u7F13\u5B58\u884C\uFF09\u3002\u5728 64 \u4F4D x86 \u67B6\u6784\u4E2D\uFF0C\u7F13\u5B58\u884C\u662F 64 \u5B57\u8282\uFF0C\u4E5F\u5C31\u662F 8 \u4E2A Long \u578B\u7684\u5927\u5C0F\u3002\u8FD9\u4E5F\u610F\u5473\u7740\u5F53\u7F13\u5B58\u5931\u6548\uFF0C\u8981\u5237\u65B0\u5230\u4E3B\u5185\u5B58\u7684\u65F6\u5019\uFF0C\u6700\u5C11\u8981\u5237\u65B0 64 \u5B57\u8282\u3002</p><p>\u5982\u56FE2-4 \u6240\u793A\uFF0C\u4E3B\u5185\u5B58\u4E2D\u6709\u53D8\u91CF X\u3001Y\u3001Z\uFF08\u5047\u8BBE\u6BCF\u4E2A\u53D8\u91CF\u90FD\u662F\u4E00\u4E2A Long \u578B\uFF09\uFF0C\u88AB CPU1 \u548C CPU2 \u5206\u522B\u8BFB\u5165\u81EA\u5DF1\u7684\u7F13\u5B58\uFF0C\u653E\u5728\u4E86\u540C\u4E00\u884C Cache Line \u91CC\u9762\u3002\u5F53 CPU1 \u4FEE\u6539\u4E86 X \u53D8\u91CF\uFF0C\u5B83\u8981\u5931\u6548\u6574\u884C Cache Line\uFF0C\u4E5F\u5C31\u662F\u5F80\u603B\u7EBF\u4E0A\u53D1\u6D88\u606F\uFF0C\u901A\u77E5 CPU 2 \u5BF9\u5E94\u7684 Cache Line \u5931\u6548\u3002\u7531\u4E8E Cache Line \u662F\u6570\u636E\u4EA4\u6362\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u65E0\u6CD5\u53EA\u5931\u6548 X\uFF0C\u8981\u5931\u6548\u5C31\u4F1A\u5931\u6548\u6574\u884C\u7684 Cache Line\uFF0C\u8FD9\u4F1A\u5BFC\u81F4 Y\u3001Z \u53D8\u91CF\u7684\u7F13\u5B58\u4E5F\u5931\u6548\u3002</p><img src="`+c+'" alt="\u56FE2-4" style="zoom:50%;"><p>\u56FE2-4 \u4F2A\u5171\u4EAB\u793A\u610F\u56FE</p><p>\u867D\u7136\u53EA\u4FEE\u6539\u4E86 X \u53D8\u91CF\uFF0C\u672C\u5E94\u8BE5\u53EA\u5931\u6548 X \u53D8\u91CF\u7684\u7F13\u5B58\uFF0C\u4F46 Y\u3001Z \u53D8\u91CF\u4E5F\u968F\u4E4B\u5931\u6548\u3002Y\u3001Z \u53D8\u91CF\u7684\u6570\u636E\u6CA1\u6709\u4FEE\u6539\uFF0C\u672C\u5E94\u8BE5\u5F88\u597D\u5730\u88AB CPU1 \u548C CPU2 \u5171\u4EAB\uFF0C\u5374\u6CA1\u505A\u5230\uFF0C\u8FD9\u5C31\u662F\u6240\u8C13\u7684 \u201C\u4F2A\u5171\u4EAB\u95EE\u9898\u201D\u3002</p><p>\u95EE\u9898\u7684\u539F\u56E0\u662F\uFF0CY\u3001Z \u548C X \u53D8\u91CF\u5904\u5728\u4E86\u540C\u4E00\u884C Cache Line \u91CC\u9762\u3002\u8981\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u9700\u8981\u7528\u5230\u6240\u8C13\u7684 \u201C\u7F13\u5B58\u884C\u586B\u5145\u201D\uFF0C\u5206\u522B\u5728 X\u3001Y\u3001Z \u540E\u9762\u52A0\u4E0A 7 \u4E2A\u65E0\u7528\u7684 Long \u578B\uFF0C\u586B\u5145\u6574\u4E2A\u7F13\u5B58\u884C\uFF0C\u8BA9 X\u3001Y\u3001Z \u5904\u5728\u4E09\u884C\u4E0D\u540C\u7684\u7F13\u5B58\u884C\u4E2D\uFF0C\u5982\u56FE2-5 \u6240\u793A\u3002</p><img src="'+l+`" alt="\u56FE2-5" style="zoom:50%;"><p>\u56FE2-5 \u7F13\u5B58\u884C\u586B\u5145\u793A\u610F\u56FE</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\u6765\u81EA JDK 7 \u7684 Exchanger \u7C7B\uFF0C\u4E3A\u4E86\u5B89\u5168\uFF0C\u5B83\u586B\u5145\u4E86 15\uFF088 + 7\uFF09\u4E2A long \u578B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Slot</span> <span class="token keyword">extends</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> q0<span class="token punctuation">,</span> q1<span class="token punctuation">,</span> q2<span class="token punctuation">,</span> q3<span class="token punctuation">,</span> q4<span class="token punctuation">,</span> q5<span class="token punctuation">,</span> q6<span class="token punctuation">,</span> q7<span class="token punctuation">,</span> q8<span class="token punctuation">,</span> q9<span class="token punctuation">,</span> qa<span class="token punctuation">,</span> qb<span class="token punctuation">,</span> qc<span class="token punctuation">,</span> qd<span class="token punctuation">,</span> qe<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8457\u540D\u7684\u5F00\u6E90\u65E0\u9501\u5E76\u53D1\u6846\u67B6 Disruptor \u4E2D\uFF0C\u4E5F\u6709\u7C7B\u4F3C\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RingBufferPad</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u586B\u5145\u4E86 7 \u4E2A long \u578B\u6570\u636E</span>
    <span class="token keyword">protected</span> <span class="token keyword">long</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> p4<span class="token punctuation">,</span> p5<span class="token punctuation">,</span> p6<span class="token punctuation">,</span> p7<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RingBufferFields</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">RingBufferPad</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u5728 JDK 8 \u4E2D\uFF0C\u5C31\u4E0D\u9700\u8981\u5199\u8FD9\u79CD\u6666\u6DA9\u7684\u4EE3\u7801\u4E86\uFF0C\u53EA\u9700\u58F0\u660E\u4E00\u4E2A @sun.misc.Contended \u5373\u53EF\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u6458\u81EA JDK 8 \u91CC\u9762 Exchanger \u4E2D Node \u7684\u5B9A\u4E49\uFF0C\u76F8\u8F83\u4E8E JDK 7 \u6709\u4E86\u660E\u663E\u53D8\u5316\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@sun.misc.Contended</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56DE\u5230\u4E0A\u9762\u7684\u4F8B\u5B50\uFF0C\u4E4B\u6240\u4EE5\u8FD9\u4E2A\u5730\u65B9\u8981\u7528\u7F13\u5B58\u884C\u586B\u5145\uFF0C\u662F\u4E3A\u4E86\u4E0D\u8BA9 Cell[] \u6570\u7EC4\u4E2D\u76F8\u90BB\u7684\u5143\u7D20\u843D\u5230\u540C\u4E00\u4E2A\u7F13\u5B58\u884C\u91CC\u3002</p><h3 id="_2-6-4-longadder-\u6838\u5FC3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-6-4-longadder-\u6838\u5FC3\u5B9E\u73B0" aria-hidden="true">#</a> 2.6.4 LongAdder \u6838\u5FC3\u5B9E\u73B0</h3><p>\u4E0B\u9762\u6765\u770B LongAdder \u6700\u6838\u5FC3\u7684\u7D2F\u52A0\u51FD\u6570 add(long x)\uFF0C\u81EA\u589E\u3001\u81EA\u51CF\u64CD\u4F5C\u90FD\u662F\u901A\u8FC7\u8C03\u7528\u8BE5\u51FD\u6570\u5B9E\u73B0\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C 1 \u6B21\u5C1D\u8BD5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> b <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
            <span class="token comment">// \u7B2C 2 \u6B21\u5C1D\u8BD5</span>
            <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> v <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528 add(x) \u7684\u65F6\u5019\uFF0C\u9996\u5148\u4F1A\u5C1D\u8BD5\u4F7F\u7528 casBase \u628A x \u52A0\u5230 base \u53D8\u91CF\u4E0A\u3002\u5982\u679C\u4E0D\u6210\u529F\uFF0C\u5219\u518D\u7528 a.cas(..) \u51FD\u6570\u5C1D\u8BD5\u628A x \u52A0\u5230 Cell \u6570\u7EC4\u7684\u67D0\u4E2A\u5143\u7D20\u4E0A\u3002\u5982\u679C\u8FD8\u4E0D\u6210\u529F\uFF0C\u6700\u540E\u518D\u8C03\u7528 longAccumulate(..) \u51FD\u6570\u3002</p><p>\u6CE8\u610F\uFF1ACell[] \u6570\u7EC4\u7684\u5927\u5C0F\u59CB\u7EC8\u662F 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u5728\u8FD0\u884C\u4E2D\u4F1A\u4E0D\u65AD\u6269\u5BB9\uFF0C\u6BCF\u6B21\u6269\u5BB9\u90FD\u662F\u589E\u957F 2 \u500D\u3002\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684 as[getProbe() &amp;m] \u5176\u5B9E\u5C31\u662F\u5BF9\u6570\u7EC4\u7684\u5927\u5C0F\u53D6\u6A21\u3002\u56E0\u4E3A m = as.length \u2013 1\uFF0CgetProbe() \u4E3A\u8BE5\u7EBF\u7A0B\u751F\u6210\u4E00\u4E2A\u968F\u673A\u6570\uFF0C\u7528\u8BE5\u968F\u673A\u6570\u5BF9\u6570\u7EC4\u7684\u957F\u5EA6\u53D6\u6A21\u3002\u56E0\u4E3A\u6570\u7EC4\u957F\u5EA6\u662F 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528 &amp; \u64CD\u4F5C\u6765\u4F18\u5316\u53D6\u6A21\u8FD0\u7B97\u3002</p><p>\u5BF9\u4E8E\u4E00\u4E2A\u7EBF\u7A0B\u6765\u8BF4\uFF0C\u5B83\u5E76\u4E0D\u5728\u610F\u5230\u5E95\u662F\u628A x \u7D2F\u52A0\u5230 base \u4E0A\u9762\uFF0C\u8FD8\u662F\u7D2F\u52A0\u5230 Cell[] \u6570\u7EC4\u4E0A\u9762\uFF0C\u53EA\u8981\u7D2F\u52A0\u6210\u529F\u5C31\u53EF\u4EE5\u3002\u56E0\u6B64\uFF0C\u8FD9\u91CC\u4F7F\u7528\u968F\u673A\u6570\u6765\u5B9E\u73B0 Cell \u7684\u957F\u5EA6\u53D6\u6A21\u3002</p><p>\u5982\u679C\u4E24\u6B21\u5C1D\u8BD5\u90FD\u4E0D\u6210\u529F\uFF0C\u5219\u8C03\u7528 longAccumulate(..) \u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u5728 Striped64 \u91CC\u9762 LongAccumulator \u4E5F\u4F1A\u7528\u5230\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">longAccumulate</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">,</span> <span class="token class-name">LongBinaryOperator</span> fn<span class="token punctuation">,</span> <span class="token keyword">boolean</span> wasUncontended<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">=</span> <span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadLocalRandom</span><span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        h <span class="token operator">=</span> <span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        wasUncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5199\u5165\u51B2\u7A81\u6807\u5FD7\u4F4D</span>
    <span class="token keyword">boolean</span> collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token keyword">long</span> v<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> as<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       
                    <span class="token class-name">Cell</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>   
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">boolean</span> created <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>               
                            <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">,</span> j<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rs <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                                <span class="token punctuation">(</span>m <span class="token operator">=</span> rs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
                                rs<span class="token punctuation">[</span>j <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                rs<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">;</span>
                                created <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                            cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>created<span class="token punctuation">)</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>           
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> 
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wasUncontended<span class="token punctuation">)</span>       
                wasUncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> NCPU <span class="token operator">||</span> cells <span class="token operator">!=</span> as<span class="token punctuation">)</span>
                collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>           
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>collide<span class="token punctuation">)</span>
                collide <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cells <span class="token operator">==</span> as<span class="token punctuation">)</span> <span class="token punctuation">{</span>      
                        <span class="token comment">// \u5BF9\u6570\u7EC4\u6269\u5BB9</span>
                        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
                            rs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                        cells <span class="token operator">=</span> rs<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>                   
            <span class="token punctuation">}</span>
            h <span class="token operator">=</span> <span class="token function">advanceProbe</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> cells <span class="token operator">==</span> as <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> init <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>                           
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cells <span class="token operator">==</span> as<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u521D\u59CB\u5316\u6570\u7EC4</span>
                    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    rs<span class="token punctuation">[</span>h <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    cells <span class="token operator">=</span> rs<span class="token punctuation">;</span>
                    init <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>init<span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casBase</span><span class="token punctuation">(</span>v <span class="token operator">=</span> base<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>                         
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u51FD\u6570 fn \u5C31\u662F 2.6.5 \u8282 LongAccumulator \u8981\u7528\u5230\u7684\uFF0C\u4F46\u5BF9\u4E8E LongAdder \u800C\u8A00\uFF0Cfn = null\uFF0C\u5C31\u662F\u7B80\u5355\u7684\u7D2F\u52A0\u64CD\u4F5C v + x\u3002</p><p>\u4E0A\u9762\u7684 for \u5FAA\u73AF\u88AB\u5206\u6210\u4E09\u4E2A\u5927\u7684\u5206\u652F\u3002\u5728\u7B2C\u4E8C\u4E2A\u5206\u652F\u91CC\u9762\uFF0C\u8FDB\u884C\u4E86 Cells[] \u6570\u7EC4\u7684\u521D\u59CB\u5316\u5DE5\u4F5C\uFF0C\u521D\u59CB\u5927\u5C0F\u4E3A 2\uFF0C\u7136\u540E\u628A x \u7D2F\u52A0\u5728 0 \u4E0B\u6807\u6216\u8005 1 \u4E0B\u6807\u5BF9\u5E94\u7684 Cell \u4E0A\u9762\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>cells <span class="token operator">==</span> as<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    rs<span class="token punctuation">[</span>h <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cells <span class="token operator">=</span> rs<span class="token punctuation">;</span>
    init <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u7B2C\u4E00\u4E2A\u5927\u7684\u5206\u652F\u91CC\u9762\uFF0C\u5B8C\u6210 Cells[] \u6570\u7EC4\u7684\u4E0D\u65AD\u6269\u5BB9\uFF0C\u6BCF\u6B21\u6269\u5BB9\u90FD\u662F\u589E\u957F 2 \u500D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>cells <span class="token operator">==</span> as<span class="token punctuation">)</span> <span class="token punctuation">{</span>      
    <span class="token comment">// \u6269\u5BB9</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u62F7\u8D1D\u65E7\u6570\u636E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
        rs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    cells <span class="token operator">=</span> rs<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u4E3A\u7A7A\uFF0C\u5E76\u4E14\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6B63\u5728\u8FDB\u884C\u521D\u59CB\u5316\u5DE5\u4F5C\uFF0C\u4E8E\u662F\u8FDB\u5165\u7B2C\u4E09\u4E2A\u5927\u7684\u5206\u652F\u4E2D\uFF0C\u5C1D\u8BD5\u5BF9 base \u53D8\u91CF\u8FDB\u884C\u7D2F\u79EF\uFF0C\u5982\u679C\u518D\u6B21\u5931\u8D25\uFF0C\u5219\u4F1A\u518D\u6B21\u8FDB\u5165\u7B2C\u4E00\u4E2A\u5927\u7684\u5206\u652F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casBase</span><span class="token punctuation">(</span>v <span class="token operator">=</span> base<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-5-longaccumulator" tabindex="-1"><a class="header-anchor" href="#_2-6-5-longaccumulator" aria-hidden="true">#</a> 2.6.5 LongAccumulator</h3><p>LongAccumulator \u7684\u539F\u7406\u548C LongAdder \u7C7B\u4F3C\uFF0C\u53EA\u662F\u529F\u80FD\u66F4\u5F3A\u5927\uFF0C\u4E0B\u9762\u4E3A\u4E24\u8005\u6784\u9020\u51FD\u6570\u7684\u5BF9\u6BD4\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LongAdder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">LongAccumulator</span><span class="token punctuation">(</span><span class="token class-name">LongBinaryOperator</span> accumulatorFunction<span class="token punctuation">,</span> <span class="token keyword">long</span> identity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LongAdder \u53EA\u80FD\u8FDB\u884C\u7D2F\u52A0\u64CD\u4F5C\uFF0C\u5E76\u4E14\u521D\u59CB\u503C\u9ED8\u8BA4\u4E3A 0\uFF1BLongAccumulator \u53EF\u4EE5\u81EA\u5DF1\u5B9A\u4E49\u4E00\u4E2A\u4E8C\u5143\u64CD\u4F5C\u7B26\uFF0C\u5E76\u4E14\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u521D\u59CB\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LongBinaryOperator</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> <span class="token function">applyAsLong</span><span class="token punctuation">(</span><span class="token keyword">long</span> left<span class="token punctuation">,</span> <span class="token keyword">long</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u64CD\u4F5C\u7B26\u7684\u5DE6\u503C\uFF0C\u5C31\u662F base \u53D8\u91CF\u6216\u8005 Cells[] \u4E2D\u5143\u7D20\u7684\u5F53\u524D\u503C\uFF1B\u53F3\u503C\uFF0C\u5C31\u662F add() \u51FD\u6570\u4F20\u5165\u7684\u53C2\u6570 x\u3002</p><p>\u4E0B\u9762\u662F LongAccumulator \u7684 accumulate(x) \u51FD\u6570\uFF0C\u4E0E LongAdder \u7684 add(x) \u51FD\u6570\u7C7B\u4F3C\uFF0C\u6700\u540E\u90FD\u662F\u8C03\u7528\u7684 Striped64 \u7684 LongAccumulate(..) \u51FD\u6570\u3002\u552F\u4E00\u7684\u5DEE\u522B\u5C31\u662F LongAdder \u7684 add(x) \u51FD\u6570\u8C03\u7528\u7684\u662F casBase(b, b + x)\uFF0C\u8FD9\u91CC\u8C03\u7528\u7684\u662F casBase(b, r)\uFF0C\u5176\u4E2D\uFF0Cr = function.applyAsLong(b = base, x)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accumulate</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">,</span> r<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
        <span class="token punctuation">(</span>r <span class="token operator">=</span> function<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> b <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
            <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span>
              <span class="token punctuation">(</span>r <span class="token operator">=</span> function<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> v <span class="token operator">||</span>
              a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> function<span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-6-doubleadder-\u4E0E-doubleaccumulator" tabindex="-1"><a class="header-anchor" href="#_2-6-6-doubleadder-\u4E0E-doubleaccumulator" aria-hidden="true">#</a> 2.6.6 DoubleAdder \u4E0E DoubleAccumulator</h3><p>DoubleAdder \u5176\u5B9E\u4E5F\u662F\u7528 long \u578B\u5B9E\u73B0\u7684\uFF0C\u56E0\u4E3A\u6CA1\u6709 double \u7C7B\u578B\u7684 CAS \u51FD\u6570\u3002\u4E0B\u9762\u662F DoubleAdder \u7684 add(x) \u51FD\u6570\uFF0C\u548C LongAdder \u7684 add(x) \u51FD\u6570\u57FA\u672C\u4E00\u6837\uFF0C\u53EA\u662F\u591A\u4E86 long \u548C double \u7C7B\u578B\u7684\u76F8\u4E92\u8F6C\u6362\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
        <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span>
                 <span class="token class-name">Double</span><span class="token punctuation">.</span>doubleToRawLongBits
                 <span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">longBitsToDouble</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
            <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
                                  <span class="token class-name">Double</span><span class="token punctuation">.</span>doubleToRawLongBits
                                  <span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">longBitsToDouble</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">doubleAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u7684\u5173\u952E Double.doubleToRawLongBits(Double.longBitsToDouble(b) + x)\uFF0C\u5728\u8BFB\u51FA\u6765\u7684\u65F6\u5019\uFF0C\u5B83\u628A long \u7C7B\u578B\u8F6C\u6362\u6210 double \u7C7B\u578B\uFF0C\u7136\u540E\u8FDB\u884C\u7D2F\u52A0\uFF0C\u7D2F\u52A0\u7684\u7ED3\u679C\u518D\u8F6C\u6362\u6210 long \u7C7B\u578B\uFF0C\u901A\u8FC7 CAS \u5199\u56DE\u53BB\u3002</p><p>DoubleAccumulate \u4E5F\u662F Striped64 \u7684\u6210\u5458\u51FD\u6570\uFF0C\u548C longAccumulate \u7C7B\u4F3C\uFF0C\u4E5F\u662F\u591A\u4E86 long \u7C7B\u578B\u548C double \u7C7B\u578B\u7684\u4E92\u76F8\u8F6C\u6362\u3002</p><p>DoubleAccumulator \u548C DoubleAdder \u7684\u5173\u7CFB\uFF0C\u4E0E LongAccumulator \u548C LongAdder \u7684\u5173\u7CFB\u7C7B\u4F3C\uFF0C\u53EA\u662F\u591A\u4E86\u4E00\u4E2A\u4E8C\u5143\u64CD\u4F5C\u7B26\uFF0C\u6B64\u5904\u4E0D\u518D\u8D58\u8FF0\u3002</p><p>\u5230\u6B64\u4E3A\u6B62\uFF0CConcurrent \u5305\u7684\u6240\u6709\u539F\u5B50\u7C7B\u90FD\u4ECB\u7ECD\u5B8C\u4E86\uFF0C\u63A5\u4E0B\u6765\u5206\u6790\u9501\u7684\u5B9E\u73B0\u3002</p>`,171),k=[u];function r(d,v){return s(),a("div",null,k)}var y=n(i,[["render",r],["__file","\u7B2C2\u7AE0Atomic\u7C7B.html.vue"]]);export{y as default};
