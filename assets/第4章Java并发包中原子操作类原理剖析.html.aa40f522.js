import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.0d56c066.js";var t="/assets/\u56FE4-1.f78f1de6.jpeg",e="/assets/\u56FE4-2.f4fbc816.jpeg",o="/assets/\u56FE4-3.55601789.jpeg";const c={},l=p(`<h1 id="\u7B2C-4-\u7AE0-java-\u5E76\u53D1\u5305\u4E2D\u539F\u5B50\u64CD\u4F5C\u7C7B\u539F\u7406\u5256\u6790" tabindex="-1"><a class="header-anchor" href="#\u7B2C-4-\u7AE0-java-\u5E76\u53D1\u5305\u4E2D\u539F\u5B50\u64CD\u4F5C\u7C7B\u539F\u7406\u5256\u6790" aria-hidden="true">#</a> \u7B2C 4 \u7AE0 Java \u5E76\u53D1\u5305\u4E2D\u539F\u5B50\u64CD\u4F5C\u7C7B\u539F\u7406\u5256\u6790</h1><p>JUC \u5305\u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217\u7684\u539F\u5B50\u6027\u64CD\u4F5C\u7C7B\uFF0C\u8FD9\u4E9B\u7C7B\u90FD\u662F\u4F7F\u7528\u975E\u963B\u585E\u7B97\u6CD5 CAS \u5B9E\u73B0\u7684\uFF0C\u76F8\u6BD4\u4F7F\u7528\u9501\u5B9E\u73B0\u539F\u5B50\u6027\u64CD\u4F5C\u8FD9\u5728\u6027\u80FD\u4E0A\u6709\u5F88\u5927\u63D0\u9AD8\u3002\u7531\u4E8E\u539F\u5B50\u6027\u64CD\u4F5C\u7C7B\u7684\u539F\u7406\u90FD\u5927\u81F4\u76F8\u540C\uFF0C\u6240\u4EE5\u672C\u7AE0\u53EA\u8BB2\u89E3\u6700\u7B80\u5355\u7684 AtomicLong \u7C7B\u7684\u5B9E\u73B0\u539F\u7406\u4EE5\u53CA JDK 8 \u4E2D\u65B0\u589E\u7684 LongAdder \u548C LongAccumulator \u7C7B\u7684\u539F\u7406\u3002\u6709\u4E86\u8FD9\u4E9B\u57FA\u7840\uFF0C\u518D\u53BB\u7406\u89E3\u5176\u4ED6\u539F\u5B50\u6027\u64CD\u4F5C\u7C7B\u7684\u5B9E\u73B0\u5C31\u4E0D\u4F1A\u611F\u5230\u56F0\u96BE\u4E86\u3002</p><h2 id="_4-1-\u539F\u5B50\u53D8\u91CF\u64CD\u4F5C\u7C7B" tabindex="-1"><a class="header-anchor" href="#_4-1-\u539F\u5B50\u53D8\u91CF\u64CD\u4F5C\u7C7B" aria-hidden="true">#</a> 4.1 \u539F\u5B50\u53D8\u91CF\u64CD\u4F5C\u7C7B</h2><p>JUC \u5E76\u53D1\u5305\u4E2D\u5305\u542B\u6709 AtomicInteger\u3001AtomicLong \u548C AtomicBoolean \u7B49\u539F\u5B50\u6027\u64CD\u4F5C\u7C7B\uFF0C\u5B83\u4EEC\u7684\u539F\u7406\u7C7B\u4F3C\uFF0C\u672C\u7AE0\u8BB2\u89E3 AtomicLong \u7C7B\u3002AtomicLong \u662F\u539F\u5B50\u6027\u9012\u589E\u6216\u8005\u9012\u51CF\u7C7B\uFF0C\u5176\u5185\u90E8\u4F7F\u7528 Unsafe \u6765\u5B9E\u73B0\uFF0C\u6211\u4EEC\u770B\u4E0B\u9762\u7684\u4EE3\u7801\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicLong</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1927816293512124184L</span><span class="token punctuation">;</span>
    <span class="token comment">// (1) \u83B7\u53D6 Unsafe \u5B9E\u4F8B</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Unsafe</span> unsafe <span class="token operator">=</span> <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// (2) \u5B58\u653E\u53D8\u91CF value \u7684\u504F\u79FB\u91CF</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> valueOffset<span class="token punctuation">;</span>
    <span class="token comment">// (3) \u5224\u65AD JVM \u662F\u5426\u652F\u6301 Long \u7C7B\u578B\u65E0\u9501 CAS</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> VM_SUPPORTS_LONG_CAS <span class="token operator">=</span> <span class="token class-name">VMSupportsCS8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token class-name">VMSupportsCS8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// (4) \u83B7\u53D6 value \u5728 AtomicLong \u4E2D\u7684\u504F\u79FB\u91CF</span>
            valueOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span><span class="token class-name">AtomicLong</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// (5) \u5B9E\u9645\u53D8\u91CF\u503C</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> value<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token keyword">long</span> initialValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> initialValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//  ....</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801 (1) \u901A\u8FC7 Unsafe.getUnsafe() \u65B9\u6CD5\u83B7\u53D6\u5230 Unsafe \u7C7B\u7684\u5B9E\u4F8B\uFF0C\u8FD9\u91CC\u4F60\u53EF\u80FD\u4F1A\u6709\u7591\u95EE\uFF0C\u4E3A\u4F55\u80FD\u901A\u8FC7 Unsafe.getUnsafe() \u65B9\u6CD5\u83B7\u53D6\u5230 Unsafe \u7C7B\u7684\u5B9E\u4F8B\uFF1F\u5176\u5B9E\u8FD9\u662F\u56E0\u4E3A AtomicLong \u7C7B\u4E5F\u662F\u5728 rt.jar \u5305\u4E0B\u9762\u7684\uFF0CAtomicLong \u7C7B\u5C31\u662F\u901A\u8FC7 BootStarp \u7C7B\u52A0\u8F7D\u5668\u8FDB\u884C\u52A0\u8F7D\u7684\u3002</p><p>\u4EE3\u7801 (5) \u4E2D\u7684 value \u88AB\u58F0\u660E\u4E3A volatile \u7684\uFF0C\u8FD9\u662F\u4E3A\u4E86\u5728\u591A\u7EBF\u7A0B\u4E0B\u4FDD\u8BC1\u5185\u5B58\u53EF\u89C1\u6027\uFF0Cvalue \u662F\u5177\u4F53\u5B58\u653E\u8BA1\u6570\u7684\u53D8\u91CF\u3002</p><p>\u4EE3\u7801 (2)\u3001(4) \u83B7\u53D6 value \u53D8\u91CF\u5728 AtomicLong \u7C7B\u4E2D\u7684\u504F\u79FB\u91CF\u3002</p><p>\u4E0B\u9762\u91CD\u70B9\u770B\u4E0B AtomicLong \u4E2D\u7684\u4E3B\u8981\u51FD\u6570\u3002</p><ol><li><p>\u9012\u589E\u548C\u9012\u51CF\u64CD\u4F5C\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// (6) \u8C03\u7528 unsafe \u65B9\u6CD5\uFF0C\u539F\u5B50\u6027\u8BBE\u7F6E value \u503C\u4E3A\u539F\u59CB\u503C + 1\uFF0C\u8FD4\u56DE\u503C\u4E3A\u9012\u589E\u540E\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">getAndAddLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> <span class="token number">1L</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1L</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// (7) \u8C03\u7528 unsafe \u65B9\u6CD5\uFF0C\u539F\u5B50\u6027\u8BBE\u7F6E value \u503C\u4E3A\u539F\u59CB\u503C - 1\uFF0C\u8FD4\u56DE\u503C\u4E3A\u9012\u51CF\u4E4B\u540E\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">decrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">getAndAddLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1L</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// (8) \u8C03\u7528 unsafe \u65B9\u6CD5\uFF0C\u539F\u5B50\u6027\u8BBE\u7F6E value \u503C\u4E3A\u539F\u59CB\u503C + 1\uFF0C\u8FD4\u56DE\u503C\u4E3A\u539F\u59CB\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">getAndAddLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// (9) \u8C03\u7528 unsafe \u65B9\u6CD5\uFF0C\u539F\u5B50\u6027\u8BBE\u7F6E value \u503C\u4E3A\u539F\u59CB\u503C - 1\uFF0C\u8FD4\u56DE\u503C\u4E3A\u539F\u59CB\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">getAndAddLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5982\u4E0A\u4EE3\u7801\u5185\u90E8\u90FD\u662F\u901A\u8FC7\u8C03\u7528 Unsafe \u7684 getAndAddLong \u65B9\u6CD5\u6765\u5B9E\u73B0\u64CD\u4F5C\uFF0C\u8FD9\u4E2A\u51FD\u6570\u662F\u4E2A\u539F\u5B50\u6027\u64CD\u4F5C\uFF0C\u8FD9\u91CC\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F AtomicLong \u5B9E\u4F8B\u7684\u5F15\u7528\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F value \u53D8\u91CF\u5728 AtomicLong \u4E2D\u7684\u504F\u79FB\u503C\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570\u662F\u8981\u8BBE\u7F6E\u7684\u7B2C\u4E8C\u4E2A\u53D8\u91CF\u7684\u503C\u3002</p><p>\u5176\u4E2D\uFF0CgetAndIncrement \u65B9\u6CD5\u5728 JDK 7 \u4E2D\u7684\u5B9E\u73B0\u903B\u8F91\u4E3A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> current <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> next <span class="token operator">=</span> current <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> current<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5982\u4E0A\u4EE3\u7801\u4E2D\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u662F\u5148\u62FF\u5230\u53D8\u91CF\u7684\u5F53\u524D\u503C\uFF08\u7531\u4E8E value \u662F volatile \u53D8\u91CF\uFF0C\u6240\u4EE5\u8FD9\u91CC\u62FF\u5230\u7684\u662F\u6700\u65B0\u7684\u503C\uFF09\uFF0C\u7136\u540E\u5728\u5DE5\u4F5C\u5185\u5B58\u4E2D\u5BF9\u5176\u8FDB\u884C\u589E 1 \u64CD\u4F5C\uFF0C\u800C\u540E\u4F7F\u7528 CAS \u4FEE\u6539\u53D8\u91CF\u7684\u503C\u3002\u5982\u679C\u8BBE\u7F6E\u5931\u8D25\uFF0C\u5219\u5FAA\u73AF\u7EE7\u7EED\u5C1D\u8BD5\uFF0C\u76F4\u5230\u8BBE\u7F6E\u6210\u529F\u3002</p><p>\u800C JDK 8 \u4E2D\u7684\u903B\u8F91\u4E3A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">getAndAddLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D JDK 8 \u4E2D unsafe.getAndAddLong \u7684\u4EE3\u7801\u4E3A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">getAndAddLong</span><span class="token punctuation">(</span><span class="token class-name">Object</span> paramObject<span class="token punctuation">,</span> <span class="token keyword">long</span> paramLong1<span class="token punctuation">,</span> <span class="token keyword">long</span> paramLong2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> l<span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        l <span class="token operator">=</span> <span class="token function">getLongvolatile</span><span class="token punctuation">(</span>paramObject<span class="token punctuation">,</span> paramLong1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span>paramObject<span class="token punctuation">,</span> paramLong1<span class="token punctuation">,</span> l<span class="token punctuation">,</span> l <span class="token operator">+</span> paramLong2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0CJDK 7 \u7684 AtomicLong \u4E2D\u7684\u5FAA\u73AF\u903B\u8F91\u5DF2\u7ECF\u88AB JDK 8 \u4E2D\u7684\u539F\u5B50\u64CD\u4F5C\u7C7B Unsafe \u5185\u7F6E\u4E86\uFF0C\u4E4B\u6240\u4EE5\u5185\u7F6E\u5E94\u8BE5\u662F\u8003\u8651\u5230\u8FD9\u4E2A\u51FD\u6570\u5728\u5176\u4ED6\u5730\u65B9\u4E5F\u4F1A\u7528\u5230\uFF0C\u800C\u5185\u7F6E\u53EF\u4EE5\u63D0\u9AD8\u590D\u7528\u6027\u3002</p></li><li><p>boolean compareAndSet(long expect, long update) \u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">long</span> expect<span class="token punctuation">,</span> <span class="token keyword">long</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u5982\u4E0A\u4EE3\u7801\u53EF\u77E5\uFF0C\u5728\u5185\u90E8\u8FD8\u662F\u8C03\u7528\u4E86 unsafe.compareAndSwapLong \u65B9\u6CD5\u3002\u5982\u679C\u539F\u5B50\u53D8\u91CF\u4E2D\u7684 value \u503C\u7B49\u4E8E expect\uFF0C\u5219\u4F7F\u7528 update \u503C\u66F4\u65B0\u8BE5\u503C\u5E76\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false\u3002</p></li></ol><p>\u4E0B\u9762\u901A\u8FC7\u4E00\u4E2A\u591A\u7EBF\u7A0B\u4F7F\u7528 AtomicLong \u7EDF\u8BA1 0 \u7684\u4E2A\u6570\u7684\u4F8B\u5B50\u6765\u52A0\u6DF1\u5BF9 AtomicLong \u7684\u7406\u89E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u7EDF\u8BA1 0 \u7684\u4E2A\u6570
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Atomic</span> <span class="token punctuation">{</span>
    <span class="token comment">// (10)\u521B\u5EFA Long \u578B\u539F\u5B50\u8BA1\u6570\u5668</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">AtomicLong</span> atomicLong <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// (11) \u521B\u5EFA\u6570\u636E\u6E90</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrayOne <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrayTwo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// (12) \u7EBF\u7A0B one \u7EDF\u8BA1\u6570\u7EC4 arrayOne \u4E2D 0 \u7684\u4E2A\u6570</span>
        <span class="token class-name">Thread</span> threadOne <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> size <span class="token operator">=</span> arrayOne<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayOne<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        atomicLong<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// (13) \u7EBF\u7A0B two \u7EDF\u8BA1\u6570\u7EC4 arrayTwo \u4E2D 0 \u7684\u4E2A\u6570</span>
        <span class="token class-name">Thread</span> threadTwo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> size <span class="token operator">=</span> arrayTwo<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayTwo<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        atomicLong<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// (14) \u542F\u52A8\u5B50\u7EBF\u7A0B</span>
        threadOne<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        threadTwo<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// (15) \u7B49\u5F85\u7EBF\u7A0B\u6267\u884C\u5B8C\u6BD5</span>
        threadOne<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        threadTwo<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;count 0:&quot;</span> <span class="token operator">+</span> atomicLong<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\u4E3A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>count <span class="token number">0</span><span class="token operator">:</span><span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u4E0A\u4EE3\u7801\u4E2D\u7684\u4E24\u4E2A\u7EBF\u7A0B\u5404\u81EA\u7EDF\u8BA1\u81EA\u5DF1\u6240\u6301\u6570\u636E\u4E2D 0 \u7684\u4E2A\u6570\uFF0C\u6BCF\u5F53\u627E\u5230\u4E00\u4E2A 0 \u5C31\u4F1A\u8C03\u7528 AtomicLong \u7684\u539F\u5B50\u6027\u9012\u589E\u65B9\u6CD5\u3002</p><p>\u5728\u6CA1\u6709\u539F\u5B50\u7C7B\u7684\u60C5\u51B5\u4E0B\uFF0C\u5B9E\u73B0\u8BA1\u6570\u5668\u9700\u8981\u4F7F\u7528\u4E00\u5B9A\u7684\u540C\u6B65\u63AA\u65BD\uFF0C\u6BD4\u5982\u4F7F\u7528 synchronized \u5173\u952E\u5B57\u7B49\uFF0C\u4F46\u662F\u8FD9\u4E9B\u90FD\u662F\u963B\u585E\u7B97\u6CD5\uFF0C\u5BF9\u6027\u80FD\u6709\u4E00\u5B9A\u635F\u8017\uFF0C\u800C\u672C\u7AE0\u4ECB\u7ECD\u7684\u8FD9\u4E9B\u539F\u5B50\u64CD\u4F5C\u7C7B\u90FD\u4F7F\u7528 CAS \u975E\u963B\u585E\u7B97\u6CD5\uFF0C\u6027\u80FD\u66F4\u597D\u3002\u4F46\u662F\u5728\u9AD8\u5E76\u53D1\u60C5\u51B5\u4E0B AtomicLong \u8FD8\u4F1A\u5B58\u5728\u6027\u80FD\u95EE\u9898\u3002JDK 8 \u63D0\u4F9B\u4E86\u4E00\u4E2A\u5728\u9AD8\u5E76\u53D1\u4E0B\u6027\u80FD\u66F4\u597D\u7684 LongAdder \u7C7B\uFF0C\u4E0B\u9762\u6211\u4EEC\u6765\u8BB2\u89E3\u8FD9\u4E2A\u7C7B\u3002</p><h2 id="_4-2-jdk-8-\u65B0\u589E\u7684\u539F\u5B50\u64CD\u4F5C\u7C7B-longadder" tabindex="-1"><a class="header-anchor" href="#_4-2-jdk-8-\u65B0\u589E\u7684\u539F\u5B50\u64CD\u4F5C\u7C7B-longadder" aria-hidden="true">#</a> 4.2 JDK 8 \u65B0\u589E\u7684\u539F\u5B50\u64CD\u4F5C\u7C7B LongAdder</h2><h3 id="_4-2-1-longadder-\u7B80\u5355\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#_4-2-1-longadder-\u7B80\u5355\u4ECB\u7ECD" aria-hidden="true">#</a> 4.2.1 LongAdder \u7B80\u5355\u4ECB\u7ECD</h3><p>\u524D\u9762\u8BB2\u8FC7\uFF0CAtomicLong \u901A\u8FC7 CAS \u63D0\u4F9B\u4E86\u975E\u963B\u585E\u7684\u539F\u5B50\u6027\u64CD\u4F5C\uFF0C\u76F8\u6BD4\u4F7F\u7528\u963B\u585E\u7B97\u6CD5\u7684\u540C\u6B65\u5668\u6765\u8BF4\u5B83\u7684\u6027\u80FD\u5DF2\u7ECF\u5F88\u597D\u4E86\uFF0C\u4F46\u662F JDK \u5F00\u53D1\u7EC4\u5E76\u4E0D\u6EE1\u8DB3\u4E8E\u6B64\u3002\u4F7F\u7528 AtomicLong \u65F6\uFF0C\u5728\u9AD8\u5E76\u53D1\u4E0B\u5927\u91CF\u7EBF\u7A0B\u4F1A\u540C\u65F6\u53BB\u7ADE\u4E89\u66F4\u65B0\u540C\u4E00\u4E2A\u539F\u5B50\u53D8\u91CF\uFF0C\u4F46\u662F\u7531\u4E8E\u540C\u65F6\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u7684 CAS \u64CD\u4F5C\u4F1A\u6210\u529F\uFF0C\u8FD9\u5C31\u9020\u6210\u4E86\u5927\u91CF\u7EBF\u7A0B\u7ADE\u4E89\u5931\u8D25\u540E\uFF0C\u4F1A\u901A\u8FC7\u65E0\u9650\u5FAA\u73AF\u4E0D\u65AD\u8FDB\u884C\u81EA\u65CB\u5C1D\u8BD5 CAS \u7684\u64CD\u4F5C\uFF0C\u800C\u8FD9\u4F1A\u767D\u767D\u6D6A\u8D39 CPU \u8D44\u6E90\u3002</p><p>\u56E0\u6B64 JDK 8 \u65B0\u589E\u4E86\u4E00\u4E2A\u539F\u5B50\u6027\u9012\u589E\u6216\u8005\u9012\u51CF\u7C7B LongAdder \u7528\u6765\u514B\u670D\u5728\u9AD8\u5E76\u53D1\u4E0B\u4F7F\u7528 AtomicLong \u7684\u7F3A\u70B9\u3002\u65E2\u7136 AtomicLong \u7684\u6027\u80FD\u74F6\u9888\u662F\u7531\u4E8E\u8FC7\u591A\u7EBF\u7A0B\u540C\u65F6\u53BB\u7ADE\u4E89\u4E00\u4E2A\u53D8\u91CF\u7684\u66F4\u65B0\u800C\u4EA7\u751F\u7684\uFF0C\u90A3\u4E48\u5982\u679C\u628A\u4E00\u4E2A\u53D8\u91CF\u5206\u89E3\u4E3A\u591A\u4E2A\u53D8\u91CF\uFF0C\u8BA9\u540C\u6837\u591A\u7684\u7EBF\u7A0B\u53BB\u7ADE\u4E89\u591A\u4E2A\u8D44\u6E90\uFF0C\u662F\u4E0D\u662F\u5C31\u89E3\u51B3\u4E86\u6027\u80FD\u95EE\u9898\uFF1F\u662F\u7684\uFF0CLongAdder \u5C31\u662F\u8FD9\u4E2A\u601D\u8DEF\u3002\u4E0B\u9762\u901A\u8FC7\u56FE\u6765\u7406\u89E3\u4E24\u8005\u8BBE\u8BA1\u7684\u4E0D\u540C\u4E4B\u5904\uFF0C\u5982\u56FE4-1 \u6240\u793A\u3002</p><img src="`+t+'" alt="\u56FE4-1" style="zoom:50%;"><p>\u56FE4-1</p><p>\u5982\u56FE4-1 \u6240\u793A\uFF0C\u4F7F\u7528 AtomicLong \u65F6\uFF0C\u662F\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u7ADE\u4E89\u540C\u4E00\u4E2A\u539F\u5B50\u53D8\u91CF\u3002</p><p>\u5982\u56FE4-2 \u6240\u793A\uFF0C\u4F7F\u7528 LongAdder \u65F6\uFF0C\u5219\u662F\u5728\u5185\u90E8\u7EF4\u62A4\u591A\u4E2A Cell \u53D8\u91CF\uFF0C\u6BCF\u4E2A Cell \u91CC\u9762\u6709\u4E00\u4E2A\u521D\u59CB\u503C\u4E3A 0 \u7684 long \u578B\u53D8\u91CF\uFF0C\u8FD9\u6837\uFF0C\u5728\u540C\u7B49\u5E76\u53D1\u91CF\u7684\u60C5\u51B5\u4E0B\uFF0C\u4E89\u593A\u5355\u4E2A\u53D8\u91CF\u66F4\u65B0\u64CD\u4F5C\u7684\u7EBF\u7A0B\u91CF\u4F1A\u51CF\u5C11\uFF0C\u8FD9\u53D8\u76F8\u5730\u51CF\u5C11\u4E86\u4E89\u593A\u5171\u4EAB\u8D44\u6E90\u7684\u5E76\u53D1\u91CF\u3002\u53E6\u5916\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u5728\u4E89\u593A\u540C\u4E00\u4E2A Cell \u539F\u5B50\u53D8\u91CF\u65F6\u5982\u679C\u5931\u8D25\u4E86\uFF0C\u5B83\u5E76\u4E0D\u662F\u5728\u5F53\u524D Cell \u53D8\u91CF\u4E0A\u4E00\u76F4\u81EA\u65CB CAS \u91CD\u8BD5\uFF0C\u800C\u662F\u5C1D\u8BD5\u5728\u5176\u4ED6 Cell \u7684\u53D8\u91CF\u4E0A\u8FDB\u884C CAS \u5C1D\u8BD5\uFF0C\u8FD9\u4E2A\u6539\u53D8\u589E\u52A0\u4E86\u5F53\u524D\u7EBF\u7A0B\u91CD\u8BD5 CAS \u6210\u529F\u7684\u53EF\u80FD\u6027\u3002\u6700\u540E\uFF0C\u5728\u83B7\u53D6 LongAdder \u5F53\u524D\u503C\u65F6\uFF0C\u662F\u628A\u6240\u6709 Cell \u53D8\u91CF\u7684 value \u503C\u7D2F\u52A0\u540E\u518D\u52A0\u4E0A base \u8FD4\u56DE\u7684\u3002</p><img src="'+e+'" alt="\u56FE4-2" style="zoom:50%;"><p>\u56FE4-2</p><p>LongAdder \u7EF4\u62A4\u4E86\u4E00\u4E2A\u5EF6\u8FDF\u521D\u59CB\u5316\u7684\u539F\u5B50\u6027\u66F4\u65B0\u6570\u7EC4\uFF08\u9ED8\u8BA4\u60C5\u51B5\u4E0B Cell \u6570\u7EC4\u662F null\uFF09\u548C\u4E00\u4E2A\u57FA\u503C\u53D8\u91CF base\u3002\u7531\u4E8E Cells \u5360\u7528\u7684\u5185\u5B58\u662F\u76F8\u5BF9\u6BD4\u8F83\u5927\u7684\uFF0C\u6240\u4EE5\u4E00\u5F00\u59CB\u5E76\u4E0D\u521B\u5EFA\u5B83\uFF0C\u800C\u662F\u5728\u9700\u8981\u65F6\u521B\u5EFA\uFF0C\u4E5F\u5C31\u662F\u60F0\u6027\u52A0\u8F7D\u3002</p><p>\u5F53\u4E00\u5F00\u59CB\u5224\u65AD Cell \u6570\u7EC4\u662F null \u5E76\u4E14\u5E76\u53D1\u7EBF\u7A0B\u8F83\u5C11\u65F6\uFF0C\u6240\u6709\u7684\u7D2F\u52A0\u64CD\u4F5C\u90FD\u662F\u5BF9 base \u53D8\u91CF\u8FDB\u884C\u7684\u3002\u4FDD\u6301 Cell \u6570\u7EC4\u7684\u5927\u5C0F\u4E3A 2 \u7684 N \u6B21\u65B9\uFF0C\u5728\u521D\u59CB\u5316\u65F6 Cell \u6570\u7EC4\u4E2D\u7684 Cell \u5143\u7D20\u4E2A\u6570\u4E3A 2\uFF0C\u6570\u7EC4\u91CC\u9762\u7684\u53D8\u91CF\u5B9E\u4F53\u662F Cell \u7C7B\u578B\u3002Cell \u7C7B\u578B\u662F AtomicLong \u7684\u4E00\u4E2A\u6539\u8FDB\uFF0C\u7528\u6765\u51CF\u5C11\u7F13\u5B58\u7684\u4E89\u7528\uFF0C\u4E5F\u5C31\u662F\u89E3\u51B3\u4F2A\u5171\u4EAB\u95EE\u9898\u3002</p><p>\u5BF9\u4E8E\u5927\u591A\u6570\u5B64\u7ACB\u7684\u591A\u4E2A\u539F\u5B50\u64CD\u4F5C\u8FDB\u884C\u5B57\u8282\u586B\u5145\u662F\u6D6A\u8D39\u7684\uFF0C\u56E0\u4E3A\u539F\u5B50\u6027\u64CD\u4F5C\u90FD\u662F\u65E0\u89C4\u5F8B\u5730\u5206\u6563\u5728\u5185\u5B58\u4E2D\u7684\uFF08\u4E5F\u5C31\u662F\u8BF4\u591A\u4E2A\u539F\u5B50\u6027\u53D8\u91CF\u7684\u5185\u5B58\u5730\u5740\u662F\u4E0D\u8FDE\u7EED\u7684\uFF09\uFF0C\u591A\u4E2A\u539F\u5B50\u53D8\u91CF\u88AB\u653E\u5165\u540C\u4E00\u4E2A\u7F13\u5B58\u884C\u7684\u53EF\u80FD\u6027\u5F88\u5C0F\u3002\u4F46\u662F\u539F\u5B50\u6027\u6570\u7EC4\u5143\u7D20\u7684\u5185\u5B58\u5730\u5740\u662F\u8FDE\u7EED\u7684\uFF0C\u6240\u4EE5\u6570\u7EC4\u5185\u7684\u591A\u4E2A\u5143\u7D20\u80FD\u7ECF\u5E38\u5171\u4EAB\u7F13\u5B58\u884C\uFF0C\u56E0\u6B64\u8FD9\u91CC\u4F7F\u7528 @sun.misc.Contended \u6CE8\u89E3\u5BF9 Cell \u7C7B\u8FDB\u884C\u5B57\u8282\u586B\u5145\uFF0C\u8FD9\u9632\u6B62\u4E86\u6570\u7EC4\u4E2D\u591A\u4E2A\u5143\u7D20\u5171\u4EAB\u4E00\u4E2A\u7F13\u5B58\u884C\uFF0C\u5728\u6027\u80FD\u4E0A\u662F\u4E00\u4E2A\u63D0\u5347\u3002</p><h3 id="_4-2-2-longadder-\u4EE3\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-2-2-longadder-\u4EE3\u7801\u5206\u6790" aria-hidden="true">#</a> 4.2.2 LongAdder \u4EE3\u7801\u5206\u6790</h3><p>\u4E3A\u4E86\u89E3\u51B3\u9AD8\u5E76\u53D1\u4E0B\u591A\u7EBF\u7A0B\u5BF9\u4E00\u4E2A\u53D8\u91CF CAS \u4E89\u593A\u5931\u8D25\u540E\u8FDB\u884C\u81EA\u65CB\u800C\u9020\u6210\u7684\u964D\u4F4E\u5E76\u53D1\u6027\u80FD\u95EE\u9898\uFF0CLongAdder \u5728\u5185\u90E8\u7EF4\u62A4\u591A\u4E2A Cell \u5143\u7D20\uFF08\u4E00\u4E2A\u52A8\u6001\u7684 Cell \u6570\u7EC4\uFF09\u6765\u5206\u62C5\u5BF9\u5355\u4E2A\u53D8\u91CF\u8FDB\u884C\u4E89\u593A\u7684\u5F00\u9500\u3002</p><p>\u4E0B\u9762\u56F4\u7ED5\u4EE5\u4E0B\u8BDD\u9898\u4ECE\u6E90\u7801\u89D2\u5EA6\u6765\u5206\u6790 LongAdder \u7684\u5B9E\u73B0\uFF1A</p><ol><li>LongAdder \u7684\u7ED3\u6784\u662F\u600E\u6837\u7684\uFF1F</li><li>\u5F53\u524D\u7EBF\u7A0B\u5E94\u8BE5\u8BBF\u95EE Cell \u6570\u7EC4\u91CC\u9762\u7684\u54EA\u4E00\u4E2A Cell \u5143\u7D20\uFF1F</li><li>\u5982\u4F55\u521D\u59CB\u5316 Cell \u6570\u7EC4\uFF1F</li><li>Cell \u6570\u7EC4\u5982\u4F55\u6269\u5BB9\uFF1F</li><li>\u7EBF\u7A0B\u8BBF\u95EE\u5206\u914D\u7684 Cell \u5143\u7D20\u6709\u51B2\u7A81\u540E\u5982\u4F55\u5904\u7406\uFF1F</li><li>\u5982\u4F55\u4FDD\u8BC1\u7EBF\u7A0B\u64CD\u4F5C\u88AB\u5206\u914D\u7684 Cell \u5143\u7D20\u7684\u539F\u5B50\u6027\uFF1F</li></ol><p>\u9996\u5148\u770B\u4E0B LongAdder \u7684\u7C7B\u56FE\u7ED3\u6784\uFF0C\u5982\u56FE4-3 \u6240\u793A\u3002</p><img src="'+o+`" alt="\u56FE4-3" style="zoom:50%;"><p>\u56FE4-3</p><p>\u7531\u8BE5\u56FE\u53EF\u77E5\uFF0CLongAdder \u7C7B\u7EE7\u627F\u81EA Striped64 \u7C7B\uFF0C\u5728 Striped64 \u5185\u90E8\u7EF4\u62A4\u7740\u4E09\u4E2A\u53D8\u91CF\u3002LongAdder \u7684\u771F\u5B9E\u503C\u5176\u5B9E\u662F base \u7684\u503C\u4E0E Cell \u6570\u7EC4\u91CC\u9762\u6240\u6709 Cell \u5143\u7D20\u4E2D\u7684 value \u503C\u7684\u7D2F\u52A0\uFF0Cbase \u662F\u4E2A\u57FA\u7840\u503C\uFF0C\u9ED8\u8BA4\u4E3A 0\u3002cellsBusy \u7528\u6765\u5B9E\u73B0\u81EA\u65CB\u9501\uFF0C\u72B6\u6001\u503C\u53EA\u6709 0 \u548C 1\uFF0C\u5F53\u521B\u5EFA Cell \u5143\u7D20\uFF0C\u6269\u5BB9 Cell \u6570\u7EC4\u6216\u8005\u521D\u59CB\u5316 Cell \u6570\u7EC4\u65F6\uFF0C\u4F7F\u7528 CAS \u64CD\u4F5C\u8BE5\u53D8\u91CF\u6765\u4FDD\u8BC1\u540C\u65F6\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u8FDB\u884C\u5176\u4E2D\u4E4B\u4E00\u7684\u64CD\u4F5C\u3002</p><p>\u4E0B\u9762\u770B Cell \u7684\u6784\u9020\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@sun.misc.Contended</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Cell</span> <span class="token punctuation">{</span>
    <span class="token keyword">volatile</span> <span class="token keyword">long</span> value<span class="token punctuation">;</span>

    <span class="token class-name">Cell</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">cas</span><span class="token punctuation">(</span><span class="token keyword">long</span> cmp<span class="token punctuation">,</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> cmp<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Unsafe mechanics</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Unsafe</span> UNSAFE<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> valueOffset<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            UNSAFE <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> ak <span class="token operator">=</span> <span class="token class-name">Cell</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
            valueOffset <span class="token operator">=</span> UNSAFE<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span>ak<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0CCell \u7684\u6784\u9020\u5F88\u7B80\u5355\uFF0C\u5176\u5185\u90E8\u7EF4\u62A4\u4E00\u4E2A\u88AB\u58F0\u660E\u4E3A volatile \u7684\u53D8\u91CF\uFF0C\u8FD9\u91CC\u58F0\u660E\u4E3A volatile \u662F\u56E0\u4E3A\u7EBF\u7A0B\u64CD\u4F5C value \u53D8\u91CF\u65F6\u6CA1\u6709\u4F7F\u7528\u9501\uFF0C\u4E3A\u4E86\u4FDD\u8BC1\u53D8\u91CF\u7684\u5185\u5B58\u53EF\u89C1\u6027\u8FD9\u91CC\u5C06\u5176\u58F0\u660E\u4E3A volatile \u7684\u3002\u53E6\u5916 cas \u51FD\u6570\u901A\u8FC7 CAS \u64CD\u4F5C\uFF0C\u4FDD\u8BC1\u4E86\u5F53\u524D\u7EBF\u7A0B\u66F4\u65B0\u65F6\u88AB\u5206\u914D\u7684 Cell \u5143\u7D20\u4E2D value \u503C\u7684\u539F\u5B50\u6027\u3002\u53E6\u5916\uFF0CCell \u7C7B\u4F7F\u7528 @sun.misc.Contended \u4FEE\u9970\u662F\u4E3A\u4E86\u907F\u514D\u4F2A\u5171\u4EAB\u3002\u5230\u8FD9\u91CC\u6211\u4EEC\u56DE\u7B54\u4E86\u95EE\u9898 1 \u548C\u95EE\u9898 6\u3002</p><ul><li><p>long sum() \u8FD4\u56DE\u5F53\u524D\u7684\u503C\uFF0C\u5185\u90E8\u64CD\u4F5C\u662F\u7D2F\u52A0\u6240\u6709 Cell \u5185\u90E8\u7684 value \u503C\u540E\u518D\u7D2F\u52A0 base\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u4EE3\u7801\uFF0C\u7531\u4E8E\u8BA1\u7B97\u603B\u548C\u65F6\u6CA1\u6709\u5BF9 Cell \u6570\u7EC4\u8FDB\u884C\u52A0\u9501\uFF0C\u6240\u4EE5\u5728\u7D2F\u52A0\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u6709\u5176\u4ED6\u7EBF\u7A0B\u5BF9 Cell \u4E2D\u7684\u503C\u8FDB\u884C\u4E86\u4FEE\u6539\uFF0C\u4E5F\u6709\u53EF\u80FD\u5BF9\u6570\u7EC4\u8FDB\u884C\u4E86\u6269\u5BB9\uFF0C\u6240\u4EE5 sum \u8FD4\u56DE\u7684\u503C\u5E76\u4E0D\u662F\u975E\u5E38\u7CBE\u786E\u7684\uFF0C\u5176\u8FD4\u56DE\u503C\u5E76\u4E0D\u662F\u4E00\u4E2A\u8C03\u7528 sum \u65B9\u6CD5\u65F6\u7684\u539F\u5B50\u5FEB\u7167\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">long</span> sum <span class="token operator">=</span> base<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                sum <span class="token operator">+=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>void reset() \u4E3A\u91CD\u7F6E\u64CD\u4F5C\uFF0C\u5982\u4E0B\u4EE3\u7801\u628A base \u7F6E\u4E3A 0\uFF0C\u5982\u679C Cell \u6570\u7EC4\u6709\u5143\u7D20\uFF0C\u5219\u5143\u7D20\u503C\u88AB\u91CD\u7F6E\u4E3A 0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    base <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                a<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>long sumThenReset() \u662F sum \u7684\u6539\u9020\u7248\u672C\uFF0C\u5982\u4E0B\u4EE3\u7801\u5728\u4F7F\u7528 sum \u7D2F\u52A0\u5BF9\u5E94\u7684 Cell \u503C\u540E\uFF0C\u628A\u5F53\u524D Cell \u7684\u503C\u91CD\u7F6E\u4E3A 0\uFF0Cbase \u91CD\u7F6E\u4E3A 0\u3002\u8FD9\u6837\uFF0C\u5F53\u591A\u7EBF\u7A0B\u8C03\u7528\u8BE5\u65B9\u6CD5\u65F6\u4F1A\u6709\u95EE\u9898\uFF0C\u6BD4\u5982\u8003\u8651\u7B2C\u4E00\u4E2A\u8C03\u7528\u7EBF\u7A0B\u6E05\u7A7A Cell \u7684\u503C\uFF0C\u5219\u540E\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528\u65F6\u7D2F\u52A0\u7684\u90FD\u662F 0 \u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">sumThenReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">long</span> sum <span class="token operator">=</span> base<span class="token punctuation">;</span>
    base <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sum <span class="token operator">+=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                a<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>long longValue() \u7B49\u4EF7\u4E8E sum()\u3002</p></li></ul><p>\u4E0B\u9762\u4E3B\u8981\u770B\u4E0B add \u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u4ECE\u8FD9\u4E2A\u65B9\u6CD5\u91CC\u9762\u5C31\u53EF\u4EE5\u627E\u5230\u5176\u4ED6\u95EE\u9898\u7684\u7B54\u6848\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span>
    <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">;</span>
    <span class="token keyword">int</span> m<span class="token punctuation">;</span>
    <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token comment">// (1)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> b <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">// (2)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
                <span class="token comment">// (3)</span>
                <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
                <span class="token comment">// (4)</span>
                <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> v <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">// (5)</span>
            <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">casBase</span><span class="token punctuation">(</span><span class="token keyword">long</span> cmp<span class="token punctuation">,</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> BASE<span class="token punctuation">,</span> cmp<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801 (1) \u9996\u5148\u770B cells \u662F\u5426\u4E3A null\uFF0C\u5982\u679C\u4E3A null \u5219\u5F53\u524D\u5728\u57FA\u7840\u53D8\u91CF base \u4E0A\u8FDB\u884C\u7D2F\u52A0\uFF0C\u8FD9\u65F6\u5019\u5C31\u7C7B\u4F3C AtomicLong \u7684\u64CD\u4F5C\u3002</p><p>\u5982\u679C cells \u4E0D\u4E3A null \u6216\u8005\u7EBF\u7A0B\u6267\u884C\u4EE3\u7801 (1) \u7684 CAS \u64CD\u4F5C\u5931\u8D25\u4E86\uFF0C\u5219\u4F1A\u53BB\u6267\u884C\u4EE3\u7801 (2)\u3002\u4EE3\u7801 (2)\u3001(3) \u51B3\u5B9A\u5F53\u524D\u7EBF\u7A0B\u5E94\u8BE5\u8BBF\u95EE cells \u6570\u7EC4\u91CC\u9762\u7684\u54EA\u4E00\u4E2A Cell \u5143\u7D20\uFF0C\u5982\u679C\u5F53\u524D\u7EBF\u7A0B\u6620\u5C04\u7684\u5143\u7D20\u5B58\u5728\u5219\u6267\u884C\u4EE3\u7801 (4)\uFF0C\u4F7F\u7528 CAS \u64CD\u4F5C\u53BB\u66F4\u65B0\u5206\u914D\u7684 Cell \u5143\u7D20\u7684 value \u503C\uFF0C\u5982\u679C\u5F53\u524D\u7EBF\u7A0B\u6620\u5C04\u7684\u5143\u7D20\u4E0D\u5B58\u5728\u6216\u8005\u5B58\u5728\u4F46\u662F CAS \u64CD\u4F5C\u5931\u8D25\u5219\u6267\u884C\u4EE3\u7801 (5)\u3002\u5176\u5B9E\u5C06\u4EE3\u7801 (2)\u3001(3)\u3001(1) \u5408\u8D77\u6765\u770B\u5C31\u662F\u83B7\u53D6\u5F53\u524D\u7EBF\u7A0B\u5E94\u8BE5\u8BBF\u95EE\u7684 cells \u6570\u7EC4\u7684 Cell \u5143\u7D20\uFF0C\u7136\u540E\u8FDB\u884C CAS \u66F4\u65B0\u64CD\u4F5C\uFF0C\u53EA\u662F\u5728\u83B7\u53D6\u671F\u95F4\u5982\u679C\u6709\u4E9B\u6761\u4EF6\u4E0D\u6EE1\u8DB3\u5219\u4F1A\u8DF3\u8F6C\u5230\u4EE3\u7801 (5) \u6267\u884C\u3002\u53E6\u5916\u5F53\u524D\u7EBF\u7A0B\u5E94\u8BE5\u8BBF\u95EE cells \u6570\u7EC4\u7684\u54EA\u4E00\u4E2A Cell \u5143\u7D20\u662F\u901A\u8FC7 getProbe() &amp; m \u8FDB\u884C\u8BA1\u7B97\u7684\uFF0C\u5176\u4E2D m \u662F\u5F53\u524D cells \u6570\u7EC4\u5143\u7D20\u4E2A\u6570 - 1\uFF0CgetProbe() \u5219\u7528\u4E8E\u83B7\u53D6\u5F53\u524D\u7EBF\u7A0B\u4E2D\u53D8\u91CF threadLocalRandomProbe \u7684\u503C\uFF0C\u8FD9\u4E2A\u503C\u4E00\u5F00\u59CB\u4E3A 0\uFF0C\u5728\u4EE3\u7801 (5) \u91CC\u9762\u4F1A\u5BF9\u5176\u8FDB\u884C\u521D\u59CB\u5316\u3002\u5E76\u4E14\u5F53\u524D\u7EBF\u7A0B\u901A\u8FC7\u5206\u914D\u7684 Cell \u5143\u7D20\u7684 cas \u51FD\u6570\u6765\u4FDD\u8BC1\u5BF9 Cell \u5143\u7D20 value \u503C\u66F4\u65B0\u7684\u539F\u5B50\u6027\uFF0C\u5230\u8FD9\u91CC\u6211\u4EEC\u56DE\u7B54\u4E86\u95EE\u9898 2 \u548C\u95EE\u9898 6\u3002</p><p>\u4E0B\u9762\u91CD\u70B9\u7814\u7A76 longAccumulate \u7684\u4EE3\u7801\u903B\u8F91\uFF0C\u8FD9\u662F cells \u6570\u7EC4\u88AB\u521D\u59CB\u5316\u548C\u6269\u5BB9\u7684\u5730\u65B9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">longAccumulate</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">,</span> <span class="token class-name">LongBinaryOperator</span> fn<span class="token punctuation">,</span> <span class="token keyword">boolean</span> wasUncontended<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// (6) \u521D\u59CB\u5316\u5F53\u524D\u7EBF\u7A0B\u7684\u53D8\u91CF threadLocalRandomProbe \u7684\u503C</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">=</span> <span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//</span>
        <span class="token class-name">ThreadLocalRandom</span><span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        h <span class="token operator">=</span> <span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        wasUncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">boolean</span> collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span>
        <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token punctuation">;</span>
        <span class="token keyword">long</span> v<span class="token punctuation">;</span>
        <span class="token comment">// (7)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> as<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// (8)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Try to attach new Cell</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Optimistically create</span>
                    <span class="token class-name">Cell</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">boolean</span> created <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token comment">// Recheck under lock</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs<span class="token punctuation">;</span>
                            <span class="token keyword">int</span> m<span class="token punctuation">,</span> j<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rs <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> rs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> rs<span class="token punctuation">[</span>j <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                rs<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">;</span>
                                created <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                            cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>created<span class="token punctuation">)</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token comment">// Slot is now non-empty</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// CAS already known to fail</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wasUncontended<span class="token punctuation">)</span>
                wasUncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token comment">// (9) \u5F53\u524D Cell \u5B58\u5728\uFF0C\u5219\u6267\u884C CAS \u8BBE\u7F6E</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token comment">// (10) \u5F53\u524D Cell \u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u5927\u4E8E CPU \u4E2A\u6570</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> NCPU <span class="token operator">||</span> cells <span class="token operator">!=</span> as<span class="token punctuation">)</span>
                <span class="token comment">// At max size or stale</span>
                collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token comment">// (11) \u662F\u5426\u6709\u51B2\u7A81</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>collide<span class="token punctuation">)</span>
                collide <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token comment">// (12) \u5982\u679C\u5F53\u524D\u5143\u7D20\u4E2A\u6570\u6CA1\u6709\u8FBE\u5230 CPU \u4E2A\u6570\u5E76\u4E14\u6709\u51B2\u7A81\u5219\u6269\u5BB9</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Expand table unless stale</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cells <span class="token operator">==</span> as<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// (12.1)</span>
                        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
                            rs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                        cells <span class="token operator">=</span> rs<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token comment">// (12.2)</span>
                    cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// (12.3)</span>
                collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token comment">// Retry with expanded table</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// (13) \u4E3A\u4E86\u80FD\u591F\u627E\u5230\u4E00\u4E2A\u7A7A\u95F2\u7684 Cell\uFF0C\u91CD\u65B0\u8BA1\u7B97 hash \u503C\uFF0Cxorshift \u7B97\u6CD5\u751F\u6210\u968F\u673A\u6570</span>
            h <span class="token operator">=</span> <span class="token function">advanceProbe</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// (14) \u521D\u59CB\u5316 Cell \u6570\u7EC4</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> cells <span class="token operator">==</span> as <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> init <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cells <span class="token operator">==</span> as<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// (14.1)</span>
                    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token comment">// (14.2)</span>
                    rs<span class="token punctuation">[</span>h <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    cells <span class="token operator">=</span> rs<span class="token punctuation">;</span>
                    init <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token comment">// (14.3)</span>
                cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>init<span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casBase</span><span class="token punctuation">(</span>v <span class="token operator">=</span> base<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">// Fall back on using base</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u6BD4\u8F83\u590D\u6742\uFF0C\u8FD9\u91CC\u6211\u4EEC\u4E3B\u8981\u5173\u6CE8\u95EE\u9898 3\u3001\u95EE\u9898 4 \u548C\u95EE\u9898 5\u3002</p><p>\u5F53\u6BCF\u4E2A\u7EBF\u7A0B\u7B2C\u4E00\u6B21\u6267\u884C\u5230\u4EE3\u7801 (6) \u65F6\uFF0C\u4F1A\u521D\u59CB\u5316\u5F53\u524D\u7EBF\u7A0B\u53D8\u91CF threadLocalRandomProbe \u7684\u503C\uFF0C\u4E0A\u9762\u4E5F\u8BF4\u4E86\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u5728\u8BA1\u7B97\u5F53\u524D\u7EBF\u7A0B\u5E94\u8BE5\u88AB\u5206\u914D\u5230 cells \u6570\u7EC4\u7684\u54EA\u4E00\u4E2A Cell \u5143\u7D20\u65F6\u4F1A\u7528\u5230\u3002</p><p>cells \u6570\u7EC4\u7684\u521D\u59CB\u5316\u662F\u5728\u4EE3\u7801 (14) \u4E2D\u8FDB\u884C\u7684\uFF0C\u5176\u4E2D cellsBusy \u662F\u4E00\u4E2A\u6807\u793A\uFF0C\u4E3A 0 \u8BF4\u660E\u5F53\u524D cells \u6570\u7EC4\u6CA1\u6709\u5728\u88AB\u521D\u59CB\u5316\u6216\u8005\u6269\u5BB9\uFF0C\u4E5F\u6CA1\u6709\u5728\u65B0\u5EFA Cell \u5143\u7D20\uFF0C\u4E3A 1 \u5219\u8BF4\u660E cells \u6570\u7EC4\u5728\u88AB\u521D\u59CB\u5316\u6216\u8005\u6269\u5BB9\uFF0C\u6216\u8005\u5F53\u524D\u5728\u521B\u5EFA\u65B0\u7684 Cell \u5143\u7D20\u3001\u901A\u8FC7 CAS \u64CD\u4F5C\u6765\u8FDB\u884C 0 \u6216 1 \u72B6\u6001\u7684\u5207\u6362\uFF0C\u8FD9\u91CC\u4F7F\u7528 casCellsBusy \u51FD\u6570\u3002\u5047\u8BBE\u5F53\u524D\u7EBF\u7A0B\u901A\u8FC7 CAS \u8BBE\u7F6E cellsBusy \u4E3A 1\uFF0C\u5219\u5F53\u524D\u7EBF\u7A0B\u5F00\u59CB\u521D\u59CB\u5316\u64CD\u4F5C\uFF0C\u90A3\u4E48\u8FD9\u65F6\u5019\u5176\u4ED6\u7EBF\u7A0B\u5C31\u4E0D\u80FD\u8FDB\u884C\u6269\u5BB9\u4E86\u3002\u5982\u4EE3\u7801 (14.1) \u521D\u59CB\u5316 cells \u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u4E3A 2\uFF0C\u7136\u540E\u4F7F\u7528 h &amp; 1 \u8BA1\u7B97\u5F53\u524D\u7EBF\u7A0B\u5E94\u8BE5\u8BBF\u95EE cells \u6570\u7EC4\u7684\u54EA\u4E2A\u4F4D\u7F6E\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u5F53\u524D\u7EBF\u7A0B\u7684 threadLocalRandomProbe \u53D8\u91CF\u503C &amp; (cells \u6570\u7EC4\u5143\u7D20\u4E2A\u6570 - 1)\uFF0C\u7136\u540E\u6807\u793A cells \u6570\u7EC4\u5DF2\u7ECF\u88AB\u521D\u59CB\u5316\uFF0C\u6700\u540E\u4EE3\u7801 (14.3) \u91CD\u7F6E\u4E86 cellsBusy \u6807\u8BB0\u3002\u663E\u7136\u8FD9\u91CC\u6CA1\u6709\u4F7F\u7528 CAS \u64CD\u4F5C\uFF0C\u5374\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u539F\u56E0\u662F cellsBusy \u662F volatile \u7C7B\u578B\u7684\uFF0C\u8FD9\u4FDD\u8BC1\u4E86\u53D8\u91CF\u7684\u5185\u5B58\u53EF\u89C1\u6027\uFF0C\u53E6\u5916\u6B64\u65F6\u5176\u4ED6\u5730\u65B9\u7684\u4EE3\u7801\u6CA1\u6709\u673A\u4F1A\u4FEE\u6539 cellsBusy \u7684\u503C\u3002\u5728\u8FD9\u91CC\u521D\u59CB\u5316\u7684 cells \u6570\u7EC4\u91CC\u9762\u7684\u4E24\u4E2A\u5143\u7D20\u7684\u503C\u76EE\u524D\u8FD8\u662F null\u3002\u8FD9\u91CC\u56DE\u7B54\u4E86\u95EE\u9898 3\uFF0C\u77E5\u9053\u4E86 cells \u6570\u7EC4\u5982\u4F55\u88AB\u521D\u59CB\u5316\u3002</p><p>cells \u6570\u7EC4\u7684\u6269\u5BB9\u662F\u5728\u4EE3\u7801 (12) \u4E2D\u8FDB\u884C\u7684\uFF0C\u5BF9 cells \u6269\u5BB9\u662F\u6709\u6761\u4EF6\u7684\uFF0C\u4E5F\u5C31\u662F\u4EE3\u7801 (10)\u3001(11) \u7684\u6761\u4EF6\u90FD\u4E0D\u6EE1\u8DB3\u7684\u65F6\u5019\u3002\u5177\u4F53\u5C31\u662F\u5F53\u524D cells \u7684\u5143\u7D20\u4E2A\u6570\u5C0F\u4E8E\u5F53\u524D\u673A\u5668 CPU \u4E2A\u6570\u5E76\u4E14\u5F53\u524D\u591A\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u4E86 cells \u4E2D\u540C\u4E00\u4E2A\u5143\u7D20\uFF0C\u4ECE\u800C\u5BFC\u81F4\u51B2\u7A81\u4F7F\u5176\u4E2D\u4E00\u4E2A\u7EBF\u7A0B CAS \u5931\u8D25\u65F6\u624D\u4F1A\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\u3002\u8FD9\u91CC\u4E3A\u4F55\u8981\u6D89\u53CA CPU \u4E2A\u6570\u5462\uFF1F\u5176\u5B9E\u5728\u57FA\u7840\u7BC7\u4E2D\u5DF2\u7ECF\u8BB2\u8FC7\uFF0C\u53EA\u6709\u5F53\u6BCF\u4E2A CPU \u90FD\u8FD0\u884C\u4E00\u4E2A\u7EBF\u7A0B\u65F6\u624D\u4F1A\u4F7F\u591A\u7EBF\u7A0B\u7684\u6548\u679C\u6700\u4F73\uFF0C\u4E5F\u5C31\u662F\u5F53 cells \u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u4E0E CPU \u4E2A\u6570\u4E00\u81F4\u65F6\uFF0C\u6BCF\u4E2A Cell \u90FD\u4F7F\u7528\u4E00\u4E2A CPU \u8FDB\u884C\u5904\u7406\uFF0C\u8FD9\u65F6\u6027\u80FD\u624D\u662F\u6700\u4F73\u7684\u3002\u4EE3\u7801 (12) \u4E2D\u7684\u6269\u5BB9\u64CD\u4F5C\u4E5F\u662F\u5148\u901A\u8FC7 CAS \u8BBE\u7F6E cellsBusy \u4E3A 1\uFF0C\u7136\u540E\u624D\u80FD\u8FDB\u884C\u6269\u5BB9\u3002\u5047\u8BBE CAS \u6210\u529F\u5219\u6267\u884C\u4EE3\u7801 (12.1) \u5C06\u5BB9\u91CF\u6269\u5145\u4E3A\u4E4B\u524D\u7684 2 \u500D\uFF0C\u5E76\u590D\u5236 Cell \u5143\u7D20\u5230\u6269\u5BB9\u540E\u6570\u7EC4\u3002\u53E6\u5916\uFF0C\u6269\u5BB9\u540E cells \u6570\u7EC4\u91CC\u9762\u9664\u4E86\u5305\u542B\u590D\u5236\u8FC7\u6765\u7684\u5143\u7D20\u5916\uFF0C\u8FD8\u5305\u542B\u5176\u4ED6\u65B0\u5143\u7D20\uFF0C\u8FD9\u4E9B\u5143\u7D20\u7684\u503C\u76EE\u524D\u8FD8\u662F null\u3002\u8FD9\u91CC\u56DE\u7B54\u4E86\u95EE\u9898 4\u3002</p><p>\u5728\u4EE3\u7801 (7)\u3001(8) \u4E2D\uFF0C\u5F53\u524D\u7EBF\u7A0B\u8C03\u7528 add \u65B9\u6CD5\u5E76\u6839\u636E\u5F53\u524D\u7EBF\u7A0B\u7684\u968F\u673A\u6570 threadLocalRandomProbe \u548C cells \u5143\u7D20\u4E2A\u6570\u8BA1\u7B97\u8981\u8BBF\u95EE\u7684 Cell \u5143\u7D20\u4E0B\u6807\uFF0C\u7136\u540E\u5982\u679C\u53D1\u73B0\u5BF9\u5E94\u4E0B\u6807\u5143\u7D20\u7684\u503C\u4E3A null\uFF0C\u5219\u65B0\u589E\u4E00\u4E2A Cell \u5143\u7D20\u5230 cells \u6570\u7EC4\uFF0C\u5E76\u4E14\u5728\u5C06\u5176\u6DFB\u52A0\u5230 cells \u6570\u7EC4\u4E4B\u524D\u8981\u7ADE\u4E89\u8BBE\u7F6E cellsBusy \u4E3A 1\u3002</p><p>\u4EE3\u7801 (13) \u5BF9 CAS \u5931\u8D25\u7684\u7EBF\u7A0B\u91CD\u65B0\u8BA1\u7B97\u5F53\u524D\u7EBF\u7A0B\u7684\u968F\u673A\u503C threadLocalRandomProbe\uFF0C\u4EE5\u51CF\u5C11\u4E0B\u6B21\u8BBF\u95EE cells \u5143\u7D20\u65F6\u7684\u51B2\u7A81\u673A\u4F1A\u3002\u8FD9\u91CC\u56DE\u7B54\u4E86\u95EE\u9898 5\u3002</p><h3 id="_4-2-3-\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_4-2-3-\u5C0F\u7ED3" aria-hidden="true">#</a> 4.2.3 \u5C0F\u7ED3</h3><p>\u672C\u8282\u4ECB\u7ECD\u4E86 JDK 8 \u4E2D\u65B0\u589E\u7684 LongAdder \u539F\u5B50\u6027\u64CD\u4F5C\u7C7B\uFF0C\u8BE5\u7C7B\u901A\u8FC7\u5185\u90E8 cells \u6570\u7EC4\u5206\u62C5\u4E86\u9AD8\u5E76\u53D1\u4E0B\u591A\u7EBF\u7A0B\u540C\u65F6\u5BF9\u4E00\u4E2A\u539F\u5B50\u53D8\u91CF\u8FDB\u884C\u66F4\u65B0\u65F6\u7684\u7ADE\u4E89\u91CF\uFF0C\u8BA9\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u5BF9 cells \u6570\u7EC4\u91CC\u9762\u7684\u5143\u7D20\u8FDB\u884C\u5E76\u884C\u7684\u66F4\u65B0\u64CD\u4F5C\u3002\u53E6\u5916\uFF0C\u6570\u7EC4\u5143\u7D20 Cell \u4F7F\u7528 @sun.misc.Contended \u6CE8\u89E3\u8FDB\u884C\u4FEE\u9970\uFF0C\u8FD9\u907F\u514D\u4E86 cells \u6570\u7EC4\u5185\u591A\u4E2A\u539F\u5B50\u53D8\u91CF\u88AB\u653E\u5165\u540C\u4E00\u4E2A\u7F13\u5B58\u884C\uFF0C\u4E5F\u5C31\u662F\u907F\u514D\u4E86\u4F2A\u5171\u4EAB\uFF0C\u8FD9\u5BF9\u6027\u80FD\u4E5F\u662F\u4E00\u4E2A\u63D0\u5347\u3002</p><h2 id="_4-3-longaccumulator-\u7C7B\u539F\u7406\u63A2\u7A76" tabindex="-1"><a class="header-anchor" href="#_4-3-longaccumulator-\u7C7B\u539F\u7406\u63A2\u7A76" aria-hidden="true">#</a> 4.3 LongAccumulator \u7C7B\u539F\u7406\u63A2\u7A76</h2><p>LongAdder \u7C7B\u662F LongAccumulator \u7684\u4E00\u4E2A\u7279\u4F8B\uFF0CLongAccumulator \u6BD4 LongAdder \u7684\u529F\u80FD\u66F4\u5F3A\u5927\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5176\u4E2D accumulatorFunction \u662F\u4E00\u4E2A\u53CC\u76EE\u8FD0\u7B97\u5668\u63A5\u53E3\uFF0C\u5176\u6839\u636E\u8F93\u5165\u7684\u4E24\u4E2A\u53C2\u6570\u8FD4\u56DE\u4E00\u4E2A\u8BA1\u7B97\u503C\uFF0Cidentity \u5219\u662F LongAccumulator \u7D2F\u52A0\u5668\u7684\u521D\u59CB\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LongAccumulator</span><span class="token punctuation">(</span><span class="token class-name">LongBinaryOperator</span> accumulatorFunction<span class="token punctuation">,</span> <span class="token keyword">long</span> identity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>function <span class="token operator">=</span> accumulatorFunction<span class="token punctuation">;</span>
    base <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>identity <span class="token operator">=</span> identity<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LongBinaryOperator</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E\u4E24\u4E2A\u53C2\u6570\u8BA1\u7B97\u5E76\u8FD4\u56DE\u4E00\u4E2A\u503C</span>
    <span class="token keyword">long</span> <span class="token function">applyAsLong</span><span class="token punctuation">(</span><span class="token keyword">long</span> left<span class="token punctuation">,</span> <span class="token keyword">long</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u63D0\u5230\uFF0CLongAdder \u5176\u5B9E\u662F LongAccumulator \u7684\u4E00\u4E2A\u7279\u4F8B\uFF0C\u8C03\u7528 LongAdder \u5C31\u76F8\u5F53\u4E8E\u4F7F\u7528\u4E0B\u9762\u7684\u65B9\u5F0F\u8C03\u7528 LongAccumulator\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LongAdder</span> adder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LongAdder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LongAccumulator</span> accumulator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LongAccumulator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LongBinaryOperator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">applyAsLong</span><span class="token punctuation">(</span><span class="token keyword">long</span> left<span class="token punctuation">,</span> <span class="token keyword">long</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LongAccumulator \u76F8\u6BD4\u4E8E LongAdder\uFF0C\u53EF\u4EE5\u4E3A\u7D2F\u52A0\u5668\u63D0\u4F9B\u975E 0 \u7684\u521D\u59CB\u503C\uFF0C\u540E\u8005\u53EA\u80FD\u63D0\u4F9B\u9ED8\u8BA4\u7684 0 \u503C\u3002\u53E6\u5916\uFF0C\u524D\u8005\u8FD8\u53EF\u4EE5\u6307\u5B9A\u7D2F\u52A0\u89C4\u5219\uFF0C\u6BD4\u5982\u4E0D\u8FDB\u884C\u7D2F\u52A0\u800C\u8FDB\u884C\u76F8\u4E58\uFF0C\u53EA\u9700\u8981\u5728\u6784\u9020 LongAccumulator \u65F6\u4F20\u5165\u81EA\u5B9A\u4E49\u7684\u53CC\u76EE\u8FD0\u7B97\u5668\u5373\u53EF\uFF0C\u540E\u8005\u5219\u5185\u7F6E\u7D2F\u52A0\u7684\u89C4\u5219\u3002</p><p>\u4ECE\u4E0B\u9762\u4EE3\u7801\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\uFF0CLongAccumulator \u76F8\u6BD4\u4E8E LongAdder \u7684\u4E0D\u540C\u5728\u4E8E\uFF0C\u5728\u8C03\u7528 casBase \u65F6\u540E\u8005\u4F20\u9012\u7684\u662F b + x\uFF0C\u524D\u8005\u5219\u4F7F\u7528\u4E86 r = function.applyAsLong(b = base, x) \u6765\u8BA1\u7B97\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// LongAdder \u7684 add</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span>
    <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">;</span>
    <span class="token keyword">int</span> m<span class="token punctuation">;</span>
    <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> b <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span>
                <span class="token operator">||</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> v <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// LongAccumulator \u7684 accumulate</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accumulate</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span>
    <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">,</span> r<span class="token punctuation">;</span>
    <span class="token keyword">int</span> m<span class="token punctuation">;</span>
    <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> function<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> b <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> 
                <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> function<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> v <span class="token operator">||</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> function<span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C\u524D\u8005\u5728\u8C03\u7528 longAccumulate \u65F6\u4F20\u9012\u7684\u662F function\uFF0C\u800C\u540E\u8005\u662F null\u3002\u4ECE\u4E0B\u9762\u7684\u4EE3\u7801\u53EF\u77E5\uFF0C\u5F53 fn \u4E3A null \u65F6\u5C31\u4F7F\u7528 v + x \u52A0\u6CD5\u8FD0\u7B97\uFF0C\u8FD9\u65F6\u5019\u5C31\u7B49\u4EF7\u4E8E LongAdder\uFF0C\u5F53 fn \u4E0D\u4E3A null \u65F6\u5219\u4F7F\u7528\u4F20\u9012\u7684 fn \u51FD\u6570\u8BA1\u7B97\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casBase</span><span class="token punctuation">(</span>v <span class="token operator">=</span> base<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// Fall back on using base</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>                          
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u7ED3\uFF1A\u672C\u8282\u7B80\u5355\u4ECB\u7ECD\u4E86 LongAccumulator \u7684\u539F\u7406\u3002LongAdder \u7C7B\u662F LongAccumulator \u7684\u4E00\u4E2A\u7279\u4F8B\uFF0C\u53EA\u662F\u540E\u8005\u63D0\u4F9B\u4E86\u66F4\u52A0\u5F3A\u5927\u7684\u529F\u80FD\uFF0C\u53EF\u4EE5\u8BA9\u7528\u6237\u81EA\u5B9A\u4E49\u7D2F\u52A0\u89C4\u5219\u3002</p><h2 id="_4-4-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_4-4-\u603B\u7ED3" aria-hidden="true">#</a> 4.4 \u603B\u7ED3</h2><p>\u672C\u7AE0\u4ECB\u7ECD\u4E86\u5E76\u53D1\u5305\u4E2D\u7684\u539F\u5B50\u6027\u64CD\u4F5C\u7C7B\uFF0C\u8FD9\u4E9B\u7C7B\u90FD\u662F\u4F7F\u7528\u975E\u963B\u585E\u7B97\u6CD5 CAS \u5B9E\u73B0\u7684\uFF0C\u8FD9\u76F8\u6BD4\u4F7F\u7528\u9501\u5B9E\u73B0\u539F\u5B50\u6027\u64CD\u4F5C\u5728\u6027\u80FD\u4E0A\u6709\u5F88\u5927\u63D0\u9AD8\u3002\u9996\u5148\u8BB2\u89E3\u4E86\u6700\u7B80\u5355\u7684 AtomicLong \u7C7B\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u7136\u540E\u8BB2\u89E3\u4E86 JDK 8 \u4E2D\u65B0\u589E\u7684 LongAdder \u7C7B\u548C LongAccumulator \u7C7B\u7684\u539F\u7406\u3002\u5B66\u4E60\u5B8C\u672C\u7AE0\u540E\uFF0C\u5E0C\u671B\u8BFB\u8005\u5728\u5B9E\u9645\u9879\u76EE\u73AF\u5883\u4E2D\u80FD\u56E0\u5730\u5236\u5B9C\u5730\u4F7F\u7528\u539F\u5B50\u6027\u64CD\u4F5C\u7C7B\u6765\u63D0\u5347\u7CFB\u7EDF\u6027\u80FD\u3002</p>`,68),u=[l];function i(k,r){return s(),a("div",null,u)}var m=n(c,[["render",i],["__file","\u7B2C4\u7AE0Java\u5E76\u53D1\u5305\u4E2D\u539F\u5B50\u64CD\u4F5C\u7C7B\u539F\u7406\u5256\u6790.html.vue"]]);export{m as default};
