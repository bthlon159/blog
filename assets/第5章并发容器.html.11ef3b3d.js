import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.0d56c066.js";var t="/assets/\u56FE5-1.89098d2e.jpeg",e="/assets/\u56FE5-2.7f243469.jpeg",o="/assets/\u56FE5-3.91ddce0c.jpeg",c="/assets/\u56FE5-4.9089083c.jpeg",l="/assets/\u56FE5-5.a56cdc1f.jpeg",i="/assets/\u56FE5-6.b5413daf.jpeg",u="/assets/\u56FE5-7.ff921975.jpeg",k="/assets/\u56FE5-8.53b589aa.jpeg",r="/assets/\u56FE5-9.a5acc8f1.jpeg",d="/assets/\u56FE5-10.be6faaca.jpeg",v="/assets/\u56FE5-11.dc2f91c7.jpeg",m="/assets/\u56FE5-12.5d108f3e.jpeg",b="/assets/\u56FE5-13.527d4f44.jpeg",y="/assets/\u56FE5-14.b52f891d.jpeg",w="/assets/\u56FE5-15.37d2debb.jpeg",g="/assets/\u56FE5-16.88c4ac73.jpeg",f="/assets/\u56FE5-17.71249b75.jpeg",h="/assets/\u56FE5-18.57c15766.jpeg",x="/assets/\u56FE5-19.1c4e9dee.jpeg";const E={},j=p('<h1 id="\u7B2C-5-\u7AE0-\u5E76\u53D1\u5BB9\u5668" tabindex="-1"><a class="header-anchor" href="#\u7B2C-5-\u7AE0-\u5E76\u53D1\u5BB9\u5668" aria-hidden="true">#</a> \u7B2C 5 \u7AE0 \u5E76\u53D1\u5BB9\u5668</h1><p>\u5728 Lock \u548C Phaser \u7684\u5B9E\u73B0\u4E2D\uFF0C\u5DF2\u7ECF\u4ECB\u7ECD\u4E86\u57FA\u4E8E CAS \u5B9E\u73B0\u7684\u65E0\u9501\u961F\u5217\u548C\u65E0\u9501\u6808\u3002\u672C\u7AE0\u5C06\u5168\u9762\u4ECB\u7ECD Concurrent \u5305\u63D0\u4F9B\u7684\u5404\u79CD\u5E76\u53D1\u5BB9\u5668\u3002</p><h2 id="_5-1-blockingqueue" tabindex="-1"><a class="header-anchor" href="#_5-1-blockingqueue" aria-hidden="true">#</a> 5.1 BlockingQueue</h2><p>\u5728\u6240\u6709\u7684\u5E76\u53D1\u5BB9\u5668\u4E2D\uFF0CBlockingQueue \u662F\u6700\u5E38\u89C1\u7684\u4E00\u79CD\u3002BlockingQueue \u662F\u4E00\u4E2A\u5E26\u963B\u585E\u529F\u80FD\u7684\u961F\u5217\uFF0C\u5F53\u5165\u961F\u5217\u65F6\uFF0C\u82E5\u961F\u5217\u5DF2\u6EE1\uFF0C\u5219\u963B\u585E\u8C03\u7528\u8005\uFF1B\u5F53\u51FA\u961F\u5217\u65F6\uFF0C\u82E5\u961F\u5217\u4E3A\u7A7A\uFF0C\u5219\u963B\u585E\u8C03\u7528\u8005\u3002</p><p>\u5728 Concurrent \u5305\u4E2D\uFF0CBlockingQueue \u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u6709\u8BB8\u591A\u4E2A\u4E0D\u540C\u7684\u5B9E\u73B0\u7C7B\uFF0C\u5982\u56FE5-1 \u6240\u793A\u3002</p><img src="'+t+`" alt="\u56FE5-1" style="zoom:50%;"><p>\u56FE5-1 BlockingQueue \u7684\u5404\u79CD\u5B9E\u73B0\u7C7B</p><p>\u8BE5\u63A5\u53E3\u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">offer</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8BE5\u63A5\u53E3\u548C JDK \u96C6\u5408\u5305\u4E2D\u7684 Queue \u63A5\u53E3\u662F\u517C\u5BB9\u7684\uFF0C\u540C\u65F6\u5728\u5176\u57FA\u7840\u4E0A\u589E\u52A0\u4E86\u963B\u585E\u529F\u80FD\u3002\u5728\u8FD9\u91CC\uFF0C\u5165\u961F\u63D0\u4F9B\u4E86 add(..)\u3001offer(..)\u3001put (..) 3 \u4E2A\u51FD\u6570\uFF0C\u6709\u4EC0\u4E48\u533A\u522B\u5462\uFF1F\u4ECE\u4E0A\u9762\u7684\u5B9A\u4E49\u53EF\u4EE5\u770B\u5230\uFF0Cadd(..) \u548C offer(..) \u7684\u8FD4\u56DE\u503C\u662F\u5E03\u5C14\u7C7B\u578B\uFF0C\u800C put \u65E0\u8FD4\u56DE\u503C\uFF0C\u8FD8\u4F1A\u629B\u51FA\u4E2D\u65AD\u5F02\u5E38\uFF0C\u6240\u4EE5 add(..) \u548C offer(..) \u662F\u65E0\u963B\u585E\u7684\uFF0C\u4E5F\u662F Queue \u672C\u8EAB\u5B9A\u4E49\u7684\u63A5\u53E3\uFF0C\u800C put(..) \u662F\u963B\u585E\u5F0F\u7684\u3002add(..) \u548C offer(..) \u7684\u533A\u522B\u4E0D\u5927\uFF0C\u5F53\u961F\u5217\u4E3A\u6EE1\u7684\u65F6\u5019\uFF0C\u524D\u8005\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u540E\u8005\u5219\u76F4\u63A5\u8FD4\u56DE false\u3002</p><p>\u51FA\u961F\u5217\u4E0E\u4E4B\u7C7B\u4F3C\uFF0C\u63D0\u4F9B\u4E86 remove()\u3001peek()\u3001take() \u7B49\u51FD\u6570\uFF0Cremove() \u548C peek() \u662F\u975E\u963B\u585E\u5F0F\u7684\uFF0Ctake() \u662F\u963B\u585E\u5F0F\u7684\u3002</p><p>\u4E0B\u9762\u5206\u522B\u4ECB\u7ECD BlockingQueue \u7684\u5404\u79CD\u4E0D\u540C\u5B9E\u73B0\u3002</p><h3 id="_5-1-1-arrayblockingqueue" tabindex="-1"><a class="header-anchor" href="#_5-1-1-arrayblockingqueue" aria-hidden="true">#</a> 5.1.1 ArrayBlockingQueue</h3><p>ArrayBlockingQueue \u662F\u4E00\u4E2A\u7528\u6570\u7EC4\u5B9E\u73B0\u7684\u73AF\u5F62\u961F\u5217\uFF0C\u5728\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u4F1A\u8981\u6C42\u4F20\u5165\u6570\u7EC4\u7684\u5BB9\u91CF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">,</span> <span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u6838\u5FC3\u6570\u636E\u7ED3\u6784\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u6570\u7EC4\u53CA\u961F\u5934\u3001\u961F\u5C3E\u6307\u9488</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> items<span class="token punctuation">;</span>
    <span class="token keyword">int</span> takeIndex<span class="token punctuation">;</span>
    <span class="token keyword">int</span> putIndex<span class="token punctuation">;</span>
    <span class="token keyword">int</span> count<span class="token punctuation">;</span>
    <span class="token comment">// \u5176\u6838\u5FC3\u5C31\u662F 1 \u628A\u9501 + 2 \u4E2A\u6761\u4EF6</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notEmpty<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notFull<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176 put / take \u51FD\u6570\u4E5F\u5F88\u7B80\u5355\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token function">checkNotNull</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    <span class="token comment">// \u4F7F\u7528\u7684\u53EF\u4E2D\u65AD\u7684 Lock</span>
    lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> items<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
            <span class="token comment">// put \u7684\u65F6\u5019\uFF0C\u82E5\u961F\u5217\u6EE1\u4E86\uFF0C\u5219\u963B\u585E</span>
            notFull<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">E</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    items<span class="token punctuation">[</span>putIndex<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
    putIndex <span class="token operator">=</span> <span class="token function">inc</span><span class="token punctuation">(</span>putIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">++</span>count<span class="token punctuation">;</span>
    <span class="token comment">// \u5F53 put \u8FDB\u53BB\u4E4B\u540E\uFF0C\u901A\u77E5\u975E\u7A7A\u6761\u4EF6</span>
    notEmpty<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5728 take \u7684\u65F6\u5019\uFF0C\u82E5\u961F\u5217\u4E3A\u7A7A\uFF0C\u5219\u963B\u585E</span>
            notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> items <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">;</span>
    <span class="token class-name">E</span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token function">cast</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>takeIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    items<span class="token punctuation">[</span>takeIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    takeIndex <span class="token operator">=</span> <span class="token function">inc</span><span class="token punctuation">(</span>takeIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">--</span>count<span class="token punctuation">;</span>
    <span class="token comment">// take \u7ED3\u675F\uFF0C\u901A\u77E5\u975E\u6EE1\u6761\u4EF6</span>
    notFull<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-1-2-linkedblockingqueue" tabindex="-1"><a class="header-anchor" href="#_5-1-2-linkedblockingqueue" aria-hidden="true">#</a> 5.1.2 LinkedBlockingQueue</h3><p>LinkedBlockingQueue \u662F\u4E00\u79CD\u57FA\u4E8E\u5355\u5411\u94FE\u8868\u7684\u963B\u585E\u961F\u5217\u3002\u56E0\u4E3A\u961F\u5934\u548C\u961F\u5C3E\u662F 2 \u4E2A\u6307\u9488\u5206\u5F00\u64CD\u4F5C\u7684\uFF0C\u6240\u4EE5\u7528\u4E86 2 \u628A\u9501 + 2 \u4E2A\u6761\u4EF6\uFF0C\u540C\u65F6\u6709 1 \u4E2A AtomicInteger \u7684\u539F\u5B50\u53D8\u91CF\u8BB0\u5F55 count \u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> capacity<span class="token punctuation">;</span>
    <span class="token comment">// \u539F\u5B50\u53D8\u91CF</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5355\u5411\u94FE\u8868\u7684\u5934\u90E8\u548C\u5C3E\u90E8</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> head<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>
    <span class="token comment">// 2 \u628A\u9501 + 2 \u4E2A\u6761\u4EF6</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> takeLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notEmpty <span class="token operator">=</span> takeLock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> putLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notFull <span class="token operator">=</span> putLock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5176\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u961F\u5217\u7684\u603B\u5BB9\u91CF\u3002\u5982\u679C\u4E0D\u6307\u5B9A\uFF0C\u9ED8\u8BA4\u4E3A Integer.MAX_VALUE\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>capacity <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> 
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>capacity <span class="token operator">=</span> capacity<span class="token punctuation">;</span>
    last <span class="token operator">=</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u770B\u4E00\u4E0B\u5176 put / take \u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> putLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>putLock<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>
    putLock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>count<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            notFull<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">enqueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> count<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> capacity<span class="token punctuation">)</span>
            <span class="token comment">// \u901A\u77E5\u5176\u4ED6 put \u7EBF\u7A0B</span>
            notFull<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        putLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">// \u8FD9\u4E2A\u91CC\u9762\u8981\u52A0 takeLock</span>
        <span class="token function">signalNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">E</span> x<span class="token punctuation">;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> takeLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>takeLock<span class="token punctuation">;</span>
    takeLock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>count<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        x <span class="token operator">=</span> <span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> count<span class="token punctuation">.</span><span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token comment">// \u901A\u77E5\u5176\u4ED6 take \u7EBF\u7A0B</span>
            notEmpty<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        takeLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> capacity<span class="token punctuation">)</span>
        <span class="token comment">// \u8FD9\u4E2A\u91CC\u9762\u8981\u52A0 putLock</span>
        <span class="token function">signalNotFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LinkedBlockingQueue \u548C ArrayBlockingQueue \u7684\u5B9E\u73B0\u6709\u4E00\u4E9B\u5DEE\u5F02\uFF0C\u6709\u51E0\u70B9\u8981\u7279\u522B\u8BF4\u660E\uFF1A</p><ol><li><p>\u4E3A\u4E86\u63D0\u9AD8\u5E76\u53D1\u5EA6\uFF0C\u7528 2 \u628A\u9501\uFF0C\u5206\u522B\u63A7\u5236\u961F\u5934\u3001\u961F\u5C3E\u7684\u64CD\u4F5C\u3002\u610F\u5473\u7740\u5728 put(..) \u548C put(..) \u4E4B\u95F4\u3001take() \u4E0E take() \u4E4B\u95F4\u662F\u4E92\u65A5\u7684\uFF0Cput(..) \u548C take() \u4E4B\u95F4\u5E76\u4E0D\u4E92\u65A5\u3002\u4F46\u5BF9\u4E8E count \u53D8\u91CF\uFF0C\u53CC\u65B9\u90FD\u9700\u8981\u64CD\u4F5C\uFF0C\u6240\u4EE5\u5FC5\u987B\u662F\u539F\u5B50\u7C7B\u578B\u3002</p></li><li><p>\u56E0\u4E3A\u5404\u81EA\u62FF\u4E86\u4E00\u628A\u9501\uFF0C\u6240\u4EE5\u5F53\u9700\u8981\u8C03\u7528\u5BF9\u65B9\u7684 condition \u7684 signal \u65F6\uFF0C\u8FD8\u5FC5\u987B\u518D\u52A0\u4E0A\u5BF9\u65B9\u7684\u9501\uFF0C\u5C31\u662F signalNotEmpty() \u548C signalNotFull() \u51FD\u6570\u3002\u793A\u4F8B\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">signalNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> takeLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>takeLock<span class="token punctuation">;</span>
    <span class="token comment">// \u5FC5\u987B\u5148\u62FF\u5230 takeLock\uFF0C\u624D\u80FD\u8C03\u7528 notEmpty.signal</span>
    takeLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        notEmpty<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        takeLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">signalNotFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> putLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>putLock<span class="token punctuation">;</span>
    <span class="token comment">// \u5FC5\u987B\u5148\u62FF\u5230 putLock\uFF0C\u624D\u80FD\u8C03\u7528 notFull.signal</span>
    putLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        notFull<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        putLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4E0D\u4EC5 put \u4F1A\u901A\u77E5 take\uFF0Ctake \u4E5F\u4F1A\u901A\u77E5 put\u3002\u5F53 put \u53D1\u73B0\u975E\u6EE1\u7684\u65F6\u5019\uFF0C\u4E5F\u4F1A\u901A\u77E5\u5176\u4ED6 put \u7EBF\u7A0B\uFF1B\u5F53 take \u53D1\u73B0\u975E\u7A7A\u7684\u65F6\u5019\uFF0C\u4E5F\u4F1A\u901A\u77E5\u5176\u4ED6 take \u7EBF\u7A0B\u3002</p></li></ol><h3 id="_5-1-3-priorityblockingqueue" tabindex="-1"><a class="header-anchor" href="#_5-1-3-priorityblockingqueue" aria-hidden="true">#</a> 5.1.3 PriorityBlockingQueue</h3><p>\u961F\u5217\u901A\u5E38\u662F\u5148\u8FDB\u5148\u51FA\u7684\uFF0C\u800C PriorityQueue \u662F\u6309\u7167\u5143\u7D20\u7684\u4F18\u5148\u7EA7\u4ECE\u5C0F\u5230\u5927\u51FA\u961F\u5217\u7684\u3002\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0CPriorityQueue \u4E2D\u7684 2 \u4E2A\u5143\u7D20\u4E4B\u95F4\u9700\u8981\u53EF\u4EE5\u6BD4\u8F83\u5927\u5C0F\uFF0C\u5E76\u5B9E\u73B0 Comparable \u63A5\u53E3\u3002</p><p>\u5176\u6838\u5FC3\u6570\u636E\u7ED3\u6784\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PriorityBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>    
    <span class="token comment">// ...</span>
    <span class="token comment">// \u7528\u6570\u7EC4\u5B9E\u73B0\u7684\u4E8C\u53C9\u5C0F\u6839\u5806</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> queue<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> comparator<span class="token punctuation">;</span>
    <span class="token comment">// 1 \u628A\u9501 + 1 \u4E2A\u6761\u4EF6\uFF0C\u6CA1\u6709\u975E\u6EE1\u7684\u6761\u4EF6</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notEmpty<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u6784\u9020\u51FD\u6570\u5982\u4E0B\u6240\u793A\uFF0C\u5982\u679C\u4E0D\u6307\u5B9A\u521D\u59CB\u5927\u5C0F\uFF0C\u5185\u90E8\u4F1A\u8BBE\u5B9A\u4E00\u4E2A\u9ED8\u8BA4\u503C 11\uFF0C\u5F53\u5143\u7D20\u4E2A\u6570\u8D85\u8FC7\u8FD9\u4E2A\u5927\u5C0F\u4E4B\u540E\uFF0C\u4F1A\u81EA\u52A8\u6269\u5BB9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">PriorityBlockingQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>DEFAULT_INITIAL_CAPACITY<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">PriorityBlockingQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> comparator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>notEmpty <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>comparator <span class="token operator">=</span> comparator<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>initialCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u5BF9\u5E94\u7684 put / take \u51FD\u6570\u7684\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">offer</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">offer</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> cap<span class="token punctuation">;</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">=</span> size<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>cap <span class="token operator">=</span> <span class="token punctuation">(</span>array <span class="token operator">=</span> queue<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// size \u8D85\u51FA\u4E86\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u6269\u5BB9</span>
        <span class="token function">tryGrow</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> cap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> cmp <span class="token operator">=</span> comparator<span class="token punctuation">;</span>
        <span class="token comment">// \u6CA1\u6709\u5B9A\u4E49\u6BD4\u8F83\u64CD\u4F5C\u7B26\uFF0C\u4F7F\u7528\u5143\u7D20\u81EA\u5E26\u7684\u6BD4\u8F83\u529F\u80FD</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5143\u7D20\u5165\u5806\uFF0C\u4E5F\u5C31\u662F\u6267\u884C siftUp \u64CD\u4F5C</span>
            <span class="token function">siftUpComparable</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token function">siftUpUsingComparator</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> array<span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        size <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        notEmpty<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> result<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u51FA\u961F\u5217</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>result <span class="token operator">=</span> <span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> queue<span class="token punctuation">;</span>
        <span class="token comment">// \u56E0\u4E3A\u662F\u6700\u5C0F\u4E8C\u53C9\u5806\uFF0C\u5806\u9876\u5373\u662F\u8981\u51FA\u961F\u7684\u5143\u7D20</span>
        <span class="token class-name">E</span> result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">E</span> x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        array<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> cmp <span class="token operator">=</span> comparator<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token comment">// \u8C03\u6574\u5806\uFF0C\u4E5F\u5C31\u662F\u6267\u884C siftDown \u64CD\u4F5C</span>
            <span class="token function">siftDownComparable</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> array<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token function">siftDownUsingComparator</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> array<span class="token punctuation">,</span> n<span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        size <span class="token operator">=</span> n<span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u963B\u585E\u7684\u5B9E\u73B0\u65B9\u9762\uFF0C\u548C ArrayBlockingQueue \u7684\u673A\u5236\u76F8\u4F3C\uFF0C\u4E3B\u8981\u533A\u522B\u662F\u7528\u6570\u7EC4\u5B9E\u73B0\u4E86\u4E00\u4E2A\u4E8C\u53C9\u5806\uFF0C\u4ECE\u800C\u5B9E\u73B0\u6309\u4F18\u5148\u7EA7\u4ECE\u5C0F\u5230\u5927\u51FA\u961F\u5217\u3002\u53E6\u4E00\u4E2A\u533A\u522B\u662F\u6CA1\u6709 notFull \u6761\u4EF6\uFF0C\u5F53\u5143\u7D20\u4E2A\u6570\u8D85\u51FA\u6570\u7EC4\u957F\u5EA6\u65F6\uFF0C\u6267\u884C\u6269\u5BB9\u64CD\u4F5C\u3002</p><h3 id="_5-1-4-delayqueue" tabindex="-1"><a class="header-anchor" href="#_5-1-4-delayqueue" aria-hidden="true">#</a> 5.1.4 DelayQueue</h3><p>DelayQueue \u5373\u5EF6\u8FDF\u961F\u5217\uFF0C\u4E5F\u5C31\u662F\u4E00\u4E2A\u6309\u5EF6\u8FDF\u65F6\u95F4\u4ECE\u5C0F\u5230\u5927\u51FA\u961F\u7684 PriorityQueue\u3002\u6240\u8C13\u5EF6\u8FDF\u65F6\u95F4\uFF0C\u5C31\u662F \u201C\u672A\u6765\u5C06\u8981\u6267\u884C\u7684\u65F6\u95F4\u201D - \u201C\u5F53\u524D\u65F6\u95F4\u201D\u3002\u4E3A\u6B64\uFF0C\u653E\u5165 DelayQueue \u4E2D\u7684\u5143\u7D20\uFF0C\u5FC5\u987B\u5B9E\u73B0 Delayed \u63A5\u53E3\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Delayed</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Delayed</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> <span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u8BE5\u63A5\u53E3\uFF0C\u6709\u4E24\u70B9\u8BF4\u660E\uFF1A</p><ol><li><p>\u5982\u679C getDelay \u7684\u8FD4\u56DE\u503C\u5C0F\u4E8E\u6216\u7B49\u4E8E 0\uFF0C\u5219\u8BF4\u660E\u8BE5\u5143\u7D20\u5230\u671F\uFF0C\u9700\u8981\u4ECE\u961F\u5217\u4E2D\u62FF\u51FA\u6765\u6267\u884C\u3002</p></li><li><p>\u8BE5\u63A5\u53E3\u9996\u5148\u7EE7\u627F\u4E86 Comparable \u63A5\u53E3\uFF0C\u6240\u4EE5\u8981\u5B9E\u73B0\u8BE5\u63A5\u53E3\uFF0C\u5FC5\u987B\u5B9E\u73B0 Comparable \u63A5\u53E3\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u5C31\u662F\u57FA\u4E8E getDelay() \u7684\u8FD4\u56DE\u503C\u6BD4\u8F83\u4E24\u4E2A\u5143\u7D20\u7684\u5927\u5C0F\u3002</p></li></ol><p>\u4E0B\u9762\u770B\u4E00\u4E0B DelayQueue \u7684\u6838\u5FC3\u6570\u636E\u7ED3\u6784\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span> <span class="token keyword">extends</span> <span class="token class-name">Delayed</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u4F18\u5148\u7EA7\u961F\u5217</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1 \u628A\u9501 + 1 \u4E2A\u6761\u4EF6</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> available <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u4ECB\u7ECD put / take \u7684\u5B9E\u73B0\uFF0C\u5148\u4ECE take \u8BF4\u8D77\uFF0C\u56E0\u4E3A\u8FD9\u6837\u66F4\u80FD\u770B\u51FA DelayQueue \u7684\u7279\u6027\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53D6\u51FA\u4E8C\u53C9\u5806\u7684\u5806\u9876\u5143\u7D20\uFF0C\u4E5F\u5C31\u662F\u5EF6\u8FDF\u65F6\u95F4\u6700\u5C0F\u7684</span>
            <span class="token class-name">E</span> first <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token comment">// \u961F\u5217\u4E3A\u7A7A\uFF0Ctake \u7EBF\u7A0B\u963B\u585E</span>
                available<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> delay <span class="token operator">=</span> first<span class="token punctuation">.</span><span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5806\u9876\u5143\u7D20\u7684\u5EF6\u8FDF\u65F6\u95F4\u5C0F\u4E8E\u6216\u7B49\u4E8E 0\uFF0C\u51FA\u961F\u5217\uFF0C\u8FD4\u56DE</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> q<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u6709\u5176\u4ED6\u7EBF\u7A0B\u4E5F\u5728\u7B49\u5F85\u8FD9\u4E2A\u5143\u7D20\uFF0C\u5219\u65E0\u9650\u671F\u963B\u585E</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>leader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    available<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span> thisThread <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    leader <span class="token operator">=</span> thisThread<span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u5426\u5219\u963B\u585E\u6709\u9650\u7684\u65F6\u95F4</span>
                        available<span class="token punctuation">.</span><span class="token function">awaitNanos</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>leader <span class="token operator">==</span> thisThread<span class="token punctuation">)</span>
                            leader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>leader <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> q<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token comment">// \u81EA\u5DF1\u662F leader\uFF0C\u5DF2\u7ECF\u83B7\u53D6\u4E86\u5806\u9876\u5143\u7D20\uFF0C\u5524\u9192\u5176\u4ED6\u7EBF\u7A0B</span>
            available<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E take() \u51FD\u6570\uFF0C\u6709\u4E24\u70B9\u9700\u8981\u8BF4\u660E\uFF1A</p><ol><li><p>\u4E0D\u540C\u4E8E\u4E00\u822C\u7684\u963B\u585E\u961F\u5217\uFF0C\u53EA\u5728\u961F\u5217\u4E3A\u7A7A\u7684\u65F6\u5019\uFF0C\u624D\u963B\u585E\u3002\u5982\u679C\u5806\u9876\u5143\u7D20\u7684\u5EF6\u8FDF\u65F6\u95F4\u6CA1\u5230\uFF0C\u4E5F\u4F1A\u963B\u585E\u3002</p></li><li><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u4F7F\u7528\u4E86\u4E00\u4E2A\u4F18\u5316\u6280\u672F\uFF0C\u7528\u4E00\u4E2A Thread leader \u53D8\u91CF\u8BB0\u5F55\u4E86\u7B49\u5F85\u5806\u9876\u5143\u7D20\u7684\u7B2C 1 \u4E2A\u7EBF\u7A0B\u3002\u4E3A\u4EC0\u4E48\u8FD9\u6837\u505A\u5462\uFF1F\u901A\u8FC7 getDelay(..) \u53EF\u4EE5\u77E5\u9053\u5806\u9876\u5143\u7D20\u4F55\u65F6\u5230\u671F\uFF0C\u4E0D\u5FC5\u65E0\u9650\u671F\u7B49\u5F85\uFF0C\u53EF\u4EE5\u4F7F\u7528 condition.awaitNanos() \u7B49\u5F85\u4E00\u4E2A\u6709\u9650\u7684\u65F6\u95F4\uFF1B\u53EA\u6709\u5F53\u53D1\u73B0\u8FD8\u6709\u5176\u4ED6\u7EBF\u7A0B\u4E5F\u5728\u7B49\u5F85\u5806\u9876\u5143\u7D20\uFF08leader != NULL\uFF09\u65F6\uFF0C\u624D\u9700\u8981\u65E0\u9650\u671F\u7B49\u5F85\u3002</p></li></ol><p>\u4E0B\u9762\u770B\u4E00\u4E0B put \u7684\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">offer</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">offer</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5143\u7D20\u653E\u5165\u4E8C\u53C9\u5806</span>
        q<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u653E\u8FDB\u53BB\u7684\u5143\u7D20\u521A\u597D\u5728\u5806\u9876\uFF0C\u8BF4\u660E\u653E\u5165\u5806\u5143\u7D20\u5EF6\u8FDF\u65F6\u95F4\u662F\u6700\u5C0F\u7684\uFF0C</span>
        <span class="token comment">// \u90A3\u4E48\u9700\u8981\u901A\u77E5\u7B49\u5F85\u7684\u7EBF\u7A0B\uFF0C\u5426\u5219\u653E\u5165\u7684\u5143\u7D20\u4E0D\u5728\u5806\u9876\uFF0C\u6CA1\u6709\u5FC5\u8981\u901A\u77E5\u7B49\u5F85\u7684\u7EBF\u7A0B</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            leader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            available<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u4E0A\u9762\u7684\u5B9E\u73B0\uFF0C\u6709\u4E00\u70B9\u8981\u8BF4\u660E\uFF1A\u4E0D\u662F\u6BCF\u653E\u5165\u4E00\u4E2A\u5143\u7D20\uFF0C\u90FD\u9700\u8981\u901A\u77E5\u7B49\u5F85\u7684\u7EBF\u7A0B\u3002\u653E\u5165\u7684\u5143\u7D20\uFF0C\u5982\u679C\u5176\u5EF6\u8FDF\u65F6\u95F4\u5927\u4E8E\u5F53\u524D\u5806\u9876\u7684\u5143\u7D20\u5EF6\u8FDF\u65F6\u95F4\uFF0C\u5C31\u6CA1\u5FC5\u8981\u901A\u77E5\u7B49\u5F85\u7684\u7EBF\u7A0B\uFF1B\u53EA\u6709\u5F53\u5EF6\u8FDF\u65F6\u95F4\u662F\u6700\u5C0F\u7684\uFF0C\u5728\u5806\u9876\u65F6\uFF0C\u624D\u6709\u5FC5\u8981\u901A\u77E5\u7B49\u5F85\u7684\u7EBF\u7A0B\uFF0C\u4E5F\u5C31\u662F\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684 if (q.peek() == e) \u6BB5\u843D\u3002</p><h3 id="_5-1-5-synchronousqueue" tabindex="-1"><a class="header-anchor" href="#_5-1-5-synchronousqueue" aria-hidden="true">#</a> 5.1.5 SynchronousQueue</h3><p>SynchronousQueue \u662F\u4E00\u79CD\u7279\u6B8A\u7684 BlockingQueue\uFF0C\u5B83\u672C\u8EAB\u6CA1\u6709\u5BB9\u91CF\u3002\u5148\u8C03 put(..)\uFF0C\u7EBF\u7A0B\u4F1A\u963B\u585E\uFF1B\u76F4\u5230\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528\u4E86 take()\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u624D\u540C\u65F6\u89E3\u9501\uFF0C\u53CD\u4E4B\u4EA6\u7136\u3002\u5BF9\u4E8E\u591A\u4E2A\u7EBF\u7A0B\u800C\u8A00\uFF0C\u4F8B\u5982 3 \u4E2A\u7EBF\u7A0B\uFF0C\u8C03\u7528 3 \u6B21 put(..)\uFF0C3 \u4E2A\u7EBF\u7A0B\u90FD\u4F1A\u963B\u585E\uFF1B\u76F4\u5230\u53E6\u5916\u7684\u7EBF\u7A0B\u8C03\u7528 3 \u6B21 take()\uFF0C6 \u4E2A\u7EBF\u7A0B\u624D\u540C\u65F6\u89E3\u9501\uFF0C\u53CD\u4E4B\u4EA6\u7136\u3002</p><p>\u5728\u8BB2\u89E3\u7EBF\u7A0B\u6C60\u4E2D\u7684 CachedThreadPool \u5B9E\u73B0\u7684\u65F6\u5019\u4F1A\u4F7F\u7528\u5230 SynchronousQueue \u7684\u8FD9\u79CD\u7279\u6027\u3002</p><p>\u63A5\u4E0B\u6765\u5C31\u770B\u4E00\u4E0B\uFF0CSynchronousQueue \u662F\u5982\u4F55\u5B9E\u73B0\u7684\u3002\u5148\u4ECE\u6784\u9020\u51FD\u6570\u770B\u8D77\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SynchronousQueue</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    transferer <span class="token operator">=</span> fair <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">TransferQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">TransferStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u548C\u9501\u4E00\u6837\uFF0C\u4E5F\u6709\u516C\u5E73\u548C\u975E\u516C\u5E73\u6A21\u5F0F\u3002\u5982\u679C\u662F\u516C\u5E73\u6A21\u5F0F\uFF0C\u5219\u7528 TransferQueue \u5B9E\u73B0\uFF1B\u5982\u679C\u662F\u975E\u516C\u5E73\u6A21\u5F0F\uFF0C\u5219\u7528 TransferStack \u5B9E\u73B0\u3002\u8FD9\u4E24\u4E2A\u7C7B\u5206\u522B\u662F\u4EC0\u4E48\u5462\uFF1F\u5148\u770B\u4E00\u4E0B put / take \u7684\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">E</span> o<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>transferer<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> e <span class="token operator">=</span> transferer<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span>e<span class="token punctuation">;</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0Cput / take \u90FD\u8C03\u7528\u4E86 transfer(..) \u63A5\u53E3\u3002\u800C TransferQueue \u548C TransferStack \u5206\u522B\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3\u3002\u8BE5\u63A5\u53E3\u5728 SynchronousQueue \u5185\u90E8\uFF0C\u5982\u4E0B\u6240\u793A\u3002\u5982\u679C\u662F put(..)\uFF0C\u5219\u7B2C 1 \u4E2A\u53C2\u6570\u5C31\u662F\u5BF9\u5E94\u7684\u5143\u7D20\uFF1B\u5982\u679C\u662F take()\uFF0C\u5219\u7B2C 1 \u4E2A\u53C2\u6570\u4E3A null\u3002\u540E 2 \u4E2A\u53C2\u6570\u5206\u522B\u4E3A\u662F\u5426\u8BBE\u7F6E\u8D85\u65F6\u548C\u5BF9\u5E94\u7684\u8D85\u65F6\u65F6\u95F4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">abstract</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Transferer</span> <span class="token punctuation">{</span>
    <span class="token keyword">abstract</span> <span class="token class-name">Object</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Object</span> e<span class="token punctuation">,</span> <span class="token keyword">boolean</span> timed<span class="token punctuation">,</span> <span class="token keyword">long</span> nanos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B\u4EC0\u4E48\u662F\u516C\u5E73\u6A21\u5F0F\u548C\u975E\u516C\u5E73\u6A21\u5F0F\uFF0C\u5982\u56FE5-2 \u6240\u793A\u3002\u5047\u8BBE 3 \u4E2A\u7EBF\u7A0B\u5206\u522B\u8C03\u7528\u4E86 put(..)\uFF0C3 \u4E2A\u7EBF\u7A0B\u4F1A\u8FDB\u5165\u963B\u585E\u72B6\u6001\uFF0C\u76F4\u5230\u5176\u4ED6\u7EBF\u7A0B\u8C03\u7528 3 \u6B21 take()\uFF0C\u548C 3 \u4E2A put(..) \u4E00\u4E00\u914D\u5BF9\u3002</p><img src="`+e+`" alt="\u56FE5-2" style="zoom:50%;"><p>\u56FE5-2 \u516C\u5E73\u6A21\u5F0F\u4E0E\u975E\u516C\u5E73\u6A21\u5F0F\u5BF9\u6BD4</p><p>\u5982\u679C\u662F\u516C\u5E73\u6A21\u5F0F\uFF08\u961F\u5217\u6A21\u5F0F\uFF09\uFF0C\u5219\u7B2C 1 \u4E2A\u8C03\u7528 put(..) \u7684\u7EBF\u7A0B 1 \u4F1A\u5728\u961F\u5217\u5934\u90E8\uFF0C\u7B2C 1 \u4E2A\u5230\u6765\u7684 take() \u7EBF\u7A0B\u548C\u5B83\u8FDB\u884C\u914D\u5BF9\uFF0C\u9075\u5FAA\u5148\u5230\u5148\u914D\u5BF9\u7684\u539F\u5219\uFF0C\u6240\u4EE5\u662F\u516C\u5E73\u7684\uFF1B\u5982\u679C\u662F\u975E\u516C\u5E73\u6A21\u5F0F\uFF08\u6808\u6A21\u5F0F\uFF09\uFF0C\u5219\u7B2C 3 \u4E2A\u8C03\u7528 put(..) \u7684\u7EBF\u7A0B 3 \u4F1A\u5728\u6808\u9876\uFF0C\u7B2C 1 \u4E2A\u5230\u6765\u7684 take() \u7EBF\u7A0B\u548C\u5B83\u8FDB\u884C\u914D\u5BF9\uFF0C\u9075\u5FAA\u7684\u662F\u540E\u5230\u5148\u914D\u5BF9\u7684\u539F\u5219\uFF0C\u6240\u4EE5\u662F\u975E\u516C\u5E73\u7684\u3002</p><p>\u4E0B\u9762\u5206\u522B\u770B\u4E00\u4E0B TransferQueue \u548C TransferStack \u7684\u5B9E\u73B0\u3002</p><ol><li><p>TransferQueue</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TransferQueue</span> <span class="token keyword">extends</span> <span class="token class-name">Transferer</span> <span class="token punctuation">{</span>
        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">QNode</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5355\u5411\u94FE\u8868</span>
            <span class="token keyword">volatile</span> <span class="token class-name">QNode</span> next<span class="token punctuation">;</span>          
            <span class="token comment">// \u5982\u679C\u662F put\uFF0C\u5219 item != null\uFF1B\u5982\u679C\u662F take\uFF0C\u5219 item == null</span>
            <span class="token keyword">volatile</span> <span class="token class-name">Object</span> item<span class="token punctuation">;</span>         
            <span class="token comment">// put / take \u5BF9\u5E94\u7684\u963B\u585E\u7EBF\u7A0B\u548C\u4E0A\u9762\u7684 item \u5BF9\u5E94</span>
            <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> waiter<span class="token punctuation">;</span> 
            <span class="token comment">// put\uFF0CisData = true\uFF0C\u5426\u5219\u4E3A false</span>
            <span class="token keyword">final</span> <span class="token keyword">boolean</span> isData<span class="token punctuation">;</span>
            <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">QNode</span> head<span class="token punctuation">;</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">QNode</span> tail<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0CTransferQueue \u662F\u4E00\u4E2A\u57FA\u4E8E\u5355\u5411\u94FE\u8868\u800C\u5B9E\u73B0\u7684\u961F\u5217\uFF0C\u901A\u8FC7 head \u548C tail\uFF0C2 \u4E2A\u6307\u9488\u8BB0\u5F55\u5934\u90E8\u548C\u5C3E\u90E8\u3002\u521D\u59CB\u7684\u65F6\u5019\uFF0Chead \u548C tail \u4F1A\u6307\u5411\u4E00\u4E2A\u7A7A\u8282\u70B9\uFF0C\u6784\u9020\u51FD\u6570\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TransferQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7A7A\u8282\u70B9</span>
    <span class="token class-name">QNode</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QNode</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    head <span class="token operator">=</span> h<span class="token punctuation">;</span>
    tail <span class="token operator">=</span> h<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56FE5-3 \u6240\u793A\u4E3A TransferQueue \u7684\u5DE5\u4F5C\u539F\u7406\u3002</p><img src="`+o+`" alt="\u56FE5-3" style="zoom:50%;"><p>\u56FE5-3 TransferQueue \u7684\u5DE5\u4F5C\u539F\u7406</p><p>\u9636\u6BB5\uFF08a\uFF09\uFF1A\u961F\u5217\u4E2D\u662F\u4E00\u4E2A\u7A7A\u7684\u8282\u70B9\uFF0Chead / tail \u90FD\u6307\u5411\u8FD9\u4E2A\u7A7A\u8282\u70B9\u3002</p><p>\u9636\u6BB5\uFF08b\uFF09\uFF1A3 \u4E2A\u7EBF\u7A0B\u5206\u522B\u8C03\u7528 put\uFF0C\u751F\u6210 3 \u4E2A QNode\uFF0C\u8FDB\u5165\u961F\u5217\u3002</p><p>\u9636\u6BB5\uFF08c\uFF09\uFF1A\u6765\u4E86\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528 take\uFF0C\u4F1A\u548C\u961F\u5217\u5934\u90E8\u7684\u7B2C 1 \u4E2A QNode \u8FDB\u884C\u914D\u5BF9\u3002</p><p>\u9636\u6BB5\uFF08d\uFF09\uFF1A\u7B2C 1 \u4E2A QNode \u51FA\u961F\u5217\u3002</p><p>\u8FD9\u91CC\u6709\u4E00\u4E2A\u5173\u952E\u70B9\uFF1Aput \u8282\u70B9\u548C take \u8282\u70B9\u4E00\u65E6\u76F8\u9047\uFF0C\u5C31\u4F1A\u914D\u5BF9\u51FA\u961F\u5217\uFF0C\u6240\u4EE5\u5728\u961F\u5217\u4E2D\u4E0D\u53EF\u80FD\u540C\u65F6\u5B58\u5728 put \u8282\u70B9\u548C take \u8282\u70B9\uFF0C\u8981\u4E48\u6240\u6709\u8282\u70B9\u90FD\u662F put \u8282\u70B9\uFF0C\u8981\u4E48\u6240\u6709\u8282\u70B9\u90FD\u662F take \u8282\u70B9\u3002</p><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B TransferQueue \u7684\u4EE3\u7801\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Object</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Object</span> e<span class="token punctuation">,</span> <span class="token keyword">boolean</span> timed<span class="token punctuation">,</span> <span class="token keyword">long</span> nanos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">QNode</span> s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> 
    <span class="token keyword">boolean</span> isData <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">QNode</span> t <span class="token operator">=</span> tail<span class="token punctuation">;</span>
        <span class="token class-name">QNode</span> h <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token comment">// \u961F\u5217\u8FD8\u672A\u521D\u59CB\u5316\uFF0C\u81EA\u65CB\u7B49\u5F85</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> h <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u961F\u5217\u4E3A\u7A7A\u6216\u8005\u5F53\u524D\u7EBF\u7A0B\u548C\u961F\u5217\u4E2D\u5143\u7D20\u4E3A\u540C\u4E00\u79CD\u6A21\u5F0F</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">==</span> t <span class="token operator">||</span> t<span class="token punctuation">.</span>isData <span class="token operator">==</span> isData<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token class-name">QNode</span> tn <span class="token operator">=</span> t<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token comment">// \u4E0D\u4E00\u81F4\u8BFB\uFF0C\u91CD\u65B0\u6267\u884C for \u5FAA\u73AF</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> tail<span class="token punctuation">)</span>                  
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               
                <span class="token function">advanceTail</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> tn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timed <span class="token operator">&amp;&amp;</span> nanos <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>        
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u8282\u70B9</span>
                s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QNode</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> isData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u52A0\u5165\u5C3E\u90E8</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">casNext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span>        
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token comment">// \u540E\u79FB tail \u6307\u9488</span>
            <span class="token function">advanceTail</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>              
            <span class="token comment">// \u8FDB\u5165\u963B\u585E\u72B6\u6001</span>
            <span class="token class-name">Object</span> x <span class="token operator">=</span> <span class="token function">awaitFulfill</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">,</span> timed<span class="token punctuation">,</span> nanos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>                   
                <span class="token function">clean</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u4ECE\u963B\u585E\u4E2D\u5524\u9192\uFF0C\u786E\u5B9A\u5DF2\u7ECF\u5904\u4E8E\u961F\u5217\u4E2D\u7684\u7B2C 1 \u4E2A\u5143\u7D20</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">isOffList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           
                <span class="token function">advanceHead</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>          
                <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>              
                    s<span class="token punctuation">.</span>item <span class="token operator">=</span> s<span class="token punctuation">;</span>
                s<span class="token punctuation">.</span>waiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> x <span class="token operator">:</span> e<span class="token punctuation">;</span>
            <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u53EF\u4EE5\u548C\u961F\u5217\u4E2D\u7684\u7B2C 1 \u4E2A\u5143\u7D20\u8FDB\u884C\u914D\u5BF9</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    
            <span class="token comment">// \u53D6\u961F\u5217\u4E2D\u7B2C 1 \u4E2A\u5143\u7D20</span>
            <span class="token class-name">QNode</span> m <span class="token operator">=</span> h<span class="token punctuation">.</span>next<span class="token punctuation">;</span>               
            <span class="token comment">// \u4E0D\u4E00\u81F4\u8BFB\uFF0C\u91CD\u65B0\u6267\u884C for \u5FAA\u73AF</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> tail <span class="token operator">||</span> m <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> h <span class="token operator">!=</span> head<span class="token punctuation">)</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>                   

            <span class="token class-name">Object</span> x <span class="token operator">=</span> m<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
            <span class="token comment">// \u5DF2\u7ECF\u914D\u5BF9\u8FC7</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isData <span class="token operator">==</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span>    
                x <span class="token operator">==</span> m <span class="token operator">||</span>                   
                <span class="token comment">// \u5C1D\u8BD5\u914D\u5BF9</span>
                <span class="token operator">!</span>m<span class="token punctuation">.</span><span class="token function">casItem</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       
                <span class="token comment">// \u5DF2\u7ECF\u914D\u5BF9\u8FC7\uFF0C\u76F4\u63A5\u51FA\u961F\u5217</span>
                <span class="token function">advanceHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>          
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u914D\u5BF9\u6210\u529F\uFF0C\u51FA\u961F\u5217</span>
            <span class="token function">advanceHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>              
            <span class="token comment">// \u5524\u9192\u961F\u5217\u4E2D\u4E0E\u7B2C 1 \u4E2A\u5143\u7D20\u5BF9\u5E94\u7684\u7EBF\u7A0B</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>waiter<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> x <span class="token operator">:</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4E2A for \u5FAA\u73AF\u6709\u4E24\u4E2A\u5927\u7684 if-else \u5206\u652F\uFF0C\u5982\u679C\u5F53\u524D\u7EBF\u7A0B\u548C\u961F\u5217\u4E2D\u7684\u5143\u7D20\u662F\u540C\u4E00\u79CD\u6A21\u5F0F\uFF08\u90FD\u662F put \u8282\u70B9\u6216\u8005 take \u8282\u70B9\uFF09\uFF0C\u5219\u4E0E\u5F53\u524D\u7EBF\u7A0B\u5BF9\u5E94\u7684\u8282\u70B9\u88AB\u52A0\u5165\u961F\u5217\u5C3E\u90E8\u5E76\u4E14\u963B\u585E\uFF1B\u5982\u679C\u4E0D\u662F\u540C\u4E00\u79CD\u6A21\u5F0F\uFF0C\u5219\u9009\u53D6\u961F\u5217\u5934\u90E8\u7684\u7B2C 1 \u4E2A\u5143\u7D20\u8FDB\u884C\u914D\u5BF9\u3002</p><p>\u8FD9\u91CC\u7684\u914D\u5BF9\u5C31\u662F m.casItem(x, e)\uFF0C\u628A\u81EA\u5DF1\u7684 item x \u6362\u6210\u5BF9\u65B9\u7684 item e\uFF0C\u5982\u679C CAS \u64CD\u4F5C\u6210\u529F\uFF0C\u5219\u914D\u5BF9\u6210\u529F\u3002\u5982\u679C\u662F put \u8282\u70B9\uFF0C\u5219 isData = true\uFF0Citem != null\uFF1B\u5982\u679C\u662F take \u8282\u70B9\uFF0C\u5219 isData = false\uFF0Citem = null\u3002\u5982\u679C CAS \u64CD\u4F5C\u4E0D\u6210\u529F\uFF0C\u5219 isData \u548C item \u4E4B\u95F4\u5C06\u4E0D\u4E00\u81F4\uFF0C\u4E5F\u5C31\u662F isData != (x != null)\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u6761\u4EF6\u53EF\u4EE5\u5224\u65AD\u8282\u70B9\u662F\u5426\u5DF2\u7ECF\u88AB\u5339\u914D\u8FC7\u4E86\u3002</p></li><li><p>TransferStack</p><p>TransferStack \u7684\u5B9A\u4E49\u5982\u4E0B\u6240\u793A\uFF0C\u9996\u5148\uFF0C\u5B83\u4E5F\u662F\u4E00\u4E2A\u5355\u5411\u94FE\u8868\u3002\u4E0D\u540C\u4E8E\u961F\u5217\uFF0C\u53EA\u9700\u8981 head \u6307\u9488\u5C31\u80FD\u5B9E\u73B0\u5165\u6808\u548C\u51FA\u6808\u64CD\u4F5C\u3002</p><p>\u94FE\u8868\u4E2D\u7684\u8282\u70B9\u6709\u4E09\u79CD\u72B6\u6001\uFF0CREQUEST \u5BF9\u5E94 take \u8282\u70B9\uFF0CDATA \u5BF9\u5E94 put \u8282\u70B9\uFF0C\u4E8C\u8005\u914D\u5BF9\u4E4B\u540E\uFF0C\u4F1A\u751F\u6210\u4E00\u4E2A FULFILLING \u8282\u70B9\uFF0C\u5165\u6808\uFF0C\u7136\u540E FULLING \u8282\u70B9\u548C\u88AB\u914D\u5BF9\u7684\u8282\u70B9\u4E00\u8D77\u51FA\u6808\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TransferStack</span> <span class="token keyword">extends</span> <span class="token class-name">Transferer</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> REQUEST <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DATA <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> FULFILLING <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SNode</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5355\u5411\u94FE\u8868</span>
        <span class="token keyword">volatile</span> <span class="token class-name">SNode</span> next<span class="token punctuation">;</span>        
        <span class="token comment">// \u914D\u5BF9\u7684\u8282\u70B9</span>
        <span class="token keyword">volatile</span> <span class="token class-name">SNode</span> match<span class="token punctuation">;</span>       
        <span class="token comment">// \u5BF9\u5E94\u7684\u963B\u585E\u7EBF\u7A0B</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> waiter<span class="token punctuation">;</span>    
        <span class="token class-name">Object</span> item<span class="token punctuation">;</span>                
        <span class="token comment">// \u4E09\u79CD\u6A21\u5F0F</span>
        <span class="token keyword">int</span> mode<span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">volatile</span> <span class="token class-name">SNode</span> head<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u56FE5-4 \u6240\u793A\u4E3A TransferStack \u7684\u5DE5\u4F5C\u539F\u7406\u3002</p><img src="`+c+`" alt="\u56FE5-4" style="zoom:50%;"><p>\u56FE5-4 TransferStack \u7684\u5DE5\u4F5C\u539F\u7406</p><p>\u9636\u6BB5\uFF08a\uFF09\uFF1Ahead \u6307\u5411 NULL\u3002\u4E0D\u540C\u4E8E TransferQueue\uFF0C\u8FD9\u91CC\u6CA1\u6709\u7A7A\u7684\u5934\u8282\u70B9\u3002</p><p>\u9636\u6BB5\uFF08b\uFF09\uFF1A3 \u4E2A\u7EBF\u7A0B\u8C03\u7528 3 \u6B21 put\uFF0C\u4F9D\u6B21\u5165\u6808\u3002</p><p>\u9636\u6BB5\uFF08c\uFF09\uFF1A\u7EBF\u7A0B 4 \u8C03\u7528 take\uFF0C\u548C\u6808\u9876\u7684\u7B2C 1 \u4E2A\u5143\u7D20\u914D\u5BF9\uFF0C\u751F\u6210 FULLFILLING \u8282\u70B9\uFF0C\u5165\u6808\u3002</p><p>\u9636\u6BB5\uFF08d\uFF09\uFF1A\u6808\u9876\u7684 2 \u4E2A\u5143\u7D20\u540C\u65F6\u51FA\u6808\u3002</p><p>\u4E0B\u9762\u770B\u4E00\u4E0B\u5177\u4F53\u7684\u4EE3\u7801\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Object</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Object</span> e<span class="token punctuation">,</span> <span class="token keyword">boolean</span> timed<span class="token punctuation">,</span> <span class="token keyword">long</span> nanos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SNode</span> s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> 
    <span class="token keyword">int</span> mode <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> REQUEST <span class="token operator">:</span> DATA<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SNode</span> h <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token comment">// \u540C\u4E00\u79CD\u6A21\u5F0F</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> h<span class="token punctuation">.</span>mode <span class="token operator">==</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timed <span class="token operator">&amp;&amp;</span> nanos <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       
                <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> h<span class="token punctuation">.</span><span class="token function">isCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token function">casHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> h<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>      
                <span class="token keyword">else</span>
                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5165\u6808</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token function">snode</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">,</span> h<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u963B\u585E\u7B49\u5F85</span>
                <span class="token class-name">SNode</span> m <span class="token operator">=</span> <span class="token function">awaitFulfill</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> timed<span class="token punctuation">,</span> nanos<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">==</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>               
                    <span class="token function">clean</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">=</span> head<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> h<span class="token punctuation">.</span>next <span class="token operator">==</span> s<span class="token punctuation">)</span>
                    <span class="token function">casHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> s<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>      
                <span class="token keyword">return</span> <span class="token punctuation">(</span>mode <span class="token operator">==</span> REQUEST<span class="token punctuation">)</span> <span class="token operator">?</span> m<span class="token punctuation">.</span>item <span class="token operator">:</span> s<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u975E\u540C\u4E00\u79CD\u6A21\u5F0F\uFF0C\u5F85\u5339\u914D</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isFulfilling</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>mode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token keyword">if</span> <span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">isCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            
                <span class="token function">casHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> h<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>         
            <span class="token comment">// \u751F\u6210\u4E00\u4E2A FULFILLING \u8282\u70B9\uFF0C\u5165\u6808</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token function">snode</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">,</span> h<span class="token punctuation">,</span> FULFILLING <span class="token operator">|</span> mode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                    <span class="token class-name">SNode</span> m <span class="token operator">=</span> s<span class="token punctuation">.</span>next<span class="token punctuation">;</span>       
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        
                        <span class="token function">casHead</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
                        s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>           
                        <span class="token keyword">break</span><span class="token punctuation">;</span>              
                    <span class="token punctuation">}</span>
                    <span class="token class-name">SNode</span> mn <span class="token operator">=</span> m<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">tryMatch</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u4E24\u4E2A\u8282\u70B9\u4E00\u8D77\u51FA\u6808</span>
                        <span class="token function">casHead</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> mn<span class="token punctuation">)</span><span class="token punctuation">;</span>      
                        <span class="token keyword">return</span> <span class="token punctuation">(</span>mode <span class="token operator">==</span> REQUEST<span class="token punctuation">)</span> <span class="token operator">?</span> m<span class="token punctuation">.</span>item <span class="token operator">:</span> s<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span>                  
                        s<span class="token punctuation">.</span><span class="token function">casNext</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> mn<span class="token punctuation">)</span><span class="token punctuation">;</span>   
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5DF2\u7ECF\u5339\u914D\u8FC7\u4E86\uFF0C\u51FA\u6808</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                           
            <span class="token class-name">SNode</span> m <span class="token operator">=</span> h<span class="token punctuation">.</span>next<span class="token punctuation">;</span>              
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>                 
                <span class="token function">casHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">SNode</span> mn <span class="token operator">=</span> m<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">tryMatch</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span>           
                    <span class="token comment">// \u914D\u5BF9\uFF0C\u4E00\u8D77\u51FA\u6808</span>
                    <span class="token function">casHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> mn<span class="token punctuation">)</span><span class="token punctuation">;</span>          
                <span class="token keyword">else</span>                         
                    h<span class="token punctuation">.</span><span class="token function">casNext</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> mn<span class="token punctuation">)</span><span class="token punctuation">;</span>        
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_5-2-blockingdeque" tabindex="-1"><a class="header-anchor" href="#_5-2-blockingdeque" aria-hidden="true">#</a> 5.2 BlockingDeque</h2><p>BlockingDeque \u5B9A\u4E49\u4E86\u4E00\u4E2A\u963B\u585E\u7684\u53CC\u7AEF\u961F\u5217\u63A5\u53E3\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BlockingDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">putFirst</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">putLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> <span class="token function">takeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> <span class="token function">takeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8BE5\u63A5\u53E3\u5728\u7EE7\u627F\u4E86 BlockingQueue \u63A5\u53E3\u7684\u540C\u65F6\uFF0C\u589E\u52A0\u4E86\u5BF9\u5E94\u7684\u53CC\u7AEF\u961F\u5217\u64CD\u4F5C\u63A5\u53E3\u3002\u8BE5\u63A5\u53E3\u53EA\u6709\u4E00\u4E2A\u5B9E\u73B0\uFF0C\u5C31\u662F LinkedBlockingDeque\u3002</p><p>\u5176\u6838\u5FC3\u6570\u636E\u7ED3\u6784\u5982\u4E0B\u6240\u793A\uFF0C\u662F\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedBlockingDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">E</span> item<span class="token punctuation">;</span>
        <span class="token comment">// \u53CC\u5411\u94FE\u8868\u7684 Node</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>

        <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">E</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            item <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u961F\u5217\u7684\u5934\u548C\u5C3E</span>
    <span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>
    <span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>
    <span class="token comment">// \u5143\u7D20\u4E2A\u6570</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>
    <span class="token comment">// \u5BB9\u91CF</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> capacity<span class="token punctuation">;</span>
    <span class="token comment">// 1 \u628A\u9501 + 2 \u4E2A\u6761\u4EF6</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notEmpty <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notFull <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ... </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u5E94\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u548C LinkedBlockingQueue \u57FA\u672C\u4E00\u6837\uFF0C\u53EA\u662F LinkedBlockingQueue \u662F\u5355\u5411\u94FE\u8868\uFF0C\u800C LinkedBlockingDeque \u662F\u53CC\u5411\u94FE\u8868\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">takeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">E</span> x<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token function">unlinkFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">takeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">E</span> x<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token function">unlinkLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putFirst</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">linkFirst</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span>
            notFull<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">linkLast</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span>
            notFull<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-3-copyonwrite" tabindex="-1"><a class="header-anchor" href="#_5-3-copyonwrite" aria-hidden="true">#</a> 5.3 CopyOnWrite</h2><p>CopyOnWrite \u6307\u5728 \u201C\u5199\u201D \u7684\u65F6\u5019\uFF0C\u4E0D\u662F\u76F4\u63A5 \u201C\u5199\u201D \u6E90\u6570\u636E\uFF0C\u800C\u662F\u628A\u6570\u636E\u62F7\u8D1D\u4E00\u4EFD\u8FDB\u884C\u4FEE\u6539\uFF0C\u518D\u901A\u8FC7\u60B2\u89C2\u9501\u6216\u8005\u4E50\u89C2\u9501\u7684\u65B9\u5F0F\u5199\u56DE\u3002\u90A3\u4E3A\u4EC0\u4E48\u4E0D\u76F4\u63A5\u4FEE\u6539\uFF0C\u800C\u662F\u8981\u62F7\u8D1D\u4E00\u4EFD\u4FEE\u6539\u5462\uFF1F\u8FD9\u662F\u4E3A\u4E86\u5728 \u201C\u8BFB\u201D \u7684\u65F6\u5019\u4E0D\u52A0\u9501\u3002\u4E0B\u9762\u901A\u8FC7\u51E0\u4E2A\u6848\u4F8B\u6765\u5C55\u73B0 CopyOnWrite \u7684\u5E94\u7528\u3002</p><h3 id="_5-3-1-copyonwritearraylist" tabindex="-1"><a class="header-anchor" href="#_5-3-1-copyonwritearraylist" aria-hidden="true">#</a> 5.3.1 CopyOnWriteArrayList</h3><p>\u548C ArrayList \u4E00\u6837\uFF0CCopyOnWriteArrayList \u7684\u6838\u5FC3\u6570\u636E\u7ED3\u6784\u4E5F\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">transient</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F CopyOnArrayList \u7684\u51E0\u4E2A \u201C\u8BFB\u201D \u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> elements<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> elements<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> fence<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fence<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fence<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65E2\u7136\u8FD9\u4E9B \u201C\u8BFB\u201D \u51FD\u6570\u90FD\u6CA1\u6709\u52A0\u9501\uFF0C\u90A3\u4E48\u662F\u5982\u4F55\u4FDD\u8BC1 \u201C\u7EBF\u7A0B\u5B89\u5168\u201D \u5462\uFF1F\u7B54\u6848\u5728 \u201C\u5199\u201D \u51FD\u6570\u91CC\u9762\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    <span class="token comment">// \u52A0\u60B2\u89C2\u9501</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// CopyOnWrite\uFF0C\u5199\u7684\u65F6\u5019\uFF0C\u5148\u62F7\u8D1D\u4E00\u4EFD\u4E4B\u524D\u7684\u6570\u7EC4</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newElements <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elements<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
        newElements<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token comment">// \u628A\u65B0\u6570\u7EC4\u8D4B\u503C\u7ED9\u8001\u6570\u7EC4</span>
        <span class="token function">setArray</span><span class="token punctuation">(</span>newElements<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4ED6 \u201C\u5199\u201D \u51FD\u6570\uFF0C\u4F8B\u5982 remove \u548C add \u7C7B\u4F3C\uFF0C\u6B64\u5904\u4E0D\u518D\u8BE6\u8FF0\u3002</p><h3 id="_5-3-2-copyonwritearrayset" tabindex="-1"><a class="header-anchor" href="#_5-3-2-copyonwritearrayset" aria-hidden="true">#</a> 5.3.2 CopyOnWriteArraySet</h3><p>CopyOnWriteArraySet \u5C31\u662F\u7528 Array \u5B9E\u73B0\u7684\u4E00\u4E2A Set\uFF0C\u4FDD\u8BC1\u6240\u6709\u5143\u7D20\u90FD\u4E0D\u91CD\u590D\u3002\u5176\u5185\u90E8\u662F\u5C01\u88C5\u7684\u4E00\u4E2A CopyOnWriteArrayList\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CopyOnWriteArraySet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C01\u88C5\u7684 CopyOnWriteArrayList</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> al<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">CopyOnWriteArraySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        al <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u91CD\u590D\u7684\uFF0C\u52A0\u8FDB\u53BB</span>
        <span class="token keyword">return</span> al<span class="token punctuation">.</span><span class="token function">addIfAbsent</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-4-concurrentlinkedqueue-deque" tabindex="-1"><a class="header-anchor" href="#_5-4-concurrentlinkedqueue-deque" aria-hidden="true">#</a> 5.4 ConcurrentLinkedQueue / Deque</h2><p>\u524D\u9762\u8BE6\u7EC6\u5206\u6790\u4E86 AQS \u5185\u90E8\u7684\u963B\u585E\u961F\u5217\u5B9E\u73B0\u539F\u7406\uFF1A\u57FA\u4E8E\u53CC\u5411\u94FE\u8868\uFF0C\u901A\u8FC7\u5BF9 head / tail \u8FDB\u884C CAS \u64CD\u4F5C\uFF0C\u5B9E\u73B0\u5165\u961F\u548C\u51FA\u961F\u3002</p><p>ConcurrentLinkedQueue \u7684\u5B9E\u73B0\u539F\u7406\u548C AQS \u5185\u90E8\u7684\u963B\u585E\u961F\u5217\u7C7B\u4F3C\uFF1A\u540C\u6837\u662F\u57FA\u4E8E CAS\uFF0C\u540C\u6837\u662F\u901A\u8FC7 head / tail \u6307\u9488\u8BB0\u5F55\u961F\u5217\u5934\u90E8\u548C\u5C3E\u90E8\uFF0C\u4F46\u8FD8\u662F\u6709\u7A0D\u8BB8\u5DEE\u522B\u3002</p><p>\u9996\u5148\uFF0C\u5B83\u662F\u4E00\u4E2A\u5355\u5411\u94FE\u8868\uFF0C\u5B9A\u4E49\u5982\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentLinkedQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">volatile</span> <span class="token class-name">E</span> item<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> head<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> tail<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u6B21\uFF0C\u5728 AQS \u7684\u963B\u585E\u961F\u5217\u4E2D\uFF0C\u6BCF\u6B21\u5165\u961F\u540E\uFF0Ctail \u4E00\u5B9A\u540E\u79FB\u4E00\u4E2A\u4F4D\u7F6E\uFF1B\u6BCF\u6B21\u51FA\u961F\uFF0Chead \u4E00\u5B9A\u524D\u79FB\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u4EE5\u4FDD\u8BC1 head \u6307\u5411\u961F\u5217\u5934\u90E8\uFF0Ctail \u6307\u5411\u94FE\u8868\u5C3E\u90E8\u3002</p><p>\u4F46\u5728 ConcurrentLinkedQueue \u4E2D\uFF0Chead / tail \u7684\u66F4\u65B0\u53EF\u80FD\u843D\u540E\u4E8E\u8282\u70B9\u7684\u5165\u961F\u548C\u51FA\u961F\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u662F\u76F4\u63A5\u5BF9 head / tail \u6307\u9488\u8FDB\u884C CAS \u64CD\u4F5C\u7684\uFF0C\u800C\u662F\u5BF9 Node \u4E2D\u7684 item \u8FDB\u884C\u64CD\u4F5C\u3002\u4E0B\u9762\u8FDB\u884C\u8BE6\u7EC6\u5206\u6790\uFF1A</p><ol><li><p>\u521D\u59CB\u5316\u521D\u59CB\u7684\u65F6\u5019\uFF0C\u5982\u56FE5-5 \u6240\u793A\uFF0Chead \u548C tail \u90FD\u6267\u884C\u4E00\u4E2A NULL \u8282\u70B9\u3002</p><img src="`+l+`" alt="\u56FE5-5" style="zoom:50%;"><p>\u56FE5-5 \u521D\u59CB\u72B6\u6001</p><p>\u5BF9\u5E94\u7684\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ConcurrentLinkedQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    head <span class="token operator">=</span> tail <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5165\u961F\u5217</p><p>\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">offer</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkNotNull</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> tail<span class="token punctuation">,</span> p <span class="token operator">=</span> t<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>q <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5173\u952E\u70B9\uFF1A\u662F\u5BF9 tail \u7684 next \u6307\u9488\u800C\u4E0D\u662F\u5BF9 tail \u6307\u9488\u6267\u884C CAS \u64CD\u4F5C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">casNext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6BCF\u5165 2 \u4E2A\u8282\u70B9\uFF0C\u540E\u79FB\u4E00\u6B21 tail \u6307\u9488\uFF0C\u5931\u8D25\u4E5F\u6CA1\u6709\u5173\u7CFB</span>
                <span class="token function">casTail</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> q<span class="token punctuation">)</span>
            <span class="token comment">// \u5DF2\u7ECF\u5230\u8FBE\u961F\u5217\u5C3E\u90E8</span>
            p <span class="token operator">=</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> tail<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> t <span class="token operator">:</span> head<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token comment">// \u540E\u79FB p \u6307\u9488</span>
            p <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> t <span class="token operator">&amp;&amp;</span> t <span class="token operator">!=</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> tail<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> t <span class="token operator">:</span> q<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u5165\u961F\u5176\u5B9E\u662F\u6BCF\u6B21\u5728\u961F\u5C3E\u8FFD\u52A0 2 \u4E2A\u8282\u70B9\u65F6\uFF0C\u624D\u79FB\u52A8\u4E00\u6B21 tail \u8282\u70B9\uFF0C\u5177\u4F53\u8FC7\u7A0B\u5982\u56FE5-6 \u6240\u793A\u3002</p><img src="`+i+'" alt="\u56FE5-6" style="zoom:50%;"><p>\u56FE5-6 \u7EBF\u7A0B 1 \u5165\u961F item2 \u8282\u70B9</p><p>\u521D\u59CB\u7684\u65F6\u5019\uFF0C\u961F\u5217\u4E2D\u6709 1 \u4E2A\u8282\u70B9 item1\uFF0Ctail \u6307\u5411\u8BE5\u8282\u70B9\uFF0C\u5047\u8BBE\u7EBF\u7A0B 1 \u8981\u5165\u961F item2 \u8282\u70B9\uFF1A</p><p>step1\uFF1Ap = tail\uFF0Cq = p.next = NULL\u3002</p><p>step2\uFF1A\u5BF9 p \u7684 next \u6267\u884C CAS \u64CD\u4F5C\uFF0C\u8FFD\u52A0 item2\uFF0C\u6210\u529F\u4E4B\u540E\uFF0Cp = tail\u3002\u6240\u4EE5\u4E0A\u9762\u7684 casTail \u51FD\u6570\u4E0D\u4F1A\u6267\u884C\uFF0C\u76F4\u63A5\u8FD4\u56DE\u3002\u6B64\u65F6 tail \u6307\u9488\u6CA1\u6709\u53D8\u5316\u3002</p><p>\u4E4B\u540E\uFF0C\u5047\u8BBE\u7EBF\u7A0B 2 \u8981\u5165\u961F item3 \u8282\u70B9\uFF0C\u5982\u56FE5-7 \u6240\u793A\u3002</p><img src="'+u+`" alt="\u56FE5-7" style="zoom:50%;"><p>\u56FE5-7 \u7EBF\u7A0B 2 \u5165\u961F item3 \u8282\u70B9</p><p>step3\uFF1Ap = tail\uFF0Cq = p.next\u3002</p><p>step4\uFF1Aq != NULL\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u5165\u961F\u65B0\u8282\u70B9\u3002p\uFF0Cq \u90FD\u540E\u79FB 1 \u4F4D\u3002</p><p>step5\uFF1Aq = NULL\uFF0C\u5BF9 p \u7684 next \u6267\u884C CAS \u64CD\u4F5C\uFF0C\u5165\u961F item3 \u8282\u70B9\u3002</p><p>step6\uFF1Ap != t\uFF0C\u6EE1\u8DB3\u6761\u4EF6\uFF0C\u6267\u884C\u4E0A\u9762\u7684 casTail \u64CD\u4F5C\uFF0Ctail \u540E\u79FB 2 \u4E2A\u4F4D\u7F6E\uFF0C\u5230\u8FBE\u961F\u5217\u5C3E\u90E8\u3002</p><p>\u6700\u540E\u603B\u7ED3\u4E00\u4E0B\u5165\u961F\u5217\u7684\u4E24\u4E2A\u5173\u952E\u70B9\uFF1A</p><p>\uFF081\uFF09\u5373\u4F7F tail \u6307\u9488\u6CA1\u6709\u79FB\u52A8\uFF0C\u53EA\u8981\u5BF9 p \u7684 next \u6307\u9488\u6210\u529F\u8FDB\u884C CAS \u64CD\u4F5C\uFF0C\u5C31\u7B97\u6210\u529F\u5165\u961F\u5217\u3002</p><p>\uFF082\uFF09\u53EA\u6709\u5F53 p != tail \u7684\u65F6\u5019\uFF0C\u624D\u4F1A\u540E\u79FB tail \u6307\u9488\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6BCF\u8FDE\u7EED\u8FFD\u52A0 2 \u4E2A\u8282\u70B9\uFF0C\u624D\u540E\u79FB 1 \u6B21 tail \u6307\u9488\u3002\u5373\u4F7F CAS \u5931\u8D25\u4E5F\u6CA1\u5173\u7CFB\uFF0C\u53EF\u4EE5\u7531\u4E0B 1 \u4E2A\u7EBF\u7A0B\u6765\u79FB\u52A8 tail \u6307\u9488\u3002</p></li><li><p>\u51FA\u961F\u5217</p><p>\u4E0A\u9762\u8BF4\u4E86\u5165\u961F\u5217\u4E4B\u540E\uFF0Ctail \u6307\u9488\u4E0D\u53D8\u5316\uFF0C\u90A3\u662F\u5426\u4F1A\u51FA\u73B0\u5165\u961F\u5217\u4E4B\u540E\uFF0C\u8981\u51FA\u961F\u5217\u5374\u6CA1\u6709\u5143\u7D20\u53EF\u51FA\u7684\u60C5\u51B5\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    restartFromHead<span class="token operator">:</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> h <span class="token operator">=</span> head<span class="token punctuation">,</span> p <span class="token operator">=</span> h<span class="token punctuation">,</span> q<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">E</span> item <span class="token operator">=</span> p<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
            <span class="token comment">// \u5173\u952E\u70B9\uFF1A\u5728\u51FA\u961F\u5217\u7684\u65F6\u5019\uFF0C\u5E76\u6CA1\u6709\u79FB\u52A8 head \u6307\u9488\uFF0C\u800C\u662F\u628A item \u7F6E\u4E3A\u4E86 NULL</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">casItem</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6BCF\u4EA7\u751F 2 \u4E2A NULL \u8282\u70B9\uFF0C\u624D\u628A head \u6307\u9488\u540E\u79FB 2 \u4F4D</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> h<span class="token punctuation">)</span>
                    <span class="token function">updateHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> q <span class="token operator">:</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> item<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">updateHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> q<span class="token punctuation">)</span>
                <span class="token keyword">continue</span> restartFromHead<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                p <span class="token operator">=</span> q<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FA\u961F\u5217\u7684\u4EE3\u7801\u548C\u5165\u961F\u5217\u7C7B\u4F3C\uFF0C\u4E5F\u6709 p\u3001q\uFF0C2 \u4E2A\u6307\u9488\uFF0C\u6574\u4E2A\u53D8\u5316\u8FC7\u7A0B\u5982\u56FE5-8 \u6240\u793A\u3002\u5047\u8BBE\u521D\u59CB\u7684\u65F6\u5019 head \u6307\u5411\u7A7A\u8282\u70B9\uFF0C\u961F\u5217\u4E2D\u6709 item1\u3001item2\u3001item3 \u4E09\u4E2A\u8282\u70B9\u3002</p><img src="`+k+`" alt="\u56FE5-8" style="zoom:50%;"><p>\u56FE5-8 \u7EBF\u7A0B 3 \u51FA\u961F\u5217\u7684\u8FC7\u7A0B</p><p>step1\uFF1Ap = head\uFF0Cq = p.next\uFF0Cp != q\u3002</p><p>step2\uFF1A\u540E\u79FB p \u6307\u9488\uFF0C\u4F7F\u5F97 p = q\u3002</p><p>step3\uFF1A\u51FA\u961F\u5217\u3002\u5173\u952E\u70B9\uFF1A\u6B64\u5904\u5E76\u6CA1\u6709\u76F4\u63A5\u5220\u9664 item1 \u8282\u70B9\uFF0C\u53EA\u662F\u628A\u8BE5\u8282\u70B9\u7684 item \u901A\u8FC7 CAS \u64CD\u4F5C\u7F6E\u4E3A\u4E86 NULL\u3002</p><p>step4\uFF1Ap != head\uFF0C\u6B64\u65F6\u961F\u5217\u4E2D\u6709\u4E86 2 \u4E2A NULL \u8282\u70B9\uFF0C\u518D\u524D\u79FB 1 \u6B21 head \u6307\u9488\uFF0C\u5BF9\u5176\u6267\u884C updateHead \u64CD\u4F5C\u3002</p><p>\u6700\u540E\u603B\u7ED3\u4E00\u4E0B\u51FA\u961F\u5217\u7684\u5173\u952E\u70B9\uFF1A</p><p>\uFF081\uFF09\u51FA\u961F\u5217\u7684\u5224\u65AD\u5E76\u975E\u89C2\u5BDF tail \u6307\u9488\u7684\u4F4D\u7F6E\uFF0C\u800C\u662F\u4F9D\u8D56\u4E8E head \u6307\u9488\u540E\u7EED\u7684\u8282\u70B9\u662F\u5426\u4E3A NULL \u8FD9\u4E00\u6761\u4EF6\u3002</p><p>\uFF082\uFF09\u53EA\u8981\u5BF9\u8282\u70B9\u7684 item \u6267\u884C CAS \u64CD\u4F5C\uFF0C\u7F6E\u4E3A NULL \u6210\u529F\uFF0C\u5219\u51FA\u961F\u5217\u6210\u529F\u3002\u5373\u4F7F head \u6307\u9488\u6CA1\u6709\u6210\u529F\u79FB\u52A8\uFF0C\u4E5F\u53EF\u4EE5\u7531\u4E0B 1 \u4E2A\u7EBF\u7A0B\u7EE7\u7EED\u5B8C\u6210\u3002</p></li><li><p>\u961F\u5217\u5224\u7A7A</p><p>\u56E0\u4E3A head / tail \u5E76\u4E0D\u662F\u7CBE\u786E\u5730\u6307\u5411\u961F\u5217\u5934\u90E8\u548C\u5C3E\u90E8\uFF0C\u6240\u4EE5\u4E0D\u80FD\u7B80\u5355\u5730\u901A\u8FC7\u6BD4\u8F83 head / tail \u6307\u9488\u6765\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A\uFF0C\u800C\u662F\u9700\u8981\u4ECE head \u6307\u9488\u5F00\u59CB\u904D\u5386\uFF0C\u627E\u7B2C 1 \u4E2A\u4E0D\u4E3A NULL \u7684\u8282\u70B9\u3002\u5982\u679C\u627E\u5230\uFF0C\u5219\u961F\u5217\u4E0D\u4E3A\u7A7A\uFF1B\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u5219\u961F\u5217\u4E3A\u7A7A\u3002\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BFB\u627E\u7B2C 1 \u4E2A\u4E0D\u4E3A NULL \u7684\u8282\u70B9</span>
    <span class="token keyword">return</span> <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4ECE head \u6307\u9488\u5F00\u59CB\u904D\u5386\uFF0C\u83B7\u53D6\u7B2C 1 \u4E2A\u4E0D\u4E3A NULL \u7684\u8282\u70B9</span>
<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    restartFromHead<span class="token operator">:</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> h <span class="token operator">=</span> head<span class="token punctuation">,</span> p <span class="token operator">=</span> h<span class="token punctuation">,</span> q<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> hasItem <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>item <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hasItem <span class="token operator">||</span> <span class="token punctuation">(</span>q <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">updateHead</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> hasItem <span class="token operator">?</span> p <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> q<span class="token punctuation">)</span>
                <span class="token keyword">continue</span> restartFromHead<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                p <span class="token operator">=</span> q<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_5-5-concurrenthashmap" tabindex="-1"><a class="header-anchor" href="#_5-5-concurrenthashmap" aria-hidden="true">#</a> 5.5 ConcurrentHashMap</h2><p>HashMap \u901A\u5E38\u7684\u5B9E\u73B0\u65B9\u5F0F\u662F \u201C\u6570\u7EC4 + \u94FE\u8868\u201D\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u88AB\u79F0\u4E3A \u201C\u62C9\u94FE\u6CD5\u201D\u3002ConcurrentHashMap \u5728\u8FD9\u4E2A\u57FA\u672C\u539F\u7406\u4E4B\u4E0A\u8FDB\u884C\u4E86\u5404\u79CD\u4F18\u5316\uFF0C\u5728 JDK 7 \u548C JDK 8 \u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F\u6709\u5F88\u5927\u5DEE\u5F02\uFF0C\u4E0B\u9762\u5206\u5F00\u8BA8\u8BBA\u3002</p><h3 id="_5-5-1-jdk-7-\u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_5-5-1-jdk-7-\u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F" aria-hidden="true">#</a> 5.5.1 JDK 7 \u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F</h3><p>\u4E3A\u4E86\u63D0\u9AD8\u5E76\u53D1\u5EA6\uFF0C\u5728 JDK 7 \u4E2D\uFF0C\u4E00\u4E2A HashMap \u88AB\u62C6\u5206\u4E3A\u591A\u4E2A\u5B50 HashMap\u3002\u6BCF\u4E00\u4E2A\u5B50 HashMap \u79F0\u4F5C\u4E00\u4E2A Segment\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u64CD\u4F5C\u591A\u4E2A Segment \u76F8\u4E92\u72EC\u7ACB\uFF0C\u5982\u56FE5-9 \u6240\u793A\u3002</p><img src="`+r+`" alt="\u56FE5-9" style="zoom:50%;"><p>\u56FE5-9 JDK 7 \u4E2D ConcurrentHashMap \u6570\u636E\u7ED3\u6784\u793A\u610F\u56FE</p><p>\u5177\u4F53\u6765\u8BF4\uFF0C\u6BCF\u4E2A Segment \u90FD\u7EE7\u627F\u81EA ReentrantLock\uFF0CSegment \u7684\u6570\u91CF\u7B49\u4E8E\u9501\u7684\u6570\u91CF\uFF0C\u8FD9\u4E9B\u9501\u5F7C\u6B64\u4E4B\u95F4\u76F8\u4E92\u72EC\u7ACB\uFF0C\u5373\u6240\u8C13\u7684 \u201C\u5206\u6BB5\u9501\u201D\u3002\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ReentrantLock</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">//  ConcurrentHashMap \u7531\u591A\u4E2A\u5B50 HashMap\uFF08Segment\uFF09\u7EC4\u6210</span>
    <span class="token keyword">final</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> segments<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u7531\u6784\u9020\u51FD\u6570\u7684\u5206\u6790\u5165\u624B\uFF0C\u5256\u6790 ConcurrentHashMap \u7684\u5B9E\u73B0\u539F\u7406\u3002</p><ol><li><p>\u6784\u9020\u51FD\u6570\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">,</span> <span class="token keyword">int</span> concurrencyLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>loadFactor <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> concurrencyLevel <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>concurrencyLevel <span class="token operator">&gt;</span> MAX_SEGMENTS<span class="token punctuation">)</span>
        concurrencyLevel <span class="token operator">=</span> MAX_SEGMENTS<span class="token punctuation">;</span>
    <span class="token keyword">int</span> sshift <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ssize <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u8BC1\u5E76\u53D1\u5EA6\u662F 2 \u7684\u6574\u6570\u6B21\u65B9 </span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>ssize <span class="token operator">&lt;</span> concurrencyLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">++</span>sshift<span class="token punctuation">;</span>
        ssize <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>segmentShift <span class="token operator">=</span> <span class="token number">32</span> <span class="token operator">-</span> sshift<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>segmentMask <span class="token operator">=</span> ssize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
        initialCapacity <span class="token operator">=</span> MAXIMUM_CAPACITY<span class="token punctuation">;</span>
    <span class="token comment">// \u521D\u59CB\u603B\u5BB9\u91CF\u6216\u6570\u7EC4\u4E2A\u6570\uFF0C\u662F\u6BCF\u4E2A Segment \u7684\u521D\u59CB\u5927\u5C0F</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> initialCapacity <span class="token operator">/</span> ssize<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">*</span> ssize <span class="token operator">&lt;</span> initialCapacity<span class="token punctuation">)</span>
        <span class="token operator">++</span>c<span class="token punctuation">;</span>
    <span class="token keyword">int</span> cap <span class="token operator">=</span> MIN_SEGMENT_TABLE_CAPACITY<span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u8BC1\u6BCF\u4E2A Segment \u7684\u5BB9\u91CF\uFF0C\u4E5F\u662F 2 \u7684\u6574\u6570\u6B21\u65B9</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>cap <span class="token operator">&lt;</span> c<span class="token punctuation">)</span>
        cap <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6784\u9020\u7B2C 0 \u4E2A Segment</span>
    <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> s0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>cap <span class="token operator">*</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">HashEntry</span><span class="token punctuation">[</span>cap<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5173\u952E\u7684\u4E00\u53E5\uFF1ASegment \u6570\u7EC4\u7684\u5927\u5C0F\u4E3A ssize\uFF0C\u4E5F\u5C31\u662F 2 \u7684\u6574\u6570\u6B21\u65B9</span>
    <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> ss <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Segment</span><span class="token punctuation">[</span>ssize<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6570\u7EC4\u7684\u7B2C 0 \u4E2A\u5143\u7D20\u8D4B\u503C\u4E3A s0</span>
    UNSAFE<span class="token punctuation">.</span><span class="token function">putOrderedObject</span><span class="token punctuation">(</span>ss<span class="token punctuation">,</span> SBASE<span class="token punctuation">,</span> s0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>segments <span class="token operator">=</span> ss<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6784\u9020\u51FD\u6570\u7684\u7B2C 3 \u4E2A\u53C2\u6570 concurrenyLevel\uFF0C\u662F \u201C\u5E76\u53D1\u5EA6\u201D\uFF0C\u4E5F\u5C31\u662F Segment \u6570\u7EC4\u7684\u5927\u5C0F\u3002\u8FD9\u4E2A\u503C\u4E00\u65E6\u5728\u6784\u9020\u51FD\u6570\u4E2D\u8BBE\u5B9A\uFF0C\u4E4B\u540E\u4E0D\u80FD\u518D\u6269\u5BB9\u3002\u4E3A\u4E86\u63D0\u5347 hash \u7684\u8BA1\u7B97\u6027\u80FD\uFF0C\u4F1A\u4FDD\u8BC1\u6570\u7EC4\u7684\u5927\u5C0F\u59CB\u7EC8\u662F 2 \u7684\u6574\u6570\u6B21\u65B9\u3002\u4F8B\u5982\u8BBE\u7F6E concurrentyLevel = 9\uFF0C\u5728\u6784\u9020\u51FD\u6570\u91CC\u9762\u4F1A\u627E\u5230\u6BD4 9 \u5927\u4E14\u8DDD 9 \u6700\u8FD1\u7684 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u4E5F\u5C31\u662F ssize = 16\u3002\u5BF9\u5E94 segmentShift\u3001segmentMask \u4E24\u4E2A\u53D8\u91CF\uFF0C\u662F\u4E3A\u4E86\u65B9\u4FBF\u8BA1\u7B97 hash \u4F7F\u7528\u7684\u3002</p><p>\u521D\u59CB\u7684\u65F6\u5019\uFF0C\u5982\u679C\u4E0D\u6307\u5B9A\u4EFB\u4F55\u53C2\u6570\uFF0C\u5C31\u4F1A\u4F7F\u7528\u9ED8\u8BA4\u503C\uFF0C\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u9ED8\u8BA4\u7684 Segment \u6570\u7EC4\u5927\u5C0F\u662F 16\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div></li></ol><p>public ConcurrentHashMap() { this(DEFAULT_INITIAL_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_CONCURRENCY_LEVEL); }</p><p>static final int DEFAULT_INITIAL_CAPACITY = 16; static final float DEFAULT_LOAD_FACTOR = 0.75f; static final int DEFAULT_CONCURRENCY_LEVEL = 16;</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
\u7B2C 1 \u4E2A\u53C2\u6570\uFF0CinitialCapacity \u662F\u6574\u4E2A ConcurrentHashMap \u7684\u521D\u59CB\u5927\u5C0F\u3002\u7528 initialCapacity \u9664\u4EE5 ssize\uFF0C\u662F\u6BCF\u4E2A Segment \u7684\u521D\u59CB\u5927\u5C0F\u3002\u8FD9\u91CC\u4E5F\u4F1A\u4FDD\u8BC1 Segment \u91CC\u9762 HashEntry[] \u6570\u7EC4\u7684\u5927\u5C0F\u662F 2 \u7684\u6574\u6570\u6B21\u65B9\u3002

\u7B2C 2 \u4E2A\u53C2\u6570\uFF0CloadFactor \u5373\u8D1F\u8F7D\u56E0\u5B50\uFF0C\u4F20\u7ED9\u4E86 Segment \u5185\u90E8\u3002\u5F53\u6BCF\u4E2A Segment \u7684\u5143\u7D20\u4E2A\u6570\u8FBE\u5230\u4E00\u5B9A\u9608\u503C\uFF0C\u8FDB\u884C rehash\u3002\u5982\u56FE5-9 \u6240\u793A\uFF0CSegment \u7684\u4E2A\u6570\u4E0D\u80FD\u6269\u5BB9\uFF0C\u4F46\u6BCF\u4E2A Segment \u7684\u5185\u90E8\u53EF\u4EE5\u6269\u5BB9\u3002

2. put(..) \u51FD\u6570\u5206\u6790

\`\`\`java
public V put(K key, V value) {
    Segment&lt;K,V&gt; s;
    if (value == null)
        throw new NullPointerException();
    // \u628A key \u6620\u5C04\u5230\u4E00\u4E2A 32 \u4F4D\u6574\u6570
    int hash = hash(key);
    // \u518D\u628A\u8BE5\u6574\u6570\u6620\u5C04\u5230\u7B2C j \u4E2A Segment
    int j = (hash &gt;&gt;&gt; segmentShift) &amp; segmentMask;
    if ((s = (Segment&lt;K,V&gt;)UNSAFE.getObject          
         // Segment[j] == null
         (segments, (j &lt;&lt; SSHIFT) + SBASE)) == null) 
        s = ensureSegment(j);
    //  \u627E\u5230\u5BF9\u5E94\u7684 Segment[j]\uFF0C\u8C03\u7528\u5176 put
    return s.put(key, hash, value, false);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E Segment \u7684\u4E2A\u6570\u662F 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u5047\u8BBE\u5176\u4E3A 16\uFF0C\u5219 segmentShift = 32 - sshift = 32 - 4 = 28\uFF0CsegmentMask = ssize - 1 = 16 - 1 = 15\uFF08\u53C2\u89C1\u4E0A\u9762\u7684\u6784\u9020\u51FD\u6570\uFF09\u3002</p><p>hash \u503C\u662F\u4E00\u4E2A 32 \u4F4D\u7684\u6574\u6570\uFF0Cint j = ( hash &gt;&gt;&gt; segmentShift) &amp; segmentMask \u8FD9\u884C\u4EE3\u7801\u5C31\u662F\u628A hash \u503C\u53F3\u79FB 28 \u4F4D\uFF0C\u518D\u548C 15 \u8FDB\u884C\u4E0E\u64CD\u4F5C\uFF0C\u8868\u8FBE\u7684\u610F\u601D\u662F\uFF1A\u4EE5 hash \u503C\u7684\u6700\u9AD8 4 \u4F4D\u4F5C\u4E3A\u5BF9\u5E94\u7684 Segment \u6570\u7EC4\u4E0B\u6807 j\u3002</p><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u6CA1\u6709\u52A0\u9501\u64CD\u4F5C\uFF0C\u56E0\u4E3A\u9501\u662F\u52A0\u5728 s.put \u5185\u90E8\u7684\uFF0C\u4E5F\u5C31\u662F\u5206\u6BB5\u52A0\u9501\u3002\u53E6\u5916\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u53EF\u80FD\u540C\u65F6\u8C03\u7528 ensureSegment \u5BF9 Segment[j] \u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u5728\u8FD9\u4E2A\u51FD\u6570\u7684\u5185\u90E8\u8981\u907F\u514D\u91CD\u590D\u521D\u59CB\u5316\uFF0C\u4E0B\u9762\u8BE6\u7EC6\u5206\u6790\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">ensureSegment</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> ss <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>segments<span class="token punctuation">;</span>
    <span class="token comment">// \u4E0B\u6807 k \u5BF9\u5E94\u7684\u5185\u5B58\u5730\u5740\u504F\u79FB\u91CF\u4E3A u</span>
    <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;&lt;</span> SSHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> SBASE<span class="token punctuation">;</span> 
    <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> seg<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>seg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> UNSAFE<span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>ss<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4EE5 ss[0] \u7684\u53C2\u6570\u4E3A\u539F\u578B</span>
        <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> proto <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
        <span class="token keyword">int</span> cap <span class="token operator">=</span> proto<span class="token punctuation">.</span>table<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">float</span> lf <span class="token operator">=</span> proto<span class="token punctuation">.</span>loadFactor<span class="token punctuation">;</span>
        <span class="token keyword">int</span> threshold <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>cap <span class="token operator">*</span> lf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">HashEntry</span><span class="token punctuation">[</span>cap<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>seg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> UNSAFE<span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>ss<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>lf<span class="token punctuation">,</span> threshold<span class="token punctuation">,</span> tab<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>seg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> UNSAFE<span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>ss<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>ss<span class="token punctuation">,</span> u<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> seg <span class="token operator">=</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> seg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u4E2A\u51FD\u6570\u7684\u76EE\u7684\u662F\u5F53 segments[k] = null \u65F6\u5BF9\u5176\u8FDB\u884C\u521D\u59CB\u5316\u3002\u7531\u4E8E\u591A\u4E2A\u7EBF\u7A0B\u53EF\u80FD\u540C\u65F6\u8C03\u7528\u8BE5\u51FD\u6570\uFF0CUNSAFE.getObjectVolatile(ss, u) == null \u51FA\u73B0\u4E86 3 \u6B21\uFF0C\u5728 3 \u4E2A\u4E0D\u540C\u7684\u65F6\u95F4\u70B9\u91CD\u590D\u68C0\u67E5 segments[k] == null\u3002\u4F46\u5373\u4F7F\u5982\u6B64\uFF0C\u4E5F\u4E0D\u80FD\u5B8C\u5168\u4FDD\u8BC1\u907F\u514D\u91CD\u590D\u521D\u59CB\u5316\uFF0C\u6240\u4EE5\u6700\u540E\u9700\u8981\u6267\u884C\u4E00\u4E2A CAS \u64CD\u4F5C UNSAFE.compareAndSwapObject(ss, u, null, seg = s) \u4FDD\u8BC1\u53EA\u88AB\u521D\u59CB\u5316\u4E00\u6B21\u3002\u4FDD\u9669\u8D77\u89C1\uFF0C\u628A\u8FD9\u6B21 CAS \u64CD\u4F5C\u653E\u5728\u4E00\u4E2A while \u5FAA\u73AF\u91CC\uFF0C\u4FDD\u8BC1\u51FA\u6765\u7684\u65F6\u5019 segments[k] \u4E00\u5B9A\u4E0D\u4E3A\u7A7A\u3002</p><p>segments[j] \u88AB\u6210\u529F\u5730\u521D\u59CB\u5316\u4E86\uFF0C\u4E0B\u9762\u8FDB\u5165\u5185\u90E8\uFF0C\u4E86\u89E3\u5982\u4F55\u628A\u5143\u7D20\u653E\u8FDB\u53BB\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ReentrantLock</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">scanAndLockForPut</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5F53\u6267\u884C\u5230\u8FD9\u4E2A\u5730\u65B9\u65F6\u4E00\u5B9A\u62FF\u5230\u9501\u4E86</span>
        <span class="token class-name">V</span> oldValue<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span>
            <span class="token comment">// \u56E0\u4E3A tab.length \u4E3A 2 \u5230\u6574\u6570\u6B21\u65B9\uFF0C\u8FD9\u4E2A\u5730\u65B9\u7B49\u4EF7\u4E8E hash \u5BF9 tab.length \u53D6\u6A21</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>tab<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">;</span>
            <span class="token comment">// \u5B9A\u4F4D\u5230\u7B2C index \u4E2A HashEntry</span>
            <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first <span class="token operator">=</span> <span class="token function">entryAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> first<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">K</span> k<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                            <span class="token comment">// \u4FEE\u6539\u6B21\u6570\u7D2F\u52A0</span>
                            <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token comment">// key \u76F8\u7B49\u6216\u5728 hash \u503C\u76F8\u7B49\uFF0C\u4E0D\u4F1A\u91CD\u590D\u63D2\u5165\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u904D\u5386\u94FE\u8868</span>
                    e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5DF2\u7ECF\u904D\u5386\u5230\u94FE\u8868\u5C3E\u90E8\uFF0C\u6CA1\u6709\u53D1\u73B0\u91CD\u590D\u5143\u7D20</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5728\u4E0A\u9762\u7684 scanAndLockForPut \u91CC\u9762\uFF0C\u5DF2\u7ECF\u5EFA\u597D\u4E86\u8282\u70B9</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                        <span class="token comment">// \u628A node \u63D2\u5165\u94FE\u8868\u5934\u90E8</span>
                        node<span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        <span class="token comment">// \u65B0\u5EFA node \u63D2\u5165\u94FE\u8868\u5934\u90E8</span>
                        node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> c <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> threshold <span class="token operator">&amp;&amp;</span> tab<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
                        <span class="token comment">// \u8D85\u51FA\u9608\u503C\uFF0C\u6269\u5BB9</span>
                        <span class="token function">rehash</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        <span class="token comment">// \u628A node \u8D4B\u503C\u7ED9 tab[index]</span>
                        <span class="token function">setEntryAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
                    count <span class="token operator">=</span> c<span class="token punctuation">;</span>
                    oldValue <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u6709\u51E0\u70B9\u8BF4\u660E\uFF1A</p><p>\uFF081\uFF09\u5728 Segment \u91CC\u9762\u6709 2 \u4E2A count \u53D8\u91CF\uFF0Ccount \u4E0E modCount\uFF0C\u524D\u8005\u8868\u793A\u5143\u7D20\u7684\u4E2A\u6570\uFF0C\u540E\u8005\u8868\u793A\u4FEE\u6539\u7684\u6B21\u6570\u3002\u5F53\u5F85 put \u7684\u5143\u7D20\u3001key \u503C\u6216\u8005 hash \u503C\u548C\u94FE\u8868\u4E2D\u67D0\u4E2A\u8282\u70B9\u76F8\u7B49\u65F6\uFF0C\u4E0D\u4F1A\u91CD\u590D\u63D2\u5165\u65B0\u8282\u70B9\u3002\u6B64\u65F6\u518D\u8FDB\u4E00\u6B65\u5224\u65AD\uFF0C\u5982\u679C onlyIfAbsent = true\uFF0C\u5219\u4EC0\u4E48\u90FD\u4E0D\u505A\uFF1B\u5982\u679C onlyIfAbsent = false\uFF0C\u5219\u4FEE\u6539\u8BE5\u8282\u70B9\u7684 value\uFF0C\u540C\u65F6 modCount \u7D2F\u52A0\u4E00\u6B21\u3002</p><p>\uFF082\uFF09\u8FDB\u5165\u4E0A\u9762\u7684 else \u5206\u652F\uFF0C\u8BF4\u660E\u5DF2\u7ECF\u904D\u5386\u5230\u4E86\u94FE\u8868\u5C3E\u90E8\uFF0C\u5E76\u4E14\u6CA1\u6709\u53D1\u73B0\u4E0E key \u503C\u6216\u8005 hash \u503C\u76F8\u7B49\u7684\u8282\u70B9\uFF0C\u6B64\u65F6\u5728\u94FE\u8868\u5934\u90E8\u63D2\u5165 1 \u4E2A\u65B0\u8282\u70B9\uFF0C\u5E76\u628A table[index] \u8D4B\u503C\u4E3A\u8BE5\u8282\u70B9\u3002\u56E0\u4E3A first \u5C31\u662F\u94FE\u8868\u5934\u90E8\uFF0C\u6240\u4EE5\u76F4\u63A5\u628A node \u7684 next \u6307\u9488\u6307\u5411 first \u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\uFF083\uFF09\u5728\u51FD\u6570\u7684\u5F00\u59CB\uFF0C\u52A0\u9501\u7684\u65F6\u5019\uFF0C\u8FDB\u884C\u4E86\u4E00\u6B21\u4F18\u5316\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">scanAndLockForPut</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C tryLock() \u6210\u529F\uFF0C\u5373\u62FF\u5230\u9501\uFF0C\u5219\u8FDB\u5165\u4E0B\u9762\u7684\u4EE3\u7801\uFF1B\u5982\u679C tryLock() \u4E0D\u6210\u529F\uFF0C\u4E5F\u4E0D\u80FD\u95F2\u7740\uFF0C\u90A3\u8FDB\u5165 scanAndLockForPut(key, hash, value) \u505A\u4EC0\u4E48\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">scanAndLockForPut</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first <span class="token operator">=</span> <span class="token function">entryForHash</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> retries <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span>retries <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65B0\u8282\u70B9</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
                    node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                retries <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
                retries <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u81EA\u65CB</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>retries <span class="token operator">&gt;</span> MAX_SCAN_RETRIES<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u963B\u585E</span>
            <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>retries <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
                 <span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token function">entryForHash</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e <span class="token operator">=</span> first <span class="token operator">=</span> f<span class="token punctuation">;</span>  
            retries <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u51FD\u6570\u770B\u4F3C\u590D\u6742\uFF0C\u5B9E\u5219\u53EA\u662F\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A\u4E00\u662F\u62FF\u4E0D\u5230\u9501\uFF0C\u4E0D\u7ACB\u5373\u963B\u585E\uFF0C\u800C\u662F\u5148\u81EA\u65CB\uFF0C\u82E5\u81EA\u65CB\u5230\u4E00\u5B9A\u6B21\u6570\u4ECD\u672A\u62FF\u5230\u9501\uFF0C\u518D\u8C03\u7528 lock() \u963B\u585E\uFF1B\u4E8C\u662F\u5728\u81EA\u65CB\u7684\u8FC7\u7A0B\u4E2D\u904D\u5386\u4E86\u94FE\u8868\uFF0C\u82E5\u53D1\u73B0\u6CA1\u6709\u91CD\u590D\u7684\u8282\u70B9\uFF0C\u5219\u63D0\u524D\u65B0\u5EFA\u4E00\u4E2A\u8282\u70B9\uFF0C\u4E3A\u540E\u9762\u518D\u63D2\u5165\u8282\u7701\u65F6\u95F4\u3002</p><ol start="3"><li><p>\u6269\u5BB9</p><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u63D0\u5230\u4E86\uFF0C\u8D85\u8FC7\u4E00\u5B9A\u7684\u9608\u503C\u540E\uFF0CSegment \u5185\u90E8\u4F1A\u8FDB\u884C\u6269\u5BB9\uFF0C\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">rehash</span><span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTable <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> oldTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u5728\u65E7\u5BB9\u91CF\u7684\u57FA\u7840\u4E0A\u6269\u5BB9\u4E8C\u500D</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    threshold <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>newCapacity <span class="token operator">*</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable <span class="token operator">=</span>
        <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">HashEntry</span><span class="token punctuation">[</span>newCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sizeMask <span class="token operator">=</span> newCapacity <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> oldCapacity <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> oldTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u4E00\u4E2A\u8282\u70B9\u4E4B\u524D\u5728\u7B2C i \u4E2A\u4F4D\u7F6E\uFF0C\u90A3\u4E48\u5728\u65B0\u7684 hash \u8868\u4E2D\uFF0C\u4E00\u5B9A\u5904\u4E8E i \u6216\u8005 i + oldCapacity \u4F4D\u7F6E</span>
            <span class="token keyword">int</span> idx <span class="token operator">=</span> e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> sizeMask<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>    
                newTable<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span> 
                <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> lastRun <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token keyword">int</span> lastIdx <span class="token operator">=</span> idx<span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> last <span class="token operator">=</span> next<span class="token punctuation">;</span>
                     last <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                     last <span class="token operator">=</span> last<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">int</span> k <span class="token operator">=</span> last<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> sizeMask<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">!=</span> lastIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u5BFB\u627E\u94FE\u8868\u4E2D\u6700\u540E\u4E00\u4E2A hash \u503C\u4E0D\u7B49\u4E8E lastIdx \u7684\u5143\u7D20</span>
                        lastIdx <span class="token operator">=</span> k<span class="token punctuation">;</span>
                        lastRun <span class="token operator">=</span> last<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5173\u952E\u7684\u4E00\u884C\uFF1A\u628A\u5728 lastRun \u4E4B\u540E\u7684\u94FE\u8868\u5143\u7D20\u4E4B\u95F4\u94FE\u63A5\u5230\u65B0 hash \u8868\u4E2D\u7684 lastIdx \u4F4D\u7F6E\uFF0C</span>
                <span class="token comment">// \u5728 lastRun \u4E4B\u524D\u7684\u6240\u6709\u94FE\u8868\u5143\u7D20\uFF0C\u9700\u8981\u5728\u65B0\u7684\u4F4D\u7F6E\u9010\u4E2A\u62F7\u8D1D</span>
                newTable<span class="token punctuation">[</span>lastIdx<span class="token punctuation">]</span> <span class="token operator">=</span> lastRun<span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> e<span class="token punctuation">;</span> p <span class="token operator">!=</span> lastRun<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">V</span> v <span class="token operator">=</span> p<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                    <span class="token keyword">int</span> h <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
                    <span class="token keyword">int</span> k <span class="token operator">=</span> h <span class="token operator">&amp;</span> sizeMask<span class="token punctuation">;</span>
                    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> n <span class="token operator">=</span> newTable<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    newTable<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> p<span class="token punctuation">.</span>key<span class="token punctuation">,</span> v<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u628A\u65B0\u8282\u70B9\u52A0\u5165\u65B0\u7684 Hash \u8868</span>
    <span class="token keyword">int</span> nodeIndex <span class="token operator">=</span> node<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> sizeMask<span class="token punctuation">;</span> 
    node<span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>newTable<span class="token punctuation">[</span>nodeIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    newTable<span class="token punctuation">[</span>nodeIndex<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">;</span>
    table <span class="token operator">=</span> newTable<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u8BE5\u6269\u5BB9\u51FD\u6570\uFF0C\u6709\u51E0\u70B9\u9700\u8981\u8BF4\u660E\uFF1A</p><p>\uFF081\uFF09\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u4E5F\u5C31\u662F\u5C06\u8981\u52A0\u5165\u7684\u6700\u65B0\u8282\u70B9\u3002\u5728\u6269\u5BB9\u5B8C\u6210\u4E4B\u540E\uFF0C\u628A\u8BE5\u8282\u70B9\u52A0\u5165\u65B0\u7684 Hash \u8868\u3002</p><p>\uFF082\uFF09\u6574\u4E2A\u6570\u7EC4\u7684\u957F\u5EA6\u662F 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u6BCF\u6B21\u6309\u4E8C\u500D\u6269\u5BB9\uFF0C\u800C hash \u51FD\u6570\u5C31\u662F\u5BF9\u6570\u7EC4\u957F\u5EA6\u53D6\u6A21\uFF0C\u5373 node.hash &amp; sizeMask\u3002\u56E0\u6B64\uFF0C\u5982\u679C\u5143\u7D20\u4E4B\u524D\u5904\u4E8E\u7B2C i \u4E2A\u4F4D\u7F6E\uFF0C\u5F53\u518D\u6B21 hash \u65F6\uFF0C\u5FC5\u7136\u5904\u4E8E\u7B2C i \u4E2A\u6216\u8005\u7B2C i + oldCapacity \u4E2A\u4F4D\u7F6E\u3002</p><p>\uFF083\uFF09\u4E0A\u9762\u7684\u6269\u5BB9\u8FDB\u884C\u4E86\u4E00\u6B21\u4F18\u5316\uFF0C\u5E76\u6CA1\u6709\u5BF9\u5143\u7D20\u4F9D\u6B21\u62F7\u8D1D\uFF0C\u800C\u662F\u5148\u627E\u5230 lastRun \u4F4D\u7F6E\uFF0C\u4E5F\u5C31\u662F for \u5FAA\u73AF\u3002lastRun \u5230\u94FE\u8868\u672B\u5C3E\u7684\u6240\u6709\u5143\u7D20\uFF0C\u5176 hash \u503C\u6CA1\u6709\u6539\u53D8\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981\u4F9D\u6B21\u91CD\u65B0\u62F7\u8D1D\uFF0C\u53EA\u9700\u628A\u8FD9\u90E8\u5206\u94FE\u8868\u94FE\u63A5\u5230\u65B0\u94FE\u8868\u6240\u5BF9\u5E94\u7684\u4F4D\u7F6E\u5C31\u53EF\u4EE5\uFF0C\u4E5F\u5C31\u662F newTable[lastIdx] = lastRun\u3002lastRun \u4E4B\u524D\u7684\u5143\u7D20\u5219\u9700\u8981\u4F9D\u6B21\u62F7\u8D1D\u3002</p><p>\u56E0\u6B64\uFF0C\u5373\u4F7F\u628A\u4E00\u6BB5 for \u5FAA\u73AF\u53BB\u6389\uFF0C\u6574\u4E2A\u7A0B\u5E8F\u7684\u903B\u8F91\u4ECD\u7136\u662F\u6B63\u786E\u7684\u3002</p></li><li><p>get \u5B9E\u73B0\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> s<span class="token punctuation">;</span>
    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> segmentShift<span class="token punctuation">)</span> <span class="token operator">&amp;</span> segmentMask<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> SSHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> SBASE<span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21 hash</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> UNSAFE<span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>segments<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> s<span class="token punctuation">.</span>table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> 
             <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> UNSAFE<span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> TSHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> TBASE<span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token comment">// \u7B2C\u4E8C\u6B21 hash</span>
             e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">K</span> k<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> h <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>\u6574\u4E2A get \u8FC7\u7A0B\u4E5F\u5C31\u662F\u4E24\u6B21 hash\uFF1A</p><p>\u7B2C\u4E00\u6B21 hash\uFF0C\u51FD\u6570\u4E3A (h &gt;&gt;&gt; segmentShift) &amp; segmentMask\uFF0C\u8BA1\u7B97\u51FA\u6240\u5728\u7684 Segment\uFF1B</p><p>\u7B2C\u4E8C\u6B21 hash\uFF0C\u51FD\u6570\u4E3A h &amp; (tab.length - 1)\uFF0C\u5373 h \u5BF9\u6570\u7EC4\u957F\u5EA6\u53D6\u6A21\uFF0C\u627E\u5230 Segment \u91CC\u9762\u5BF9\u5E94\u7684 HashEntry \u6570\u7EC4\u4E0B\u6807\uFF0C\u7136\u540E\u904D\u5386\u8BE5\u4F4D\u7F6E\u7684\u94FE\u8868\u3002</p><p>\u6574\u4E2A\u8BFB\u7684\u8FC7\u7A0B\u5B8C\u5168\u6CA1\u6709\u52A0\u9501\uFF0C\u800C\u662F\u4F7F\u7528\u4E86 UNSAFE.getObjectVolatile \u51FD\u6570\u3002</p><h3 id="_5-5-2-jdk-8-\u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_5-5-2-jdk-8-\u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F" aria-hidden="true">#</a> 5.5.2 JDK 8 \u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F</h3><p>JDK 8 \u7684\u5B9E\u73B0\u6709\u5F88\u5927\u53D8\u5316\uFF0C\u9996\u5148\u662F\u6CA1\u6709\u4E86\u5206\u6BB5\u9501\uFF0C\u6240\u6709\u6570\u636E\u90FD\u653E\u5728\u4E00\u4E2A\u5927\u7684 HashMap \u4E2D\uFF1B\u5176\u6B21\u662F\u5F15\u5165\u4E86\u7EA2\u9ED1\u6811\uFF0C\u5176\u539F\u7406\u5982\u56FE5-10 \u6240\u793A\u3002</p><img src="`+d+`" alt="\u56FE5-10" style="zoom:50%;"><p>\u56FE5-10 JDK 8 \u4E2D ConcurrentHashMap \u5B9E\u73B0\u539F\u7406\u793A\u610F\u56FE</p><p>\u5982\u679C\u5934\u8282\u70B9\u662F Node \u7C7B\u578B\uFF0C\u5219\u5C3E\u968F\u5B83\u7684\u5C31\u662F\u4E00\u4E2A\u666E\u901A\u7684\u94FE\u8868\uFF1B\u5982\u679C\u5934\u8282\u70B9\u662F TreeNode \u7C7B\u578B\uFF0C\u5B83\u7684\u540E\u9762\u5C31\u662F\u4E00\u9897\u7EA2\u9ED1\u6811\uFF0CTreeNode \u662F Node \u7684\u5B50\u7C7B\u3002</p><p>\u94FE\u8868\u548C\u7EA2\u9ED1\u6811\u4E4B\u95F4\u53EF\u4EE5\u76F8\u4E92\u8F6C\u6362\uFF1A\u521D\u59CB\u7684\u65F6\u5019\u662F\u94FE\u8868\uFF0C\u5F53\u94FE\u8868\u4E2D\u7684\u5143\u7D20\u8D85\u8FC7\u67D0\u4E2A\u9608\u503C\u65F6\uFF0C\u628A\u94FE\u8868\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811\uFF1B\u53CD\u4E4B\uFF0C\u5F53\u7EA2\u9ED1\u6811\u4E2D\u7684\u5143\u7D20\u4E2A\u6570\u5C0F\u4E8E\u67D0\u4E2A\u9608\u503C\u65F6\uFF0C\u518D\u8F6C\u6362\u4E3A\u94FE\u8868\u3002</p><p>\u90A3\u4E3A\u4EC0\u4E48 JDK 8 \u8981\u505A\u8FD9\u79CD\u6539\u53D8\u5462\uFF1F\u5728 JDK 7 \u4E2D\u7684\u5206\u6BB5\u9501\uFF0C\u6709\u4E09\u4E2A\u597D\u5904\uFF1A</p><ol><li><p>\u51CF\u5C11 Hash \u51B2\u7A81\uFF0C\u907F\u514D\u4E00\u4E2A\u69FD\u91CC\u6709\u592A\u591A\u5143\u7D20\u3002</p></li><li><p>\u63D0\u9AD8\u8BFB\u548C\u5199\u7684\u5E76\u53D1\u5EA6\u3002\u6BB5\u4E0E\u6BB5\u4E4B\u95F4\u76F8\u4E92\u72EC\u7ACB\u3002</p></li><li><p>\u63D0\u4F9B\u6269\u5BB9\u7684\u5E76\u53D1\u5EA6\u3002\u6269\u5BB9\u7684\u65F6\u5019\uFF0C\u4E0D\u662F\u6574\u4E2A ConcurrentHashMap \u4E00\u8D77\u6269\u5BB9\uFF0C\u800C\u662F\u6BCF\u4E2A Segment \u72EC\u7ACB\u6269\u5BB9\u3002</p></li></ol><p>\u9488\u5BF9\u8FD9\u4E09\u4E2A\u597D\u5904\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u5728 JDK 8 \u4E2D\u76F8\u5E94\u7684\u5904\u7406\u65B9\u5F0F\uFF1A</p><ol><li><p>\u4F7F\u7528\u7EA2\u9ED1\u6811\uFF0C\u5F53\u4E00\u4E2A\u69FD\u91CC\u6709\u5F88\u591A\u5143\u7D20\u65F6\uFF0C\u5176\u67E5\u8BE2\u548C\u66F4\u65B0\u901F\u5EA6\u4F1A\u6BD4\u94FE\u8868\u5FEB\u5F88\u591A\uFF0CHash \u51B2\u7A81\u7684\u95EE\u9898\u7531\u6B64\u5F97\u5230\u8F83\u597D\u7684\u89E3\u51B3\u3002</p></li><li><p>\u52A0\u9501\u7684\u7C92\u5EA6\uFF0C\u5E76\u975E\u6574\u4E2A ConcurrentHashMap\uFF0C\u800C\u662F\u5BF9\u6BCF\u4E2A\u5934\u8282\u70B9\u5206\u522B\u52A0\u9501\uFF0C\u5373\u5E76\u53D1\u5EA6\uFF0C\u5C31\u662F Node \u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u521D\u59CB\u957F\u5EA6\u4E3A 16\uFF0C\u548C\u5728 JDK 7 \u4E2D\u521D\u59CB Segment \u7684\u4E2A\u6570\u76F8\u540C\u3002</p></li><li><p>\u5E76\u53D1\u6269\u5BB9\uFF0C\u8FD9\u662F\u96BE\u5EA6\u6700\u5927\u7684\u3002\u5728 JDK 7 \u4E2D\uFF0C\u4E00\u65E6 Segment \u7684\u4E2A\u6570\u5728\u521D\u59CB\u5316\u7684\u65F6\u5019\u786E\u7ACB\uFF0C\u4E0D\u80FD\u518D\u66F4\u6539\uFF0C\u5E76\u53D1\u5EA6\u88AB\u56FA\u5B9A\u3002\u4E4B\u540E\u53EA\u662F\u5728\u6BCF\u4E2A Segment \u5185\u90E8\u6269\u5BB9\uFF0C\u8FD9\u610F\u5473\u7740\u6BCF\u4E2A Segment \u72EC\u7ACB\u6269\u5BB9\uFF0C\u4E92\u4E0D\u5F71\u54CD\uFF0C\u4E0D\u5B58\u5728\u5E76\u53D1\u6269\u5BB9\u7684\u95EE\u9898\u3002\u4F46\u5728 JDK 8 \u4E2D\uFF0C\u76F8\u5F53\u4E8E\u53EA\u6709 1 \u4E2A Segment\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8981\u6269\u5BB9 Node \u6570\u7EC4\u7684\u65F6\u5019\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u8FD8\u8981\u8BFB\u5199\uFF0C\u56E0\u6B64\u5904\u7406\u8FC7\u7A0B\u5F88\u590D\u6742\uFF0C\u540E\u9762\u4F1A\u8BE6\u7EC6\u5206\u6790\u3002</p></li></ol><p>\u7531\u4E0A\u8FF0\u5BF9\u6BD4\u53EF\u4EE5\u603B\u7ED3\u51FA\u6765\uFF1AJDK 8 \u7684\u5B9E\u73B0\u4E00\u65B9\u9762\u964D\u4F4E\u4E86 Hash \u51B2\u7A81\uFF0C\u53E6\u4E00\u65B9\u9762\u4E5F\u63D0\u5347\u4E86\u5E76\u53D1\u5EA6\u3002</p><p>\u4E0B\u9762\u4ECE\u6784\u9020\u51FD\u6570\u5F00\u59CB\uFF0C\u4E00\u6B65\u6B65\u6DF1\u5165\u5206\u6790\u5176\u5B9E\u73B0\u8FC7\u7A0B\u3002</p><ol><li><p>\u6784\u9020\u51FD\u6570\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">,</span> <span class="token keyword">int</span> concurrencyLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>loadFactor <span class="token operator">&gt;</span> <span class="token number">0.0f</span><span class="token punctuation">)</span> <span class="token operator">||</span> initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> concurrencyLevel <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> concurrencyLevel<span class="token punctuation">)</span>    
            initialCapacity <span class="token operator">=</span> concurrencyLevel<span class="token punctuation">;</span>    
        <span class="token keyword">long</span> size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> initialCapacity <span class="token operator">/</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cap <span class="token operator">=</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token operator">?</span> MAXIMUM_CAPACITY <span class="token operator">:</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sizeCtl <span class="token operator">=</span> cap<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u53D8\u91CF cap \u5C31\u662F Node \u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u4FDD\u6301\u4E3A 2 \u7684\u6574\u6570\u6B21\u65B9\u3002tableSizeFor(..) \u51FD\u6570\u662F\u6839\u636E\u4F20\u5165\u7684\u521D\u59CB\u5BB9\u91CF\uFF0C\u8BA1\u7B97\u51FA\u4E00\u4E2A\u5408\u9002\u7684\u6570\u7EC4\u957F\u5EA6\u3002\u5177\u4F53\u800C\u8A00\uFF1A1.5 \u500D\u7684\u521D\u59CB\u5BB9\u91CF + 1\uFF0C\u518D\u5F80\u4E0A\u53D6\u6700\u63A5\u8FD1\u7684 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u4F5C\u4E3A\u6570\u7EC4\u957F\u5EA6 cap \u7684\u521D\u59CB\u503C\u3002</p><p>\u8FD9\u91CC\u7684 sizeCtl\uFF0C\u5176\u542B\u4E49\u662F\u7528\u4E8E\u63A7\u5236\u5728\u521D\u59CB\u5316\u6216\u8005\u5E76\u53D1\u6269\u5BB9\u65F6\u5019\u7684\u7EBF\u7A0B\u6570\uFF0C\u53EA\u4E0D\u8FC7\u5176\u521D\u59CB\u503C\u8BBE\u7F6E\u6210 cap\u3002</p></li><li><p>\u521D\u59CB\u5316</p><p>\u5728\u4E0A\u9762\u7684\u6784\u9020\u51FD\u6570\u91CC\u53EA\u8BA1\u7B97\u4E86\u6570\u7EC4\u7684\u521D\u59CB\u5927\u5C0F\uFF0C\u5E76\u6CA1\u6709\u5BF9\u6570\u7EC4\u8FDB\u884C\u521D\u59CB\u5316\u3002\u5F53\u591A\u4E2A\u7EBF\u7A0B\u90FD\u5F80\u91CC\u9762\u653E\u5165\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u518D\u8FDB\u884C\u521D\u59CB\u5316\u3002\u8FD9\u5C31\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\uFF1A\u591A\u4E2A\u7EBF\u7A0B\u91CD\u590D\u521D\u59CB\u5316\u3002\u4E0B\u9762\u770B\u4E00\u4E0B\u662F\u5982\u4F55\u5904\u7406\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">initTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token keyword">int</span> sc<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> tab<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token comment">// sizeCtl = -1\uFF0C\u81EA\u65CB\u7B49\u5F85</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u5173\u952E\uFF1A\u628A sizeCtl \u8BBE\u4E3A -1</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> tab<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token punctuation">(</span>sc <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> sc <span class="token operator">:</span> DEFAULT_CAPACITY<span class="token punctuation">;</span>
                    <span class="token comment">// \u521D\u59CB\u5316</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    table <span class="token operator">=</span> tab <span class="token operator">=</span> nt<span class="token punctuation">;</span>
                    <span class="token comment">// sizeCtl \u5E76\u975E\u8868\u793A\u6570\u7EC4\u957F\u5EA6\uFF0C\u6240\u4EE5\u521D\u59CB\u5316\u6210\u529F\u4E4B\u540E\uFF0C\u5C31\u4E0D\u518D\u7B49\u4E8E\u6570\u7EC4\u957F\u5EA6\uFF0C</span>
                    <span class="token comment">// \u800C\u662F n - (n &gt;&gt;&gt; 2) == 0.75n\uFF0C\u8868\u793A\u4E0B\u4E00\u6B21\u6269\u5BB9\u7684\u9608\u503C</span>
                    sc <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u628A sizeCtl \u518D\u8BBE\u56DE\u53BB</span>
                sizeCtl <span class="token operator">=</span> sc<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> tab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u7684\u7ADE\u4E89\u662F\u901A\u8FC7\u5BF9 sizeCtl \u8FDB\u884C CAS \u64CD\u4F5C\u5B9E\u73B0\u7684\u3002\u5982\u679C\u67D0\u4E2A\u7EBF\u7A0B\u6210\u529F\u5730\u628A sizeCtl \u8BBE\u7F6E\u4E3A -1\uFF0C\u5B83\u5C31\u62E5\u6709\u4E86\u521D\u59CB\u5316\u7684\u6743\u5229\uFF0C\u8FDB\u5165\u521D\u59CB\u5316\u7684\u4EE3\u7801\u6A21\u5757\uFF0C\u7B49\u5230\u521D\u59CB\u5316\u5B8C\u6210\uFF0C\u518D\u628A sizeCtl \u8BBE\u7F6E\u56DE\u53BB\uFF1B\u5176\u4ED6\u7EBF\u7A0B\u5219\u4E00\u76F4\u6267\u884C while \u5FAA\u73AF\uFF0C\u81EA\u65CB\u7B49\u5F85\uFF0C\u76F4\u5230\u6570\u7EC4\u4E0D\u4E3A null\uFF0C\u5373\u5F53\u521D\u59CB\u5316\u7ED3\u675F\u65F6\uFF0C\u9000\u51FA\u6574\u4E2A\u51FD\u6570\u3002</p><p>\u56E0\u4E3A\u521D\u59CB\u5316\u7684\u5DE5\u4F5C\u91CF\u5F88\u5C0F\uFF0C\u6240\u4EE5\u6B64\u5904\u9009\u62E9\u7684\u7B56\u7565\u662F\u8BA9\u5176\u4ED6\u7EBF\u7A0B\u4E00\u76F4\u7B49\u5F85\uFF0C\u800C\u6CA1\u6709\u5E2E\u52A9\u5176\u521D\u59CB\u5316\u3002</p></li><li><p>put(..) \u5B9E\u73B0\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">spread</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fh<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5206\u652F 1\uFF1A\u6574\u4E2A\u6570\u7EC4\u521D\u59CB\u5316</span>
            tab <span class="token operator">=</span> <span class="token function">initTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5206\u652F 2\uFF1A\u7B2C [i] \u4E2A\u5143\u7D20\u521D\u59CB\u5316</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>                    
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fh <span class="token operator">=</span> f<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> MOVED<span class="token punctuation">)</span>
            <span class="token comment">// \u5206\u652F 3\uFF1A\u6269\u5BB9</span>
            tab <span class="token operator">=</span> <span class="token function">helpTransfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5206\u652F 4\uFF1A\u653E\u5165\u5143\u7D20</span>
            <span class="token class-name">V</span> oldVal <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5173\u952E\u7684\u4E00\u53E5\uFF1A\u52A0\u9501</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">==</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u94FE\u8868</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fh <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        binCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> f<span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                oldVal <span class="token operator">=</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                                    e<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                                <span class="token keyword">break</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                pred<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">break</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u7EA2\u9ED1\u6811</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">TreeBin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span>
                        binCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            oldVal <span class="token operator">=</span> p<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                                p<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5982\u679C\u662F\u94FE\u8868\uFF0C\u5219\u4E0A\u9762\u7684 binCount \u4F1A\u4ECE 1 \u4E00\u76F4\u7D2F\u52A0</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD<span class="token punctuation">)</span>
                    <span class="token comment">// \u8D85\u51FA\u9608\u503C\uFF0C\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811</span>
                    <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> oldVal<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u603B\u5143\u7D20\u4E2A\u6570\u7D2F\u52A0 1</span>
    <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> binCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684 for \u5FAA\u73AF\u6709 4 \u4E2A\u5927\u7684\u5206\u652F\uFF1A</p><p>\u7B2C 1 \u4E2A\u5206\u652F\uFF0C\u662F\u6574\u4E2A\u6570\u7EC4\u7684\u521D\u59CB\u5316\uFF0C\u524D\u9762\u5DF2\u8BB2\uFF1B</p><p>\u7B2C 2 \u4E2A\u5206\u652F\uFF0C\u662F\u6240\u5728\u7684\u69FD\u4E3A\u7A7A\uFF0C\u8BF4\u660E\u8BE5\u5143\u7D20\u662F\u8BE5\u69FD\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u76F4\u63A5\u65B0\u5EFA\u4E00\u4E2A\u5934\u8282\u70B9\uFF0C\u7136\u540E\u8FD4\u56DE\uFF1B</p><p>\u7B2C 3 \u4E2A\u5206\u652F\uFF0C\u8BF4\u660E\u8BE5\u69FD\u6B63\u5728\u8FDB\u884C\u6269\u5BB9\uFF0C\u5E2E\u52A9\u5176\u6269\u5BB9\uFF1B</p><p>\u7B2C 4 \u4E2A\u5206\u652F\uFF0C\u5C31\u662F\u628A\u5143\u7D20\u653E\u5165\u69FD\u5185\u3002\u69FD\u5185\u53EF\u80FD\u662F\u4E00\u4E2A\u94FE\u8868\uFF0C\u4E5F\u53EF\u80FD\u662F\u4E00\u68F5\u7EA2\u9ED1\u6811\uFF0C\u901A\u8FC7\u5934\u8282\u70B9\u7684\u7C7B\u578B\u53EF\u4EE5\u5224\u65AD\u662F\u54EA\u4E00\u79CD\u3002\u7B2C 4 \u4E2A\u5206\u652F\u662F\u5305\u88F9\u5728 synchronized (f) \u91CC\u9762\u7684\uFF0Cf \u5BF9\u5E94\u7684\u6570\u7EC4\u4E0B\u6807\u4F4D\u7F6E\u7684\u5934\u8282\u70B9\uFF0C\u610F\u5473\u7740\u6BCF\u4E2A\u6570\u7EC4\u5143\u7D20\u6709\u4E00\u628A\u9501\uFF0C\u5E76\u53D1\u5EA6\u7B49\u4E8E\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><p>\u4E0A\u9762\u7684 binCount \u8868\u793A\u94FE\u8868\u7684\u5143\u7D20\u4E2A\u6570\uFF0C\u5F53\u8FD9\u4E2A\u6570\u76EE\u8D85\u8FC7 TREEIFY_THRESHOLD = 8 \u65F6\uFF0C\u628A\u94FE\u8868\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811\uFF0C\u4E5F\u5C31\u662F treeifyBin(tab, i) \u51FD\u6570\u3002\u4F46\u5728\u8FD9\u4E2A\u51FD\u6570\u5185\u90E8\uFF0C\u4E0D\u4E00\u5B9A\u9700\u8981\u8FDB\u884C\u7EA2\u9ED1\u6811\u8F6C\u6362\uFF0C\u53EF\u80FD\u53EA\u505A\u6269\u5BB9\u64CD\u4F5C\uFF0C\u6240\u4EE5\u63A5\u4E0B\u6765\u4ECE\u6269\u5BB9\u8BB2\u8D77\u3002</p></li><li><p>\u6269\u5BB9</p><p>\u6269\u5BB9\u7684\u5B9E\u73B0\u662F\u6700\u590D\u6742\u7684\uFF0C\u4E0B\u9762\u4ECE treeifyBin(tab, i) \u8BB2\u8D77\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeifyBin</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> b<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> sc<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MIN_TREEIFY_CAPACITY<span class="token punctuation">)</span>
            <span class="token comment">// \u6570\u7EC4\u957F\u5EA6\u5C0F\u4E8E\u9608\u503C 64\uFF0C\u4E0D\u505A\u7EA2\u9ED1\u6811\u8F6C\u6362\uFF0C\u76F4\u63A5\u6269\u5BB9</span>
            <span class="token function">tryPresize</span><span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>hash <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u94FE\u8868\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> b<span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u904D\u5386\u94FE\u8868\uFF0C\u6784\u5EFA\u7EA2\u9ED1\u6811</span>
                        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token punctuation">,</span> e<span class="token punctuation">.</span>key<span class="token punctuation">,</span> e<span class="token punctuation">.</span>val<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>prev <span class="token operator">=</span> tl<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                            hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
                        <span class="token keyword">else</span>
                            tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
                        tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token function">setTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0CMIN_TREEIFY_CAPACITY = 64\uFF0C\u610F\u5473\u7740\u5F53\u6570\u7EC4\u7684\u957F\u5EA6\u6CA1\u6709\u8D85\u8FC7 64 \u7684\u65F6\u5019\uFF0C\u6570\u7EC4\u7684\u6BCF\u4E2A\u8282\u70B9\u91CC\u90FD\u662F\u94FE\u8868\uFF0C\u53EA\u4F1A\u6269\u5BB9\uFF0C\u4E0D\u4F1A\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811\u3002\u53EA\u6709\u5F53\u6570\u7EC4\u957F\u5EA6\u5927\u4E8E\u6216\u7B49\u4E8E 64 \u65F6\uFF0C\u624D\u8003\u8651\u628A\u94FE\u8868\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811\u3002</p><p>\u5728 tryPresize(int size) \u5185\u90E8\u8C03\u7528\u4E86\u4E00\u4E2A\u6838\u5FC3\u51FD\u6570 transfer(Node&lt;K\uFF0CV&gt;[] tab\uFF0CNode&lt;K\uFF0CV&gt;[] nextTab)\uFF0C\u5148\u4ECE\u8FD9\u4E2A\u51FD\u6570\u7684\u5206\u6790\u8BF4\u8D77\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nextTab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">,</span> stride<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>stride <span class="token operator">=</span> <span class="token punctuation">(</span>NCPU <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> NCPU <span class="token operator">:</span> n<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MIN_TRANSFER_STRIDE<span class="token punctuation">)</span>
        <span class="token comment">// \u8BA1\u7B97\u6B65\u957F</span>
        stride <span class="token operator">=</span> MIN_TRANSFER_STRIDE<span class="token punctuation">;</span> 
    <span class="token comment">// \u521D\u59CB\u5316\u65B0 HashMap</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6269\u5BB9\u4E24\u500D</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            nextTab <span class="token operator">=</span> nt<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>       
            sizeCtl <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        nextTable <span class="token operator">=</span> nextTab<span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u7684 transferIndex \u4E3A\u65E7 HashMap \u7684\u6570\u7EC4\u957F\u5EA6</span>
        transferIndex <span class="token operator">=</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> nextn <span class="token operator">=</span> nextTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token class-name">ForwardingNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> fwd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForwardingNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>nextTab<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> finishing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 
    <span class="token comment">// \u8FD9\u91CC\u7684 i \u4E3A\u904D\u5386\u7684\u4E0B\u6807\uFF0Cbound \u4E3A\u904D\u5386\u7684\u8FB9\u754C\u3002\u5982\u679C\u6210\u529F\u62FF\u5230\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u5219 i = nextIndex - 1\uFF0C</span>
    <span class="token comment">// bound = nextIndex - stride\uFF1B\u5982\u679C\u62FF\u4E0D\u5230\u4EFB\u52A1\uFF0C\u5219 i = 0\uFF0Cbound = 0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> bound <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">;</span> <span class="token keyword">int</span> fh<span class="token punctuation">;</span>
        <span class="token comment">// advance \u8868\u793A\u5728\u4ECE i = transferIndex - 1 \u904D\u5386\u5230 bound \u4F4D\u7F6E\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u662F\u5426\u4E00\u76F4\u7EE7\u7EED</span>
        <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u8F83\u96BE\u7406\u89E3\uFF1A3 \u4E2A\u5206\u652F\u91CC\u9762\u90FD\u662F advance = false\uFF0C\u610F\u5473\u7740\u82E5 3 \u4E2A\u5206\u652F\u90FD\u4E0D\u6267\u884C\uFF0C</span>
        <span class="token comment">// \u624D\u53EF\u80FD\u4E00\u76F4\u6267\u884C while \u5FAA\u73AF\u3002\u76EE\u7684\u5728\u4E8E\uFF0C\u5F53\u5BF9 transferIndex \u6267\u884C CAS \u64CD\u4F5C\u4E0D\u6210\u529F\u7684\u65F6\u5019\uFF0C</span>
        <span class="token comment">// \u9700\u8981\u81EA\u65CB\uFF0C\u4EE5\u671F\u62FF\u5230\u4E00\u4E2A stride \u7684\u8FC1\u79FB\u4EFB\u52A1</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>advance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> nextIndex<span class="token punctuation">,</span> nextBound<span class="token punctuation">;</span>
            <span class="token comment">// \u5BF9\u6570\u7EC4\u7684\u904D\u5386\uFF0C\u901A\u8FC7\u8FD9\u91CC\u7684 --i \u8FDB\u884C\u3002\u5982\u679C\u6210\u529F\u6267\u884C\u4E86 --i\uFF0C</span>
            <span class="token comment">// \u5C31\u4E0D\u7528\u7EE7\u7EED while \u5FAA\u73AF\u4E86\u3002\u56E0\u4E3A\u6BCF\u6B21 advance \u53EA\u80FD\u8FDB\u4E00\u6B65</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>i <span class="token operator">&gt;=</span> bound <span class="token operator">||</span> finishing<span class="token punctuation">)</span>
                advance <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token comment">// transferIndex &lt;= 0\uFF0C\u6574\u4E2A HashMap \u5B8C\u6210</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>nextIndex <span class="token operator">=</span> transferIndex<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                advance <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5BF9 transferIndex \u8FDB\u884C CAS \u64CD\u4F5C\uFF0C\u4E5F\u5C31\u662F\u4E3A\u5F53\u524D\u7EBF\u7A0B\u5206\u914D 1 \u4E2A stride\u3002</span>
            <span class="token comment">// CAS \u64CD\u4F5C\u6210\u529F\uFF0C\u7EBF\u7A0B\u6210\u529F\u62FF\u5230\u4E00\u4E2A stride \u8FC1\u79FB\u4EFB\u52A1\uFF1B</span>
            <span class="token comment">// CAS \u64CD\u4F5C\u4E0D\u6210\u529F\uFF0C\u7EBF\u7A0B\u6CA1\u62A2\u5230\u4EFB\u52A1\uFF0C\u4F1A\u7EE7\u7EED\u6267\u884C while \u5FAA\u73AF\uFF0C\u81EA\u65CB</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> TRANSFERINDEX<span class="token punctuation">,</span> nextIndex<span class="token punctuation">,</span>
                      nextBound <span class="token operator">=</span> <span class="token punctuation">(</span>nextIndex <span class="token operator">&gt;</span> stride <span class="token operator">?</span> nextIndex <span class="token operator">-</span> stride <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                bound <span class="token operator">=</span> nextBound<span class="token punctuation">;</span>
                i <span class="token operator">=</span> nextIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                advance <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// i \u5DF2\u7ECF\u8D8A\u754C\uFF0C\u6574\u4E2A HashMap \u5DF2\u7ECF\u904D\u5386\u5B8C\u6210</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> n <span class="token operator">||</span> i <span class="token operator">+</span> n <span class="token operator">&gt;=</span> nextn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> sc<span class="token punctuation">;</span>
            <span class="token comment">// finishing \u8868\u793A\u6574\u4E2A HashMap \u6269\u5BB9\u5B8C\u6210</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>finishing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                nextTable <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token comment">// \u628A nextTable \u8D4B\u503C\u7ED9\u5F53\u524D table</span>
                table <span class="token operator">=</span> nextTab<span class="token punctuation">;</span>
                sizeCtl <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">,</span> sc <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token function">resizeStamp</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                finishing <span class="token operator">=</span> advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                i <span class="token operator">=</span> n<span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// tab[i] \u8FC1\u79FB\u5B8C\u6BD5\uFF0C\u8D4B\u503C\u4E00\u4E2A ForwardingNode</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            advance <span class="token operator">=</span> <span class="token function">casTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> fwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// tab[i]\u7684\u4F4D\u7F6E\u5DF2\u7ECF\u5728\u8FC1\u79FB\u8FC7\u7A0B\u4E2D</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fh <span class="token operator">=</span> f<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> MOVED<span class="token punctuation">)</span>
            advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u5BF9 tab[i] \u8FDB\u884C\u8FC1\u79FB\u64CD\u4F5C\uFF0Ctab[i] \u53EF\u80FD\u662F\u4E00\u4E2A\u94FE\u8868\u6216\u8005\u7EA2\u9ED1\u6811</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">==</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> ln<span class="token punctuation">,</span> hn<span class="token punctuation">;</span>
                    <span class="token comment">// \u94FE\u8868</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fh <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">int</span> runBit <span class="token operator">=</span> fh <span class="token operator">&amp;</span> n<span class="token punctuation">;</span>
                        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> lastRun <span class="token operator">=</span> f<span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> f<span class="token punctuation">.</span>next<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">int</span> b <span class="token operator">=</span> p<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> n<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> runBit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                runBit <span class="token operator">=</span> b<span class="token punctuation">;</span>
                                <span class="token comment">// \u610F\u5473\u7740\u5728 lastRun \u4E4B\u540E\u7684\u6240\u6709\u5143\u7D20\uFF0Chash \u503C\u90FD\u662F\u4E00\u6837\u7684\uFF0C\u8BB0\u5F55\u4E0B\u8FD9\u4E2A\u6700\u540E\u7684\u4F4D\u7F6E</span>
                                lastRun <span class="token operator">=</span> p<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>runBit <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u7C7B\u4F3C\u4E8E JDK 7 \u7684\u94FE\u8868\u8FC1\u79FB\u7684\u4F18\u5316\u505A\u6CD5</span>
                            ln <span class="token operator">=</span> lastRun<span class="token punctuation">;</span>
                            hn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            hn <span class="token operator">=</span> lastRun<span class="token punctuation">;</span>
                            ln <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> f<span class="token punctuation">;</span> p <span class="token operator">!=</span> lastRun<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">int</span> ph <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">;</span> <span class="token class-name">K</span> pk <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">;</span> <span class="token class-name">V</span> pv <span class="token operator">=</span> p<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ph <span class="token operator">&amp;</span> n<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                                ln <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>ph<span class="token punctuation">,</span> pk<span class="token punctuation">,</span> pv<span class="token punctuation">,</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                hn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>ph<span class="token punctuation">,</span> pk<span class="token punctuation">,</span> pv<span class="token punctuation">,</span> hn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i <span class="token operator">+</span> n<span class="token punctuation">,</span> hn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u7EA2\u9ED1\u6811\uFF0C\u8FC1\u79FB\u529E\u6CD5\u548C\u94FE\u8868\u7C7B\u4F3C</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">TreeBin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>f<span class="token punctuation">;</span>
                        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> lo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hi <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token keyword">int</span> lc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> hc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> t<span class="token punctuation">.</span>first<span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">int</span> h <span class="token operator">=</span> e<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
                            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
                                <span class="token punctuation">(</span>h<span class="token punctuation">,</span> e<span class="token punctuation">.</span>key<span class="token punctuation">,</span> e<span class="token punctuation">.</span>val<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">&amp;</span> n<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>prev <span class="token operator">=</span> loTail<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                    lo <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token keyword">else</span>
                                    loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                loTail <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token operator">++</span>lc<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>prev <span class="token operator">=</span> hiTail<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                    hi <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token keyword">else</span>
                                    hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                hiTail <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token operator">++</span>hc<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        ln <span class="token operator">=</span> <span class="token punctuation">(</span>lc <span class="token operator">&lt;=</span> UNTREEIFY_THRESHOLD<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">untreeify</span><span class="token punctuation">(</span>lo<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>hc <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>lo<span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">;</span>
                        hn <span class="token operator">=</span> <span class="token punctuation">(</span>hc <span class="token operator">&lt;=</span> UNTREEIFY_THRESHOLD<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">untreeify</span><span class="token punctuation">(</span>hi<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>lc <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hi<span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i <span class="token operator">+</span> n<span class="token punctuation">,</span> hn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u975E\u5E38\u590D\u6742\uFF0C\u4E0B\u9762\u4E00\u6B65\u6B65\u5206\u6790\uFF1A</p><p>\uFF081\uFF09\u6269\u5BB9\u7684\u57FA\u672C\u539F\u7406\u5982\u56FE5-11 \u6240\u793A\uFF0C\u9996\u5148\u5EFA\u4E00\u4E2A\u65B0\u7684 HashMap\uFF0C\u5176\u6570\u7EC4\u957F\u5EA6\u662F\u65E7\u6570\u7EC4\u957F\u5EA6\u7684 2 \u500D\uFF0C\u7136\u540E\u628A\u65E7\u7684\u5143\u7D20\u9010\u4E2A\u8FC1\u79FB\u8FC7\u6765\u3002\u6240\u4EE5\uFF0C\u4E0A\u9762\u7684\u51FD\u6570\u53C2\u6570\u6709 2 \u4E2A\uFF0C\u7B2C 1 \u4E2A\u53C2\u6570 tab \u662F\u6269\u5BB9\u4E4B\u524D\u7684 HashMap\uFF0C\u7B2C 2 \u4E2A\u53C2\u6570 nextTab \u662F\u6269\u5BB9\u4E4B\u540E\u7684 HashMap\u3002\u5F53 nextTab = null \u7684\u65F6\u5019\uFF0C\u51FD\u6570\u6700\u521D\u4F1A\u5BF9 nextTab \u8FDB\u884C\u521D\u59CB\u5316\u3002\u8FD9\u91CC\u6709\u4E00\u4E2A\u5173\u952E\u70B9\u8981\u8BF4\u660E\uFF1A\u8BE5\u51FD\u6570\u4F1A\u88AB\u591A\u4E2A\u7EBF\u7A0B\u8C03\u7528\uFF0C\u6240\u4EE5\u6BCF\u4E2A\u7EBF\u7A0B\u53EA\u662F\u6269\u5BB9\u65E7\u7684 HashMap \u90E8\u5206\uFF0C\u8FD9\u5C31\u6D89\u53CA\u5982\u4F55\u5212\u5206\u4EFB\u52A1\u7684\u95EE\u9898\u3002</p><img src="`+v+'" alt="\u56FE5-11" style="zoom:50%;"><p>\u56FE5-11 \u6269\u5BB9\u7684\u57FA\u672C\u539F\u7406</p><p>\uFF082\uFF09\u56FE5-12 \u6240\u793A\u4E3A\u591A\u4E2A\u7EBF\u7A0B\u5E76\u884C\u6269\u5BB9-\u4EFB\u52A1\u5212\u5206\u793A\u610F\u56FE\u3002\u65E7\u6570\u7EC4\u7684\u957F\u5EA6\u662F N\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u6269\u5BB9\u4E00\u6BB5\uFF0C\u4E00\u6BB5\u7684\u957F\u5EA6\u7528\u53D8\u91CF stride\uFF08\u6B65\u957F\uFF09\u6765\u8868\u793A\uFF0CtransferIndex \u8868\u793A\u4E86\u6574\u4E2A\u6570\u7EC4\u6269\u5BB9\u7684\u8FDB\u5EA6\u3002</p><img src="'+m+`" alt="\u56FE5-12" style="zoom:50%;"><p>\u56FE5-12 \u591A\u4E2A\u7EBF\u7A0B\u5E76\u884C\u6269\u5BB9-\u4EFB\u52A1\u5212\u5206\u793A\u610F\u56FE</p><p>stride \u7684\u8BA1\u7B97\u516C\u5F0F\u5982\u4E0A\u9762\u7684\u4EE3\u7801\u6240\u793A\uFF0C\u5373\uFF1A\u5728\u5355\u6838\u6A21\u5F0F\u4E0B\u76F4\u63A5\u7B49\u4E8E n\uFF0C\u56E0\u4E3A\u5728\u5355\u6838\u6A21\u5F0F\u4E0B\u6CA1\u6709\u529E\u6CD5\u591A\u4E2A\u7EBF\u7A0B\u5E76\u884C\u6269\u5BB9\uFF0C\u53EA\u9700\u8981 1 \u4E2A\u7EBF\u7A0B\u6765\u6269\u5BB9\u6574\u4E2A\u6570\u7EC4\uFF1B\u4F46\u5728\u591A\u6838\u6A21\u5F0F\u4E0B\u4E3A (n &gt;&gt;&gt; 3) / NCPU\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u6B65\u957F\u7684\u6700\u5C0F\u503C\u662F 16\u3002\u663E\u7136\uFF0C\u9700\u8981\u7684\u7EBF\u7A0B\u4E2A\u6570\u7EA6\u4E3A n / stride\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>stride <span class="token operator">=</span> <span class="token punctuation">(</span>NCPU <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> NCPU <span class="token operator">:</span> n<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MIN_TRANSFER_STRIDE<span class="token punctuation">)</span>
        stride <span class="token operator">=</span> MIN_TRANSFER_STRIDE<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>transferIndex \u662F ConcurrentHashMap \u7684\u4E00\u4E2A\u6210\u5458\u53D8\u91CF\uFF0C\u8BB0\u5F55\u4E86\u6269\u5BB9\u7684\u8FDB\u5EA6\u3002\u521D\u59CB\u503C\u4E3A n\uFF0C\u4ECE\u5927\u5230\u5C0F\u6269\u5BB9\uFF0C\u6BCF\u6B21\u51CF stride \u4E2A\u4F4D\u7F6E\uFF0C\u6700\u7EC8\u51CF\u81F3 n&lt;= 0\uFF0C\u8868\u793A\u6574\u4E2A\u6269\u5BB9\u5B8C\u6210\u3002\u56E0\u6B64\uFF0C\u4ECE [0, transferIndex - 1] \u7684\u4F4D\u7F6E\u8868\u793A\u8FD8\u6CA1\u6709\u5206\u914D\u5230\u7EBF\u7A0B\u6269\u5BB9\u7684\u90E8\u5206\uFF0C\u4ECE [transfexIndex, n - 1] \u7684\u4F4D\u7F6E\u8868\u793A\u5DF2\u7ECF\u5206\u914D\u7ED9\u67D0\u4E2A\u7EBF\u7A0B\u8FDB\u884C\u6269\u5BB9\uFF0C\u5F53\u524D\u6B63\u5728\u6269\u5BB9\u4E2D\uFF0C\u6216\u8005\u5DF2\u7ECF\u6269\u5BB9\u6210\u529F\u3002</p><p>\u56E0\u4E3A transferIndex \u4F1A\u88AB\u591A\u4E2A\u7EBF\u7A0B\u5E76\u53D1\u4FEE\u6539\uFF0C\u6BCF\u6B21\u51CF stride\uFF0C\u6240\u4EE5\u9700\u8981\u901A\u8FC7 CAS \u8FDB\u884C\u64CD\u4F5C\uFF0C\u5982\u4E0B\u9762\u7684\u4EE3\u7801\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span>compareAndSwapInt <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> TRANSFERINDEX<span class="token punctuation">,</span> nextIndex<span class="token punctuation">,</span> nextBound <span class="token operator">=</span> <span class="token punctuation">(</span>nextIndex <span class="token operator">&gt;</span> stride <span class="token operator">?</span> nextIndex <span class="token operator">-</span> stride <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\uFF083\uFF09\u5728\u6269\u5BB9\u672A\u5B8C\u6210\u4E4B\u524D\uFF0C\u6709\u7684\u6570\u7EC4\u4E0B\u6807\u5BF9\u5E94\u7684\u69FD\u5DF2\u7ECF\u8FC1\u79FB\u5230\u4E86\u65B0\u7684 HashMap \u91CC\u9762\uFF0C\u6709\u7684\u8FD8\u5728\u65E7\u7684 HashMap \u91CC\u9762\u3002\u8FD9\u4E2A\u65F6\u5019\uFF0C\u6240\u6709\u8C03\u7528 get(k, v) \u7684\u7EBF\u7A0B\u8FD8\u662F\u4F1A\u8BBF\u95EE\u65E7 HashMap\uFF0C\u600E\u4E48\u5904\u7406\u5462\uFF1F\u56FE5-13 \u6240\u793A\u4E3A\u6269\u5BB9\u8FC7\u7A0B\u4E2D\u7684\u8F6C\u53D1\u793A\u610F\u56FE\uFF1A\u5F53 Node[0] \u5DF2\u7ECF\u8FC1\u79FB\u6210\u529F\uFF0C\u800C\u5176\u4ED6 Node \u8FD8\u5728\u8FC1\u79FB\u8FC7\u7A0B\u4E2D\u65F6\uFF0C\u5982\u679C\u6709\u7EBF\u7A0B\u8981\u8BFB\u53D6 Node[0] \u7684\u6570\u636E\uFF0C\u5C31\u4F1A\u8BBF\u95EE\u5931\u8D25\u3002\u4E3A\u6B64\uFF0C\u65B0\u5EFA\u4E00\u4E2A ForwardingNode\uFF0C\u5373\u8F6C\u53D1\u8282\u70B9\uFF0C\u5728\u8FD9\u4E2A\u8282\u70B9\u91CC\u9762\u8BB0\u5F55\u7684\u662F\u65B0\u7684 ConcurrentHashMap \u7684\u5F15\u7528\u3002\u8FD9\u6837\uFF0C\u5F53\u7EBF\u7A0B\u8BBF\u95EE\u5230 ForwardingNode \u4E4B\u540E\uFF0C\u4F1A\u53BB\u67E5\u8BE2\u65B0\u7684 ConcurrentHashMap\u3002</p><img src="`+b+`" alt="\u56FE5-13" style="zoom:50%;"><p>\u56FE5-13 \u6269\u5BB9\u8FC7\u7A0B\u4E2D\u7684\u8F6C\u53D1\u793A\u610F\u56FE</p><p>\uFF084\uFF09\u56E0\u4E3A\u6570\u7EC4\u7684\u957F\u5EA6 tab.length \u662F 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u6BCF\u6B21\u6269\u5BB9\u53C8\u662F 2 \u500D\u3002\u800C Hash \u51FD\u6570\u662F hashCode % tab.length\uFF0C\u7B49\u4EF7\u4E8E hashCode &amp; (tab.length - 1)\u3002\u8FD9\u610F\u5473\u7740\uFF1A\u5904\u4E8E\u7B2C i \u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20\uFF0C\u5728\u65B0\u7684 Hash \u8868\u7684\u6570\u7EC4\u4E2D\u4E00\u5B9A\u5904\u4E8E\u7B2C i \u4E2A\u6216\u8005\u7B2C i + n \u4E2A\u4F4D\u7F6E\uFF0C\u5982\u56FE5-11 \u6240\u793A\u3002\u4E3E\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF1A\u5047\u8BBE\u6570\u7EC4\u957F\u5EA6\u662F 8\uFF0C\u6269\u5BB9\u4E4B\u540E\u662F 16\uFF1A</p><p>\u82E5 hashCode = 5\uFF0C5 % 8 = 0\uFF0C\u6269\u5BB9\u540E\uFF0C5 % 16 = 0\uFF0C\u4F4D\u7F6E\u4FDD\u6301\u4E0D\u53D8\uFF1B</p><p>\u82E5 hashCode = 24\uFF0C24 % 8= 0\uFF0C\u6269\u5BB9\u540E\uFF0C24 % 16 = 8\uFF0C\u540E\u79FB 8 \u4E2A\u4F4D\u7F6E\uFF1B</p><p>\u82E5 hashCode = 25\uFF0C25 % 8= 1\uFF0C\u6269\u5BB9\u540E\uFF0C25 % 16 = 9\uFF0C\u540E\u79FB 8 \u4E2A\u4F4D\u7F6E\uFF1B</p><p>\u82E5 hashCode = 39\uFF0C39 % 8= 7\uFF0C\u6269\u5BB9\u540E\uFF0C39 % 8 = 7\uFF0C\u4F4D\u7F6E\u4FDD\u6301\u4E0D\u53D8\uFF1B</p><p>\u2026\u2026</p><p>\u6B63\u56E0\u4E3A\u6709\u8FD9\u6837\u7684\u89C4\u5F8B\uFF0C\u6240\u4EE5\u5982\u4E0B\u6709\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i <span class="token operator">+</span> n<span class="token punctuation">,</span> hn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u628A tab[i] \u4F4D\u7F6E\u7684\u94FE\u8868\u6216\u7EA2\u9ED1\u6811\u91CD\u65B0\u7EC4\u88C5\u6210\u4E24\u90E8\u5206\uFF0C\u4E00\u90E8\u5206\u94FE\u63A5\u5230 nextTab[i] \u7684\u4F4D\u7F6E\uFF0C\u4E00\u90E8\u5206\u94FE\u63A5\u5230 nextTab[i + n] \u7684\u4F4D\u7F6E\uFF0C\u5982\u56FE5-11 \u6240\u793A\u3002\u7136\u540E\u628A tab[i] \u7684\u4F4D\u7F6E\u6307\u5411\u4E00\u4E2A ForwardingNode \u8282\u70B9\u3002</p><p>\u540C\u65F6\uFF0C\u5F53 tab[i] \u540E\u9762\u662F\u94FE\u8868\u65F6\uFF0C\u4F7F\u7528\u7C7B\u4F3C\u4E8E JDK 7 \u4E2D\u5728\u6269\u5BB9\u65F6\u7684\u4F18\u5316\u65B9\u6CD5\uFF0C\u4ECE lastRun \u5F80\u540E\u7684\u6240\u6709\u8282\u70B9\uFF0C\u4E0D\u9700\u4F9D\u6B21\u62F7\u8D1D\uFF0C\u800C\u662F\u76F4\u63A5\u94FE\u63A5\u5230\u65B0\u7684\u94FE\u8868\u5934\u90E8\u3002\u4ECE lastRun \u5F80\u524D\u7684\u6240\u6709\u8282\u70B9\uFF0C\u9700\u8981\u4F9D\u6B21\u62F7\u8D1D\u3002</p><p>\u4E86\u89E3\u4E86\u6838\u5FC3\u7684\u8FC1\u79FB\u51FD\u6570 transfer(tab, nextTab)\uFF0C\u518D\u56DE\u5934\u770B tryPresize(int size) \u51FD\u6570\u3002\u8FD9\u4E2A\u51FD\u6570\u7684\u8F93\u5165\u662F\u6574\u4E2A Hash \u8868\u7684\u5143\u7D20\u4E2A\u6570\uFF0C\u5728\u51FD\u6570\u91CC\u9762\uFF0C\u6839\u636E\u9700\u8981\u5BF9\u6574\u4E2A Hash \u8868\u8FDB\u884C\u6269\u5BB9\u3002\u60F3\u8981\u770B\u660E\u767D\u8FD9\u4E2A\u51FD\u6570\uFF0C\u9700\u8981\u900F\u5F7B\u5730\u7406\u89E3 sizeCtl \u53D8\u91CF\uFF0C\u4E0B\u9762\u8FD9\u6BB5\u6CE8\u91CA\u6458\u81EA\u6E90\u7801\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Table initialization and resizing control. When negative, the
 * table is being initialized or resized: -1 for initialization,
 * else -(1 + the number of active resizing threads). Otherwise,
 * when table is null, holds the initial table size to use upon
 * creation, or 0 for default. After initialization, holds the
 * next element count value upon which to resize the table.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> sizeCtl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53 sizeCtl = -1 \u65F6\uFF0C\u8868\u793A\u6574\u4E2A HashMap \u6B63\u5728\u521D\u59CB\u5316\uFF1B</p><p>\u5F53 sizeCtl = \u67D0\u4E2A\u5176\u4ED6\u8D1F\u6570\u65F6\uFF0C\u8868\u793A\u591A\u4E2A\u7EBF\u7A0B\u5728\u5BF9 HashMap \u505A\u5E76\u53D1\u6269\u5BB9\uFF1B</p><p>\u5F53 sizeCtl = cap \u65F6\uFF0Ctab = null\uFF0C\u8868\u793A\u672A\u521D\u59CB\u4E4B\u524D\u7684\u521D\u59CB\u5BB9\u91CF\uFF08\u5982\u4E0A\u9762\u7684\u6784\u9020\u51FD\u6570\u6240\u793A\uFF09\uFF1B</p><p>\u6269\u5BB9\u6210\u529F\u4E4B\u540E\uFF0CsizeCtl \u5B58\u50A8\u7684\u662F\u4E0B\u4E00\u6B21\u8981\u6269\u5BB9\u7684\u9608\u503C\uFF0C\u5373\u4E0A\u9762\u521D\u59CB\u5316\u4EE3\u7801\u4E2D\u7684 n - (n &gt;&gt;&gt; 2) = 0.75n\u3002</p><p>\u6240\u4EE5\uFF0CsizeCtl \u53D8\u91CF\u5728 Hash \u8868\u5904\u4E8E\u4E0D\u540C\u72B6\u6001\u65F6\uFF0C\u8868\u8FBE\u4E0D\u540C\u7684\u542B\u4E49\u3002\u660E\u767D\u4E86\u8FD9\u4E2A\u9053\u7406\uFF0C\u518D\u6765\u770B\u4E0A\u9762\u7684 tryPresize(int size) \u51FD\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">tryPresize</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>MAXIMUM_CAPACITY <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> MAXIMUM_CAPACITY <span class="token operator">:</span>
    <span class="token comment">// \u6839\u636E\u5143\u7D20\u4E2A\u6570\u8BA1\u7B97\u6570\u7EC4\u5927\u5C0F</span>
    <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sc<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>
        <span class="token comment">// Hash \u8868\u521D\u59CB\u5316\uFF0C\u548C\u4E0A\u9762\u521D\u59CB\u5316\u7684\u65F6\u5019\u4E00\u6837</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            n <span class="token operator">=</span> <span class="token punctuation">(</span>sc <span class="token operator">&gt;</span> c<span class="token punctuation">)</span> <span class="token operator">?</span> sc <span class="token operator">:</span> c<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">==</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
                        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
                        table <span class="token operator">=</span> nt<span class="token punctuation">;</span>
                        <span class="token comment">// \u5373 n - n / 4 = 0.75n\uFF0C\u4E0B\u4E00\u6B21\u6269\u5BB9\u7684\u9608\u503C</span>
                        sc <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    sizeCtl <span class="token operator">=</span> sc<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> sc <span class="token operator">||</span> n <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> table<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">resizeStamp</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// sc &lt; 0\uFF0C\u8BF4\u660E\u591A\u4E2A\u7EBF\u7A0B\u6B63\u5728\u8FDB\u884C\u5E76\u53D1\u6269\u5BB9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">&gt;&gt;&gt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span> <span class="token operator">!=</span> rs <span class="token operator">||</span> sc <span class="token operator">==</span> rs <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">||</span>
                    sc <span class="token operator">==</span> rs <span class="token operator">+</span> MAX_RESIZERS <span class="token operator">||</span> <span class="token punctuation">(</span>nt <span class="token operator">=</span> nextTable<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
                    <span class="token comment">// \u6269\u5BB9\u7ED3\u675F</span>
                    transferIndex <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> sc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token comment">// \u5E2E\u7740\u6269\u5BB9</span>
                    <span class="token function">transfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> nt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> <span class="token punctuation">(</span>rs <span class="token operator">&lt;&lt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// \u7B2C\u4E00\u6B21\u6269\u5BB9</span>
                <span class="token function">transfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tryPresize(int size) \u662F\u6839\u636E\u671F\u671B\u7684\u5143\u7D20\u4E2A\u6570\u5BF9\u6574\u4E2A Hash \u8868\u8FDB\u884C\u6269\u5BB9\uFF0C\u6838\u5FC3\u662F\u8C03\u7528 transfer \u51FD\u6570\u3002\u5728\u7B2C\u4E00\u6B21\u6269\u5BB9\u7684\u65F6\u5019\uFF0CsizeCtl \u4F1A\u88AB\u8BBE\u7F6E\u6210\u4E00\u4E2A\u5F88\u5927\u7684\u8D1F\u6570 U.compareAndSwapInt(this, SIZECTL, sc, (rs &lt;&lt; RESIZE_STAMP_SHIFT) + 2)\uFF1B\u4E4B\u540E\u6BCF\u4E00\u4E2A\u7EBF\u7A0B\u6269\u5BB9\u7684\u65F6\u5019\uFF0CsizeCtl \u5C31\u52A0 1\uFF0CU.compareAndSwapInt(this, SIZECTL, sc, sc + 1)\uFF0C\u5F85\u6269\u5BB9\u5B8C\u6210\u4E4B\u540E\uFF0CsizeCtl \u51CF 1\u3002</p></li></ol><h2 id="_5-6-concurrentskiplistmap-set" tabindex="-1"><a class="header-anchor" href="#_5-6-concurrentskiplistmap-set" aria-hidden="true">#</a> 5.6 ConcurrentSkipListMap / Set</h2><p>ConcurrentHashMap \u662F\u4E00\u79CD key \u65E0\u5E8F\u7684 HashMap\uFF0CConcurrentSkipListMap \u5219\u662F key \u6709\u5E8F\u7684\uFF0C\u5B9E\u73B0\u4E86 NavigableMap \u63A5\u53E3\uFF0C\u6B64\u63A5\u53E3\u53C8\u7EE7\u627F\u4E86 SortedMap \u63A5\u53E3\u3002</p><h3 id="_5-6-1-concurrentskiplistmap" tabindex="-1"><a class="header-anchor" href="#_5-6-1-concurrentskiplistmap" aria-hidden="true">#</a> 5.6.1 ConcurrentSkipListMap</h3><ol><li><p>\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528 SkipList \u5B9E\u73B0 Map\uFF1F</p><p>\u5728 Java \u7684 util \u5305\u4E2D\uFF0C\u6709\u4E00\u4E2A\u975E\u7EBF\u7A0B\u5B89\u5168\u7684 HashMap\uFF0C\u4E5F\u5C31\u662F TreeMap\uFF0C\u662F key \u6709\u5E8F\u7684\uFF0C\u57FA\u4E8E\u7EA2\u9ED1\u6811\u5B9E\u73B0\u3002</p><p>\u800C\u5728 Concurrent \u5305\u4E2D\uFF0C\u63D0\u4F9B\u7684 key \u6709\u5E8F\u7684 HashMap\uFF0C\u4E5F\u5C31\u662F ConcurrentSkipListMap\uFF0C\u662F\u57FA\u4E8E SkipList\uFF08\u8DF3\u67E5\u8868\uFF09\u6765\u5B9E\u73B0\u7684\u3002\u8FD9\u91CC\u4E3A\u4EC0\u4E48\u4E0D\u7528\u7EA2\u9ED1\u6811\uFF0C\u800C\u7528\u8DF3\u67E5\u8868\u6765\u5B9E\u73B0\u5462\uFF1F\u501F\u7528 Doug Lea \u7684\u539F\u8BDD\uFF1A</p><blockquote><p>The reason is that there are no known efficient lock-free insertion and deletion algorithms for search trees.</p></blockquote><p>\u4E5F\u5C31\u662F\u76EE\u524D\u8BA1\u7B97\u673A\u9886\u57DF\u8FD8\u672A\u627E\u5230\u4E00\u79CD\u9AD8\u6548\u7684\u3001\u4F5C\u7528\u5728\u6811\u4E0A\u7684\u3001\u65E0\u9501\u7684\u3001\u589E\u52A0\u548C\u5220\u9664\u8282\u70B9\u7684\u529E\u6CD5\u3002</p><p>\u90A3\u4E3A\u4EC0\u4E48 SkipList \u53EF\u4EE5\u65E0\u9501\u5730\u5B9E\u73B0\u8282\u70B9\u7684\u589E\u52A0\u3001\u5220\u9664\u5462\uFF1F\u8FD9\u8981\u4ECE\u65E0\u9501\u94FE\u8868\u7684\u5B9E\u73B0\u8BF4\u8D77\u3002</p></li><li><p>\u65E0\u9501\u94FE\u8868 Doug Lea \u5728\u6CE8\u91CA\u4E2D\u5F15\u7528\u4E86\u4E00\u7BC7\u65E0\u9501\u94FE\u8868\u7684\u8BBA\u6587\uFF1AA pragmatic implementation of non-blocking linked lists\u3002</p><p>\u8868\u9762\u4E0A\u770B\uFF0C\u65E0\u9501\u94FE\u8868\u662F\u5F88\u7B80\u5355\u7684\uFF0C\u6839\u672C\u4E0D\u9700\u8981\u5199\u4E00\u7BC7\u8BBA\u6587\u6765\u4E13\u95E8\u8BBA\u8FF0\u3002\u5728\u4E0A\u6587\u4E2D\u8BB2\u89E3 AQS \u65F6\uFF0C\u66FE\u53CD\u590D\u7528\u5230\u65E0\u9501\u961F\u5217\uFF0C\u5176\u5B9E\u73B0\u4E5F\u662F\u94FE\u8868\u3002\u7A76\u7ADF\u4E8C\u8005\u7684\u533A\u522B\u5728\u54EA\u5462\uFF1F</p><p>\u4E0A\u6587\u6240\u8BB2\u7684\u65E0\u9501\u961F\u5217\u3001\u6808\uFF0C\u90FD\u662F\u53EA\u5728\u961F\u5934\u3001\u961F\u5C3E\u8FDB\u884C CAS \u64CD\u4F5C\uFF0C\u901A\u5E38\u4E0D\u4F1A\u6709\u95EE\u9898\u3002\u5982\u679C\u5728\u94FE\u8868\u7684\u4E2D\u95F4\u8FDB\u884C\u63D2\u5165\u6216\u5220\u9664\u64CD\u4F5C\uFF0C\u6309\u7167\u901A\u5E38\u7684 CAS \u505A\u6CD5\uFF0C\u5C31\u4F1A\u51FA\u73B0\u95EE\u9898\uFF01</p><p>\u5173\u4E8E\u8FD9\u4E2A\u95EE\u9898\uFF0CDoug Lea \u7684\u8BBA\u6587\u4E2D\u6709\u6E05\u6670\u7684\u8BBA\u8FF0\uFF0C\u6B64\u5904\u5F15\u7528\u5982\u4E0B\uFF1A</p><p>\u64CD\u4F5C 1\uFF1A\u5728\u8282\u70B9 10 \u540E\u9762\u63D2\u5165\u8282\u70B9 20\u3002\u5982\u56FE5-14 \u6240\u793A\uFF0C\u9996\u5148\u628A\u8282\u70B9 20 \u7684 next \u6307\u9488\u6307\u5411\u8282\u70B9 30\uFF0C\u7136\u540E\u5BF9\u8282\u70B9 10 \u7684 next \u6307\u9488\u6267\u884C CAS \u64CD\u4F5C\uFF0C\u4F7F\u5176\u6307\u5411\u8282\u70B9 20 \u5373\u53EF\u3002</p><img src="`+y+'" alt="\u56FE5-14" style="zoom:50%;"><p>\u56FE5-14 \u5728\u8282\u70B9 10 \u548C\u8282\u70B9 30 \u4E4B\u95F4\u63D2\u5165\u8282\u70B9 20</p><p>\u64CD\u4F5C 2\uFF1A\u5220\u9664\u8282\u70B9 10\u3002\u5982\u56FE5-15 \u6240\u793A\uFF0C\u53EA\u9700\u628A\u5934\u8282\u70B9\u7684 next \u6307\u9488\uFF0C\u8FDB\u884C CAS \u64CD\u4F5C\u5230\u8282\u70B9 30 \u5373\u53EF\u3002</p><img src="'+w+'" alt="\u56FE5-15" style="zoom:50%;"><p>\u56FE5-15 \u5220\u9664\u8282\u70B9 10</p><p>\u4F46\u662F\uFF0C\u5982\u679C\u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u64CD\u4F5C\uFF0C\u4E00\u4E2A\u5220\u9664\u8282\u70B9 10\uFF0C\u4E00\u4E2A\u8981\u5728\u8282\u70B9 10 \u540E\u9762\u63D2\u5165\u8282\u70B9 20\u3002\u5E76\u4E14\u8FD9\u4E24\u4E2A\u64CD\u4F5C\u90FD\u5404\u81EA\u662F CAS \u7684\uFF0C\u6B64\u65F6\u5C31\u4F1A\u51FA\u73B0\u95EE\u9898\u3002\u5982\u56FE5-16 \u6240\u793A\uFF0C\u5220\u9664\u8282\u70B9 10\uFF0C\u4F1A\u540C\u65F6\u628A\u65B0\u63D2\u5165\u7684\u8282\u70B9 20 \u4E5F\u5220\u9664\u6389\uFF01\u8FD9\u4E2A\u95EE\u9898\u8D85\u51FA\u4E86 CAS \u7684\u89E3\u51B3\u8303\u56F4\u3002</p><img src="'+g+'" alt="\u56FE5-16" style="zoom:50%;"><p>\u56FE5-16 \u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u64CD\u4F5C</p><p>\u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0\u8FD9\u4E2A\u95EE\u9898\u5462\uFF1F</p><p>\u7A76\u5176\u539F\u56E0\uFF1A\u5728\u5220\u9664\u8282\u70B9 10 \u7684\u65F6\u5019\uFF0C\u5B9E\u9645\u53D7\u5230\u64CD\u4F5C\u7684\u662F\u8282\u70B9 10 \u7684\u524D\u9A71\uFF0C\u4E5F\u5C31\u662F\u5934\u8282\u70B9\u3002\u8282\u70B9 10 \u672C\u8EAB\u6CA1\u6709\u4EFB\u4F55\u53D8\u5316\u3002\u6545\u800C\uFF0C\u518D\u5F80\u8282\u70B9 10 \u540E\u63D2\u5165\u8282\u70B9 20 \u7684\u7EBF\u7A0B\uFF0C\u5E76\u4E0D\u77E5\u9053\u8282\u70B9 10 \u5DF2\u7ECF\u88AB\u5220\u9664\u4E86\uFF01</p><p>\u9488\u5BF9\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5728\u8BBA\u6587\u4E2D\u63D0\u51FA\u4E86\u5982\u4E0B\u7684\u89E3\u51B3\u529E\u6CD5\uFF0C\u5982\u56FE5-17 \u6240\u793A\uFF0C\u628A\u8282\u70B9 10 \u7684\u5220\u9664\u5206\u4E3A\u4E24 2 \u6B65\uFF1A</p><img src="'+f+`" alt="\u56FE5-17" style="zoom:50%;"><p>\u56FE5-17 \u5220\u9664 1 \u4E2A\u8282\u70B9\u7684\u4E24\u4E2A\u6B65\u9AA4</p><p>\u7B2C\u4E00\u6B65\uFF0C\u628A\u8282\u70B9 10 \u7684 next \u6307\u9488\uFF0Cmark \u6210\u5220\u9664\uFF0C\u5373\u8F6F\u5220\u9664\uFF1B</p><p>\u7B2C\u4E8C\u6B65\uFF0C\u627E\u673A\u4F1A\uFF0C\u7269\u7406\u5220\u9664\u3002</p><p>\u505A\u6807\u8BB0\u4E4B\u540E\uFF0C\u5F53\u7EBF\u7A0B\u518D\u5F80\u8282\u70B9 10 \u540E\u9762\u63D2\u5165\u8282\u70B9 20 \u7684\u65F6\u5019\uFF0C\u4FBF\u53EF\u4EE5\u5148\u8FDB\u884C\u5224\u65AD\uFF0C\u8282\u70B9 10 \u662F\u5426\u5DF2\u7ECF\u88AB\u5220\u9664\uFF0C\u4ECE\u800C\u907F\u514D\u5728\u4E00\u4E2A\u5220\u9664\u7684\u8282\u70B9 10 \u540E\u9762\u63D2\u5165\u8282\u70B9 20\u3002\u8FD9\u4E2A\u89E3\u51B3\u65B9\u6CD5\u6709\u4E00\u4E2A\u5173\u952E\u70B9\uFF1A\u201C\u628A\u8282\u70B9 10 \u7684 next \u6307\u9488\u6307\u5411\u8282\u70B9 20\uFF08\u63D2\u5165\u64CD\u4F5C\uFF09\u201D \u548C \u201C\u5224\u65AD\u8282\u70B9 10 \u672C\u8EAB\u662F\u5426\u5DF2\u7ECF\u5220\u9664\uFF08\u5224\u65AD\u64CD\u4F5C\uFF09\u201D\uFF0C\u5FC5\u987B\u662F\u539F\u5B50\u7684\uFF0C\u5FC5\u987B\u5728 1 \u4E2A CAS \u64CD\u4F5C\u91CC\u9762\u5B8C\u6210\uFF01</p><p>\u529E\u6CD5\u4E00\uFF1AAtomicMarkableReference</p><p>\u4FDD\u8BC1\u6BCF\u4E2A next \u662F AtomicMarkableReference \u7C7B\u578B\u3002\u4F46\u8FD9\u4E2A\u529E\u6CD5\u4E0D\u591F\u9AD8\u6548\uFF0CDoug Lea \u5728 ConcurrentSkipListMap \u7684\u5B9E\u73B0\u4E2D\u7528\u4E86\u53E6\u4E00\u79CD\u529E\u6CD5\u3002</p><p>\u529E\u6CD5 2\uFF1AMark \u8282\u70B9</p><p>\u6211\u4EEC\u7684\u76EE\u7684\u662F\u6807\u8BB0\u8282\u70B9 10 \u5DF2\u7ECF\u5220\u9664\uFF0C\u4E5F\u5C31\u662F\u6807\u8BB0\u5B83\u7684 next \u5B57\u6BB5\u3002\u90A3\u4E48\u53EF\u4EE5\u65B0\u9020\u4E00\u4E2A marker \u8282\u70B9\uFF0C\u4F7F\u8282\u70B9 10 \u7684 next \u6307\u9488\u6307\u5411\u8BE5 Marker \u8282\u70B9\u3002\u8FD9\u6837\uFF0C\u5F53\u5411\u8282\u70B9 10 \u7684\u540E\u9762\u63D2\u5165\u8282\u70B9 20 \u7684\u65F6\u5019\uFF0C\u5C31\u53EF\u4EE5\u5728\u63D2\u5165\u7684\u540C\u65F6\u5224\u65AD\u8282\u70B9 10 \u7684 next \u6307\u9488\u662F\u5426\u6267\u884C\u4E86\u4E00\u4E2A Marker \u8282\u70B9\uFF0C\u8FD9\u4E24\u4E2A\u64CD\u4F5C\u53EF\u4EE5\u5728\u4E00\u4E2A CAS \u64CD\u4F5C\u91CC\u9762\u5B8C\u6210\u3002</p></li><li><p>\u8DF3\u67E5\u8868</p><p>\u89E3\u51B3\u4E86\u65E0\u9501\u94FE\u8868\u7684\u63D2\u5165\u6216\u5220\u9664\u95EE\u9898\uFF0C\u4E5F\u5C31\u89E3\u51B3\u4E86\u8DF3\u67E5\u8868\u7684\u4E00\u4E2A\u5173\u952E\u95EE\u9898\u3002\u56E0\u4E3A\u8DF3\u67E5\u8868\u5C31\u662F\u591A\u5C42\u94FE\u8868\u53E0\u8D77\u6765\u7684\u3002</p><p>\u4E0B\u9762\u5148\u770B\u4E00\u4E0B\u8DF3\u67E5\u8868\u7684\u6570\u636E\u7ED3\u6784\uFF08\u4E0B\u9762\u6240\u7528\u4EE3\u7801\u90FD\u5F15\u7528\u81EA JDK 7\uFF0CJDK 8 \u4E2D\u7684\u4EE3\u7801\u7565\u6709\u5DEE\u5F02\uFF0C\u4F46\u4E0D\u5F71\u54CD\u4E0B\u9762\u7684\u539F\u7406\u5206\u6790\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5E95\u5C42 Node \u8282\u70B9\u3002\u6240\u6709\u7684 &lt;K,V&gt; \u5BF9\uFF0C\u90FD\u662F\u7531\u8FD9\u4E2A\u5355\u5411\u94FE\u8868\u4E32\u8D77\u6765\u7684</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Object</span> value<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token comment">// ... </span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0A\u9762 Index \u5C42\u7684\u8282\u70B9</span>
<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Index</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0D\u5B58\u50A8\u5B9E\u9645\u6570\u636E\uFF0C\u6307\u5411 Node</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node<span class="token punctuation">;</span>
    <span class="token comment">// \u5173\u952E\u70B9\uFF1A\u6BCF\u4E2A Index \u8282\u70B9\uFF0C\u5FC5\u987B\u6709\u4E00\u4E2A\u6307\u9488\uFF0C\u6307\u5411\u5176\u4E0B\u4E00\u4E2A Level \u5BF9\u5E94\u7684\u8282\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Index</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> down<span class="token punctuation">;</span>
    <span class="token comment">// \u81EA\u5DF1\u4E5F\u7EC4\u6210\u5355\u5411\u94FE\u8868</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Index</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6574\u4E2A ConcurrentSkipListMap \u5C31\u53EA\u9700\u8BB0\u5F55\u9876\u5C42\u7684 head \u8282\u70B9</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentSkipListMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">ConcurrentNavigableMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">HeadIndex</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> head<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8DF3\u67E5\u8868\u7684\u6570\u636E\u7ED3\u6784\u5982\u56FE5-18 \u6240\u793A\u3002</p><img src="`+h+`" alt="\u56FE5-18" style="zoom:50%;"><p>\u56FE5-18 \u8DF3\u67E5\u8868\u7684\u6570\u636E\u7ED3\u6784</p><p>\u4E0B\u9762\u8BE6\u7EC6\u5206\u6790\u5982\u4F55\u4ECE\u8DF3\u67E5\u8868\u4E0A\u67E5\u627E\u3001\u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u3002</p><p>\uFF081\uFF09put \u5B9E\u73B0\u5206\u6790\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">doPut</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">V</span> <span class="token function">doPut</span><span class="token punctuation">(</span><span class="token class-name">K</span> kkey<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> key <span class="token operator">=</span> <span class="token function">comparable</span><span class="token punctuation">(</span>kkey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8981\u63D2\u5165\u8282\u70B9\uFF0C\u9700\u8981\u5148\u627E\u5230\u8282\u70B9\u7684\u524D\u9A71</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> b <span class="token operator">=</span> <span class="token function">findPredecessor</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5143\u7D20\u8981\u63D2\u5728 [b, n] \u4E4B\u95F4</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> n <span class="token operator">=</span> b<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> n<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token comment">// n != b.next\uFF0C\u91CD\u65B0\u5F00\u59CB</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> b<span class="token punctuation">.</span>next<span class="token punctuation">)</span>               
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token class-name">Object</span> v <span class="token operator">=</span> n<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               
                    <span class="token comment">// \u53D1\u73B0 n \u5DF2\u7ECF\u88AB\u5220\u9664\u4E86\uFF0C\u6267\u884C\u5220\u9664\u6E05\u7406\u903B\u8F91</span>
                    n<span class="token punctuation">.</span><span class="token function">helpDelete</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u53D1\u73B0 b \u5DF2\u7ECF\u88AB\u5220\u9664\u4E86\uFF0C\u91CD\u65B0\u5F00\u59CB</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> n <span class="token operator">||</span> b<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> c <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5F85\u63D2\u5165\u7684\u5143\u7D20\uFF0C\u5DF2\u7ECF\u5927\u4E8E n\uFF0C\u5219\u628A [b, n] \u5F80\u540E\u632A\u4E00\u4E2A\u4F4D\u7F6E</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    b <span class="token operator">=</span> n<span class="token punctuation">;</span>
                    n <span class="token operator">=</span> f<span class="token punctuation">;</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u8282\u70B9\u5B58\u5728\uFF0C\u76F4\u63A5\u6539\u503C</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>onlyIfAbsent <span class="token operator">||</span> n<span class="token punctuation">.</span><span class="token function">casValue</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span>v<span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>  
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u82E5\u5F85\u63D2\u5165\u7684\u5143\u7D20\u5728 [b, n] \u4E4B\u95F4\uFF0C\u5219\u4F1A\u8D70\u5230\u8FD9\u4E2A\u4F4D\u7F6E\uFF0C\u63D2\u5165\u65B0\u8282\u70B9</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> z <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>kkey<span class="token punctuation">,</span> value<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u82E5\u8282\u70B9\u4E0D\u5B58\u5728\uFF0C\u5219\u65B0\u5EFA\u4E00\u4E2A\uFF0C\u63D2\u5165\u8FDB\u53BB</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">casNext</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>         
            <span class="token comment">// \u5224\u65AD\u662F\u5426\u8981\u7ED9\u6B64\u8282\u70B9\u52A0\u4E0A Index \u5C42\u3002randomLevel \u6709 50% \u4F1A\u8FD4\u56DE 0\uFF0C</span>
            <span class="token comment">// \u4E5F\u5C31\u662F\u8BF4\uFF0C50% \u7684\u8282\u70B9\u4E0D\u4F1A\u6709 Index \u5C42\uFF0C\u800C\u53EA\u4F1A\u5728\u5E95\u5C42\u7684\u94FE\u8868\u4E0A\u9762</span>
            <span class="token keyword">int</span> level <span class="token operator">=</span> <span class="token function">randomLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>level <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token comment">// level &gt; 0\uFF0C\u4E3A\u5176\u5EFA\u7D22\u5F15</span>
                <span class="token function">insertIndex</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5173\u952E\u51FD\u6570\uFF1A\u67E5\u627E\u4E00\u4E2A\u8282\u70B9\u7684\u524D\u9A71\uFF0C\u4ECE header \u5F00\u59CB\uFF0C\u4ECE\u5DE6\u5F80\u53F3\u3001\u4ECE\u4E0A\u5F80\u4E0B\u904D\u5386</span>
<span class="token keyword">private</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">findPredecessor</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9876\u5C42 index \u7684\u5934\u90E8</span>
        <span class="token class-name">Index</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">Index</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> r <span class="token operator">=</span> q<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> n <span class="token operator">=</span> r<span class="token punctuation">.</span>node<span class="token punctuation">;</span>
                <span class="token class-name">K</span> k <span class="token operator">=</span> n<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
                <span class="token comment">// r \u5BF9\u5E94\u7684 Node \u5DF2\u7ECF\u662F\u5220\u9664\u72B6\u6001</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>            
                    r <span class="token operator">=</span> q<span class="token punctuation">.</span>right<span class="token punctuation">;</span>          
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u8981\u67E5\u627E\u7684\u5143\u7D20 &gt; \u8282\u70B9\uFF0C\u4E00\u76F4\u5F80\u53F3\u904D\u5386</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    q <span class="token operator">=</span> r<span class="token punctuation">;</span>
                    r <span class="token operator">=</span> r<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u4ECE\u4E0A\u9762\u7684 if \u5224\u65AD\u4E2D\u8DF3\u51FA\u6765\uFF0C\u5219\u5F53\u524D\u8282\u70B9\u5904\u4E8E [q, r] \u4E4B\u95F4\uFF0C\u5927\u4E8E q\uFF0C\u5C0F\u4E8E r\uFF0C\u8DF3\u5230\u4E0B\u4E00\u5C42\uFF0C\u4ECE q \u5F00\u59CB</span>
            <span class="token class-name">Index</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> d <span class="token operator">=</span> q<span class="token punctuation">.</span>down<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                q <span class="token operator">=</span> d<span class="token punctuation">;</span>
                r <span class="token operator">=</span> d<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span>
                <span class="token comment">// \u5230\u4E86\u5E95\u5C42\uFF0C\u8FD4\u56DE\u524D\u9A71</span>
                <span class="token keyword">return</span> q<span class="token punctuation">.</span>node<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u56FE5-19 \u6240\u793A\u4E3A\u8DF3\u67E5\u8868\u67E5\u627E\u793A\u610F\u56FE\u3002</p><img src="`+x+`" alt="\u56FE5-19" style="zoom:50%;"><p>\u56FE5-19 \u8DF3\u67E5\u8868\u67E5\u627E\u793A\u610F\u56FE</p><p>\u5728\u5E95\u5C42\uFF0C\u8282\u70B9\u6309\u7167\u4ECE\u5C0F\u5230\u5927\u7684\u987A\u5E8F\u6392\u5217\uFF0C\u4E0A\u9762\u7684 index \u5C42\u95F4\u9694\u5730\u4E32\u5728\u4E00\u8D77\uFF0C\u56E0\u4E3A\u4ECE\u5C0F\u5230\u5927\u6392\u5217\u3002\u67E5\u627E\u7684\u65F6\u5019\uFF0C\u4ECE\u9876\u5C42 index \u5F00\u59CB\uFF0C\u81EA\u5DE6\u5F80\u53F3\u3001\u81EA\u4E0A\u5F80\u4E0B\uFF0C\u5F62\u6210\u56FE\u793A\u7684\u904D\u5386\u66F2\u7EBF\u3002\u5047\u8BBE\u8981\u67E5\u627E\u7684\u5143\u7D20\u662F 32\uFF0C\u904D\u5386\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><p>\u5148\u904D\u5386\u7B2C 2 \u5C42 Index\uFF0C\u53D1\u73B0\u5728 21 \u7684\u540E\u9762\uFF1B</p><p>\u4ECE 21 \u4E0B\u964D\u5230\u7B2C 1 \u5C42 Index\uFF0C\u4ECE 21 \u5F80\u540E\u904D\u5386\uFF0C\u53D1\u73B0\u5728 21 \u548C 35 \u4E4B\u95F4\uFF1B</p><p>\u4ECE 21 \u4E0B\u964D\u5230\u5E95\u5C42\uFF0C\u4ECE 21 \u5F80\u540E\u904D\u5386\uFF0C\u6700\u7EC8\u53D1\u73B0\u5728 29 \u548C 35 \u4E4B\u95F4\u3002</p><p>\u5728\u6574\u4E2A\u7684\u67E5\u627E\u8FC7\u7A0B\u4E2D\uFF0C\u8303\u56F4\u4E0D\u65AD\u7F29\u5C0F\uFF0C\u6700\u7EC8\u5B9A\u4F4D\u5230\u5E95\u5C42\u7684\u4E24\u4E2A\u5143\u7D20\u4E4B\u95F4\u3002</p><p>\u5173\u4E8E\u4E0A\u9762\u7684 put(..) \u51FD\u6570\uFF0C\u6709\u4E00\u4E2A\u5173\u952E\u70B9\u9700\u8981\u8BF4\u660E\uFF1A\u5728\u901A\u8FC7 findPredecessor \u627E\u5230\u4E86\u5F85\u63D2\u5165\u7684\u5143\u7D20\u5728 [b, n] \u4E4B\u95F4\u4E4B\u540E\uFF0C\u5E76\u4E0D\u80FD\u9A6C\u4E0A\u63D2\u5165\u3002\u56E0\u4E3A\u5176\u4ED6\u7EBF\u7A0B\u4E5F\u5728\u64CD\u4F5C\u8FD9\u4E2A\u94FE\u8868\uFF0Cb\u3001n \u90FD\u6709\u53EF\u80FD\u88AB\u5220\u9664\uFF0C\u6240\u4EE5\u5728\u63D2\u5165\u4E4B\u524D\u6267\u884C\u4E86\u4E00\u7CFB\u5217\u7684\u68C0\u67E5\u903B\u8F91\uFF0C\u800C\u8FD9\u4E5F\u6B63\u662F\u65E0\u9501\u94FE\u8868\u7684\u590D\u6742\u4E4B\u5904\u3002</p><p>\uFF082\uFF09remove(..) \u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doRemove</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u82E5\u627E\u5230\u4E86 (k, v)\uFF0C\u5219\u5220\u9664\uFF0C\u5E76\u8FD4\u56DE v\uFF1B\u82E5\u627E\u4E0D\u5230\uFF0C\u5219\u8FD4\u56DE null</span>
<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">doRemove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> okey<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> key <span class="token operator">=</span> <span class="token function">comparable</span><span class="token punctuation">(</span>okey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> b <span class="token operator">=</span> <span class="token function">findPredecessor</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> n <span class="token operator">=</span> b<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> n<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token comment">// \u4E0D\u4E00\u81F4\u8BFB\uFF0C\u91CD\u65B0\u5F00\u59CB</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> b<span class="token punctuation">.</span>next<span class="token punctuation">)</span>                     
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> v <span class="token operator">=</span> n<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token comment">// \u53D1\u73B0 n \u5DF2\u7ECF\u5220\u9664\uFF0C\u6267\u884C\u5220\u9664\u7684\u6E05\u7406\u903B\u8F91</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                     
                n<span class="token punctuation">.</span><span class="token function">helpDelete</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u53D1\u73B0 b \u5DF2\u7ECF\u5220\u9664\uFF0C\u91CD\u65B0\u5F00\u59CB</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> n <span class="token operator">||</span> b<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>       
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8981\u5220\u9664\u7684\u5143\u7D20\u5C0F\u4E8E n\uFF0C\u8BF4\u660E\u6CA1\u627E\u5230\u8981\u5220\u9664\u7684\u5143\u7D20\uFF0C\u8FD4\u56DE null</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8981\u5220\u9664\u7684\u5143\u7D20\u5927\u4E8E n\uFF0C[b, n] \u540E\u79FB\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u91CD\u65B0\u627E</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                b <span class="token operator">=</span> n<span class="token punctuation">;</span>
                n <span class="token operator">=</span> f<span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6CA1\u627E\u5230\u8981\u5220\u9664\u7684\u5143\u7D20 (k, v)\u3002key \u76F8\u7B49\uFF0C\u4F46 value \u4E0D\u5339\u914D\uFF0C\u8FD4\u56DE null</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>value<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8981\u5220\u9664\u7684\u5143\u7D20\u7B49\u4E8E n\u3002\u6267\u884C\u4E0B\u9762\u4E00\u7CFB\u5217\u5220\u9664\u903B\u8F91</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">.</span><span class="token function">casValue</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">.</span><span class="token function">appendMarker</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">casNext</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">findNode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>                   
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">findPredecessor</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            
                <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token function">tryReduceLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span>v<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u5220\u9664\u51FD\u6570\u548C\u63D2\u5165\u51FD\u6570\u7684\u903B\u8F91\u975E\u5E38\u7C7B\u4F3C\uFF0C\u56E0\u4E3A\u65E0\u8BBA\u662F\u63D2\u5165\uFF0C\u8FD8\u662F\u5220\u9664\uFF0C\u90FD\u8981\u5148\u627E\u5230\u5143\u7D20\u7684\u524D\u9A71\uFF0C\u4E5F\u5C31\u662F\u5B9A\u4F4D\u5230\u5143\u7D20\u6240\u5728\u7684\u533A\u95F4 [b, n]\u3002\u5728\u5B9A\u4F4D\u4E4B\u540E\uFF0C\u6267\u884C\u4E0B\u9762\u51E0\u4E2A\u6B65\u9AA4\uFF1A</p><p>\u5982\u679C\u53D1\u73B0 b\u3001n \u5DF2\u7ECF\u88AB\u5220\u9664\u4E86\uFF0C\u5219\u6267\u884C\u5BF9\u5E94\u7684\u5220\u9664\u6E05\u7406\u903B\u8F91\uFF1B</p><p>\u5426\u5219\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u5F85\u5220\u9664\u7684 (k, v)\uFF0C\u8FD4\u56DE null\uFF1B</p><p>\u5982\u679C\u627E\u5230\u4E86\u5F85\u5220\u9664\u7684\u5143\u7D20\uFF0C\u4E5F\u5C31\u662F\u8282\u70B9 n\uFF0C\u5219\u628A n \u7684 value \u7F6E\u4E3A null\uFF0C\u540C\u65F6\u5728 n \u7684\u540E\u9762\u52A0\u4E0A Marker \u8282\u70B9\uFF0C\u540C\u65F6\u68C0\u67E5\u662F\u5426\u9700\u8981\u964D\u4F4E Index \u7684\u5C42\u6B21\u3002</p><p>\uFF083\uFF09get \u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doGet</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">V</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">Object</span> okey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> key <span class="token operator">=</span> <span class="token function">comparable</span><span class="token punctuation">(</span>okey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> n <span class="token operator">=</span> <span class="token function">findNode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> v <span class="token operator">=</span> n<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">findNode</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> b <span class="token operator">=</span> <span class="token function">findPredecessor</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5F85\u67E5\u627E\u5143\u7D20\u5904\u4E8E [b, n] \u4E4B\u95F4</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> n <span class="token operator">=</span> b<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> n<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token comment">// \u4E0B\u9762\u8FD9\u6BB5\u5220\u9664\u7684\u6E05\u7406\u903B\u8F91\u548C\u524D\u9762\u7684\u4E00\u6837</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> b<span class="token punctuation">.</span>next<span class="token punctuation">)</span>                 
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> v <span class="token operator">=</span> n<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 
                n<span class="token punctuation">.</span><span class="token function">helpDelete</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> n <span class="token operator">||</span> b<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>   
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u627E\u5230\u4E86\uFF0C\u8FD4\u56DE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> n<span class="token punctuation">;</span>
            <span class="token comment">// \u6CA1\u6709\u627E\u5230\uFF0C\u8FD4\u56DE null</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// c &lt; 0\uFF0C\u540E\u79FB 1 \u4E2A\u4F4D\u7F6E\uFF0C\u91CD\u65B0\u627E</span>
            b <span class="token operator">=</span> n<span class="token punctuation">;</span>
            n <span class="token operator">=</span> f<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>\u901A\u8FC7\u4E0A\u9762\u7684\u4EE3\u7801\u4F1A\u53D1\u73B0\uFF0C\u65E0\u8BBA\u662F\u63D2\u5165\u3001\u5220\u9664\uFF0C\u8FD8\u662F\u67E5\u627E\uFF0C\u90FD\u6709\u76F8\u4F3C\u7684\u903B\u8F91\uFF0C\u90FD\u9700\u8981\u5148\u5B9A\u4F4D\u5230\u5143\u7D20\u4F4D\u7F6E [b, n]\uFF0C\u7136\u540E\u5224\u65AD b\u3001n \u662F\u5426\u5DF2\u7ECF\u88AB\u5220\u9664\uFF0C\u5982\u679C\u662F\uFF0C\u5219\u9700\u8981\u6267\u884C\u76F8\u5E94\u7684\u5220\u9664\u6E05\u7406\u903B\u8F91\u3002\u8FD9\u4E5F\u6B63\u662F\u65E0\u9501\u94FE\u8868\u590D\u6742\u7684\u5730\u65B9\u3002</p><h3 id="_5-6-2-concurrentskiplistset" tabindex="-1"><a class="header-anchor" href="#_5-6-2-concurrentskiplistset" aria-hidden="true">#</a> 5.6.2 ConcurrentSkipListSet</h3><p>\u5982\u4E0B\u9762\u4EE3\u7801\u6240\u793A\uFF0CConcurrentSkipListSet \u53EA\u662F\u5BF9 ConcurrentSkipListMap \u7684\u7B80\u5355\u5C01\u88C5\uFF0C\u6B64\u5904\u4E0D\u518D\u8FDB\u4E00\u6B65\u5C55\u5F00\u53D9\u8FF0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentSkipListSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">NavigableSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C01\u88C5\u4E86\u4E00\u4E2A ConcurrentSkipListMap</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentNavigableMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">ConcurrentSkipListSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentSkipListMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,149),S=[j];function C(N,A){return s(),a("div",null,S)}var I=n(E,[["render",C],["__file","\u7B2C5\u7AE0\u5E76\u53D1\u5BB9\u5668.html.vue"]]);export{I as default};
