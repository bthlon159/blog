import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.0d56c066.js";var t="/assets/\u56FE3-1.8a2a8bd7.jpeg",e="/assets/\u56FE3-2.9521c9af.jpeg",o="/assets/\u56FE3-3.08dea792.jpeg",c="/assets/\u56FE3-4.9f8819f1.jpeg",l="/assets/\u56FE3-5.eddfd29e.jpeg";const i={},u=p(`<h1 id="\u7B2C-3-\u7AE0-lock-\u4E0E-condition" tabindex="-1"><a class="header-anchor" href="#\u7B2C-3-\u7AE0-lock-\u4E0E-condition" aria-hidden="true">#</a> \u7B2C 3 \u7AE0 Lock \u4E0E Condition</h1><h2 id="_3-1-\u4E92\u65A5\u9501" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4E92\u65A5\u9501" aria-hidden="true">#</a> 3.1 \u4E92\u65A5\u9501</h2><h3 id="_3-1-1-\u9501\u7684\u53EF\u91CD\u5165\u6027" tabindex="-1"><a class="header-anchor" href="#_3-1-1-\u9501\u7684\u53EF\u91CD\u5165\u6027" aria-hidden="true">#</a> 3.1.1 \u9501\u7684\u53EF\u91CD\u5165\u6027</h3><p>\u56E0\u4E3A\u5728 Concurrent \u5305\u4E2D\u7684\u9501\u90FD\u662F \u201C\u53EF\u91CD\u5165\u9501\u201D\uFF0C\u6240\u4EE5\u4E00\u822C\u90FD\u547D\u540D\u4E3A ReentrantX\uFF0C\u56E0\u4E3A\u6240\u6709\u7684\u9501\u3002\u201C\u53EF\u91CD\u5165\u9501\u201D \u662F\u6307\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528 object.lock() \u62FF\u5230\u9501\uFF0C\u8FDB\u5165\u4E92\u65A5\u533A\u540E\uFF0C\u518D\u6B21\u8C03\u7528 object.lock()\uFF0C\u4ECD\u7136\u53EF\u4EE5\u62FF\u5230\u8BE5\u9501\u3002\u5F88\u663E\u7136\uFF0C\u901A\u5E38\u7684\u9501\u90FD\u8981\u8BBE\u8BA1\u6210\u53EF\u91CD\u5165\u7684\uFF0C\u5426\u5219\u5C31\u4F1A\u53D1\u751F\u6B7B\u9501\u3002</p><p>\u7B2C 2 \u7AE0\u8BB2\u7684 synchronized \u5173\u952E\u5B57\uFF0C\u540C\u6837\u662F\u53EF\u91CD\u5165\u9501\u3002\u8003\u8651\u4E0B\u9762\u7684\u5178\u578B\u573A\u666F\uFF1A\u5728\u4E00\u4E2A synchronized \u51FD\u6570 f1() \u91CC\u9762\u8C03\u7528\u53E6\u5916\u4E00\u4E2A synchronized \u51FD\u6570 f2()\u3002\u5982\u679C synchronized \u5173\u952E\u5B57\u4E0D\u53EF\u91CD\u5165\uFF0C\u90A3\u4E48\u5728 f2() \u5904\u5C31\u4F1A\u53D1\u751F\u963B\u585E\uFF0C\u8FD9\u663E\u7136\u4E0D\u53EF\u884C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token keyword">synchronized</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token keyword">synchronized</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-2-\u7C7B\u7EE7\u627F\u5C42\u6B21" tabindex="-1"><a class="header-anchor" href="#_3-1-2-\u7C7B\u7EE7\u627F\u5C42\u6B21" aria-hidden="true">#</a> 3.1.2 \u7C7B\u7EE7\u627F\u5C42\u6B21</h3><p>\u5728\u6B63\u5F0F\u4ECB\u7ECD\u9501\u7684\u5B9E\u73B0\u539F\u7406\u4E4B\u524D\uFF0C\u5148\u770B\u4E00\u4E0B Concurrent \u5305\u4E2D\u7684\u4E0E\u4E92\u65A5\u9501\uFF08ReentrantLock\uFF09\u76F8\u5173\u7C7B\u4E4B\u95F4\u7684\u7EE7\u627F\u5C42\u6B21\uFF0C\u5982\u56FE3-1 \u6240\u793A\u3002</p><img src="`+t+`" alt="\u56FE3-1" style="zoom:50%;"><p>\u56FE3-1 \u4E0E ReentrantLock \u76F8\u5173\u7C7B\u4E4B\u95F4\u7684\u7EE7\u627F\u5C42\u6B21</p><p>\u5728\u56FE3-1 \u4E2D\uFF0CI \u8868\u793A\u754C\u9762\uFF08Interface\uFF09\uFF0CA \u8868\u793A\u62BD\u8C61\u7C7B\uFF08Abstract Class\uFF09\uFF0CC \u8868\u793A\u7C7B\uFF08Class\uFF09\uFF0C$ \u8868\u793A\u5185\u90E8\u7C7B\u3002\u5B9E\u7EBF\u8868\u793A\u7EE7\u627F\u5173\u7CFB\uFF0C\u865A\u7EBF\u8868\u793A\u5F15\u7528\u5173\u7CFB\u3002\u672C\u4E66\u4E2D\u6240\u6709\u5173\u4E8E\u7C7B\u7684\u7EE7\u627F\u5C42\u6B21\u7684\u56FE\u7247\u90FD\u9075\u5FAA\u8FD9\u4E2A\u56FE\u4F8B\u3002</p><p>Lock \u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5176\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Lock</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token keyword">long</span> time<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Condition</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E38\u7528\u7684\u65B9\u6CD5\u662F lock() /unlock()\u3002lock() \u4E0D\u80FD\u88AB\u4E2D\u65AD\uFF0C\u5BF9\u5E94\u7684 lockInterruptibly() \u53EF\u4EE5\u88AB\u4E2D\u65AD\u3002</p><p>ReentrantLock \u672C\u8EAB\u6CA1\u6709\u4EE3\u7801\u903B\u8F91\uFF0C\u5B9E\u73B0\u90FD\u5728\u5176\u5185\u90E8\u7C7B Sync \u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReentrantLock</span> <span class="token keyword">implements</span> <span class="token class-name">Lock</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Sync</span> sync<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sync<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sync<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-3-\u9501\u7684\u516C\u5E73\u6027-vs-\u975E\u516C\u5E73\u6027" tabindex="-1"><a class="header-anchor" href="#_3-1-3-\u9501\u7684\u516C\u5E73\u6027-vs-\u975E\u516C\u5E73\u6027" aria-hidden="true">#</a> 3.1.3 \u9501\u7684\u516C\u5E73\u6027 vs \u975E\u516C\u5E73\u6027</h3><p>Sync \u662F\u4E00\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u5B83\u6709\u4E24\u4E2A\u5B50\u7C7B FairSync \u4E0E NonfairSync\uFF0C\u5206\u522B\u5BF9\u5E94\u516C\u5E73\u9501\u548C\u975E\u516C\u5E73\u9501\u3002\u4ECE\u4E0B\u9762\u7684 ReentrantLock \u6784\u9020\u51FD\u6570\u53EF\u4EE5\u770B\u51FA\uFF0C\u4F1A\u4F20\u5165\u4E00\u4E2A\u5E03\u5C14\u7C7B\u578B\u7684\u53D8\u91CF fair \u6307\u5B9A\u9501\u662F\u516C\u5E73\u7684\u8FD8\u662F\u975E\u516C\u5E73\u7684\uFF0C\u9ED8\u8BA4\u4E3A\u975E\u516C\u5E73\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NonfairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync <span class="token operator">=</span> fair <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">FairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">NonfairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EC0\u4E48\u53EB\u516C\u5E73\u9501\u548C\u975E\u516C\u5E73\u9501\u5462\uFF1F\u5148\u4E3E\u4E2A\u73B0\u5B9E\u751F\u6D3B\u4E2D\u7684\u4F8B\u5B50\uFF0C\u4E00\u4E2A\u4EBA\u53BB\u706B\u8F66\u7AD9\u552E\u7968\u7A97\u53E3\u4E70\u7968\uFF0C\u53D1\u73B0\u73B0\u573A\u6709\u4EBA\u6392\u961F\uFF0C\u4E8E\u662F\u4ED6\u6392\u5728\u961F\u4F0D\u672B\u5C3E\uFF0C\u9075\u5FAA\u5148\u5230\u8005\u4F18\u5148\u670D\u52A1\u7684\u89C4\u5219\uFF0C\u8FD9\u53EB\u516C\u5E73\uFF1B\u5982\u679C\u4ED6\u53BB\u4E86\u4E0D\u6392\u961F\uFF0C\u76F4\u63A5\u51B2\u5230\u7A97\u53E3\u4E70\u7968\uFF0C\u8FD9\u53EB\u4F5C\u4E0D\u516C\u5E73\u3002</p><p>\u5BF9\u5E94\u5230\u9501\u7684\u4F8B\u5B50\uFF0C\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\u6765\u4E86\u4E4B\u540E\uFF0C\u770B\u5230\u6709\u5F88\u591A\u7EBF\u7A0B\u5728\u6392\u961F\uFF0C\u81EA\u5DF1\u6392\u5230\u961F\u4F0D\u672B\u5C3E\uFF0C\u8FD9\u53EB\u516C\u5E73\uFF1B\u7EBF\u7A0B\u6765\u4E86\u4E4B\u540E\u76F4\u63A5\u53BB\u62A2\u9501\uFF0C\u8FD9\u53EB\u4F5C\u4E0D\u516C\u5E73\u3002\u4E0D\u540C\u4E8E\u73B0\u5B9E\u751F\u6D3B\uFF0C\u8FD9\u91CC\u9ED8\u8BA4\u8BBE\u7F6E\u7684\u662F\u975E\u516C\u5E73\u9501\uFF0C\u5176\u5B9E\u662F\u4E3A\u4E86\u63D0\u9AD8\u6548\u7387\uFF0C\u51CF\u5C11\u7EBF\u7A0B\u5207\u6362\u3002</p><p>\u540E\u9762\u4F1A\u8BE6\u7EC6\u5730\u901A\u8FC7\u4EE3\u7801\u6765\u5BF9\u6BD4\u516C\u5E73\u9501\u548C\u975E\u516C\u5E73\u9501\u5728\u5B9E\u73B0\u4E0A\u7684\u5DEE\u5F02\u3002</p><h3 id="_3-1-4-\u9501\u5B9E\u73B0\u7684\u57FA\u672C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-1-4-\u9501\u5B9E\u73B0\u7684\u57FA\u672C\u539F\u7406" aria-hidden="true">#</a> 3.1.4 \u9501\u5B9E\u73B0\u7684\u57FA\u672C\u539F\u7406</h3><p>Sync \u7684\u7236\u7C7B AbstractQueuedSynchronizer \u7ECF\u5E38\u88AB\u79F0\u4F5C\u961F\u5217\u540C\u6B65\u5668\uFF08AQS\uFF09\uFF0C\u8FD9\u4E2A\u7C7B\u975E\u5E38\u5173\u952E\uFF0C\u4E0B\u9762\u4F1A\u53CD\u590D\u63D0\u5230\uFF0C\u8BE5\u7C7B\u7684\u7236\u7C7B\u662F AbstractOwnableSynchronizer\u3002</p><p>\u4E0A\u4E00\u7AE0\u8BB2\u7684 Atomic \u7C7B\u90FD\u662F \u201C\u81EA\u65CB\u201D \u6027\u8D28\u7684\u9501\uFF0C\u800C\u672C\u7AE0\u8BB2\u7684\u9501\u5C06\u5177\u5907 synchronized \u529F\u80FD\uFF0C\u4E5F\u5C31\u662F\u53EF\u4EE5\u963B\u585E\u4E00\u4E2A\u7EBF\u7A0B\u3002\u4E3A\u4E86\u5B9E\u73B0\u4E00\u628A\u5177\u6709\u963B\u585E\u6216\u5524\u9192\u529F\u80FD\u7684\u9501\uFF0C\u9700\u8981\u51E0\u4E2A\u6838\u5FC3\u8981\u7D20\uFF1A</p><ol><li><p>\u9700\u8981\u4E00\u4E2A state \u53D8\u91CF\uFF0C\u6807\u8BB0\u8BE5\u9501\u7684\u72B6\u6001\u3002state \u53D8\u91CF\u81F3\u5C11\u6709\u4E24\u4E2A\u503C\uFF1A0\u30011\u3002</p><p>\u5BF9 state \u53D8\u91CF\u7684\u64CD\u4F5C\uFF0C\u8981\u786E\u4FDD\u7EBF\u7A0B\u5B89\u5168\uFF0C\u4E5F\u5C31\u662F\u4F1A\u7528\u5230 CAS\u3002</p></li><li><p>\u9700\u8981\u8BB0\u5F55\u5F53\u524D\u662F\u54EA\u4E2A\u7EBF\u7A0B\u6301\u6709\u9501\u3002</p></li><li><p>\u9700\u8981\u5E95\u5C42\u652F\u6301\u5BF9\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u884C\u963B\u585E\u6216\u5524\u9192\u64CD\u4F5C\u3002</p></li><li><p>\u9700\u8981\u6709\u4E00\u4E2A\u961F\u5217\u7EF4\u62A4\u6240\u6709\u963B\u585E\u7684\u7EBF\u7A0B\u3002\u8FD9\u4E2A\u961F\u5217\u4E5F\u5FC5\u987B\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\u65E0\u9501\u961F\u5217\uFF0C\u4E5F\u9700\u8981\u7528\u5230 CAS\u3002</p></li></ol><p>\u9488\u5BF9\u8981\u7D20 1\u30012\uFF0C\u5728\u4E0A\u9762\u4E24\u4E2A\u7C7B\u4E2D\u6709\u5BF9\u5E94\u7684\u4F53\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractOwnableSynchronizer</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u8BB0\u5F55\u9501\u88AB\u54EA\u4E2A\u7EBF\u7A0B\u6301\u6709</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Thread</span> exclusiveOwnerThread<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractOwnableSynchronizer</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BB0\u5F55\u9501\u7684\u72B6\u6001\uFF0C\u901A\u8FC7 CAS \u4FEE\u6539 state \u503C</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> state<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>state \u53D6\u503C\u4E0D\u4EC5\u53EF\u4EE5\u662F 0\u30011\uFF0C\u8FD8\u53EF\u4EE5\u5927\u4E8E 1\uFF0C\u5C31\u662F\u4E3A\u4E86\u652F\u6301\u9501\u7684\u53EF\u91CD\u5165\u6027\u3002\u4F8B\u5982\uFF0C\u540C\u6837\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u8C03\u7528 5 \u6B21 lock\uFF0Cstate \u4F1A\u53D8\u6210 5\uFF1B\u7136\u540E\u8C03\u7528 5 \u6B21 unlock\uFF0Cstate \u51CF\u4E3A 0\u3002</p><p>\u5F53 state = 0 \u65F6\uFF0C\u6CA1\u6709\u7EBF\u7A0B\u6301\u6709\u9501\uFF0CexclusiveOwnerThread = null\uFF1B</p><p>\u5F53 state = 1 \u65F6\uFF0C\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6301\u6709\u9501\uFF0CexclusiveOwnerThread = \u8BE5\u7EBF\u7A0B\uFF1B</p><p>\u5F53 state &gt; 1 \u65F6\uFF0C\u8BF4\u660E\u8BE5\u7EBF\u7A0B\u91CD\u5165\u4E86\u8BE5\u9501\u3002\u9488\u5BF9\u8981\u7D20 3\uFF0C\u5728 Unsafe \u7C7B\u4E2D\uFF0C\u63D0\u4F9B\u4E86\u963B\u585E\u6216\u5524\u9192\u7EBF\u7A0B\u7684\u4E00\u5BF9\u64CD\u4F5C\u539F\u8BED\uFF0C\u4E5F\u5C31\u662F park / unpark\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">unpark</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E00\u4E2A LockSupport \u7684\u5DE5\u5177\u7C7B\uFF0C\u5BF9\u8FD9\u4E00\u5BF9\u539F\u8BED\u505A\u4E86\u7B80\u5355\u5C01\u88C5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LockSupport</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        UNSAFE<span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">unpark</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> thread<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>thread <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            UNSAFE<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5F53\u524D\u7EBF\u7A0B\u4E2D\u8C03\u7528 park()\uFF0C\u8BE5\u7EBF\u7A0B\u5C31\u4F1A\u88AB\u963B\u585E\uFF1B\u5728\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u4E2D\uFF0C\u8C03\u7528 unpark(Thread t)\uFF0C\u4F20\u5165\u4E00\u4E2A\u88AB\u963B\u585E\u7684\u7EBF\u7A0B\uFF0C\u5C31\u53EF\u4EE5\u5524\u9192\u963B\u585E\u5728 park() \u5730\u65B9\u7684\u7EBF\u7A0B\u3002</p><p>\u5C24\u5176\u662F unpark(Thread t)\uFF0C\u5B83\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u7684 \u201C\u7CBE\u51C6\u5524\u9192\u201D\u3002\u524D\u9762\u8BB2\u5230\u7684 wait() / notify()\uFF0Cnotify \u4E5F\u53EA\u662F\u5524\u9192\u67D0\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u4F46\u65E0\u6CD5\u6307\u5B9A\u5177\u4F53\u5524\u9192\u54EA\u4E2A\u7EBF\u7A0B\u3002</p><p>\u9488\u5BF9\u8981\u7D20 4\uFF0C\u5728 AQS \u4E2D\u5229\u7528\u53CC\u5411\u94FE\u8868\u548C CAS \u5B9E\u73B0\u4E86\u4E00\u4E2A\u963B\u585E\u961F\u5217\u3002\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6BCF\u4E2A Node \u5BF9\u5E94\u4E00\u4E2A\u88AB\u963B\u585E\u7684\u7EBF\u7A0B</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> thread<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Node</span> prev<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Node</span> next<span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span> head<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span> tail<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u963B\u585E\u961F\u5217\u662F\u6574\u4E2A AQS \u6838\u5FC3\u4E2D\u7684\u6838\u5FC3\uFF0C\u4E0B\u9762\u505A\u8FDB\u4E00\u6B65\u7684\u9610\u8FF0\u3002\u5982\u56FE3-2 \u6240\u793A\uFF0Chead \u6307\u5411\u53CC\u5411\u94FE\u8868\u5934\u90E8\uFF0Ctail \u6307\u5411\u53CC\u5411\u94FE\u8868\u5C3E\u90E8\u3002\u5165\u961F\u5C31\u662F\u628A\u65B0\u7684 Node \u52A0\u5230 tail \u540E\u9762\uFF0C\u7136\u540E\u5BF9 tail \u8FDB\u884C CAS \u64CD\u4F5C\uFF1B\u51FA\u961F\u5C31\u662F\u5BF9 head \u8FDB\u884C CAS \u64CD\u4F5C\uFF0C\u628A head \u5411\u540E\u79FB\u4E00\u4E2A\u4F4D\u7F6E\u3002</p><img src="`+e+`" alt="\u56FE3-2" style="zoom:50%;"><p>\u56FE3-2 \u963B\u585E\u961F\u5217\u7684\u793A\u610F\u56FE</p><p>\u521D\u59CB\u7684\u65F6\u5019\uFF0Chead = tail = NULL\uFF1B\u7136\u540E\uFF0C\u5728\u5F80\u961F\u5217\u4E2D\u52A0\u5165\u963B\u585E\u7684\u7EBF\u7A0B\u65F6\uFF0C\u4F1A\u65B0\u5EFA\u4E00\u4E2A\u7A7A\u7684 Node\uFF0C\u8BA9 head \u548C tail \u90FD\u6307\u5411\u8FD9\u4E2A\u7A7A Node\uFF1B\u4E4B\u540E\uFF0C\u5728\u540E\u9762\u52A0\u5165\u88AB\u963B\u585E\u7684\u7EBF\u7A0B\u5BF9\u8C61\u3002\u6240\u4EE5\uFF0C\u5F53 head = tail \u7684\u65F6\u5019\uFF0C\u8BF4\u660E\u961F\u5217\u4E3A\u7A7A\u3002</p><h3 id="_3-1-5-\u516C\u5E73\u4E0E\u975E\u516C\u5E73\u7684-lock-\u5B9E\u73B0\u5DEE\u5F02" tabindex="-1"><a class="header-anchor" href="#_3-1-5-\u516C\u5E73\u4E0E\u975E\u516C\u5E73\u7684-lock-\u5B9E\u73B0\u5DEE\u5F02" aria-hidden="true">#</a> 3.1.5 \u516C\u5E73\u4E0E\u975E\u516C\u5E73\u7684 lock() \u5B9E\u73B0\u5DEE\u5F02</h3><p>\u4E0B\u9762\u5206\u6790\u57FA\u4E8E AQS\uFF0CReentrantLock \u5728\u516C\u5E73\u6027\u548C\u975E\u516C\u5E73\u6027\u4E0A\u7684\u5B9E\u73B0\u5DEE\u5F02\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">NonfairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">FairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u6CA1\u6709\u4E00\u4E0A\u6765\u5C31\u62A2\u9501\uFF0C\u5728\u8FD9\u4E2A\u51FD\u6570\u5185\u90E8\u6392\u961F\uFF0C\u662F\u516C\u5E73\u7684</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>acquire() \u662F AQS \u7684\u4E00\u4E2A\u6A21\u677F\u65B9\u6CD5\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tryAcquire(..) \u662F\u4E00\u4E2A\u865A\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u518D\u6B21\u5C1D\u8BD5\u62FF\u9501\uFF0C\u88AB NonfairSync \u4E0E FairSync \u5206\u522B\u5B9E\u73B0\u3002acquireQueued(..) \u51FD\u6570\u7684\u76EE\u7684\u662F\u628A\u7EBF\u7A0B\u653E\u5165\u963B\u585E\u961F\u5217\uFF0C\u7136\u540E\u963B\u585E\u8BE5\u7EBF\u7A0B\u3002</p><p>\u4E0B\u9762\u518D\u5206\u522B\u6765\u770B FairSync \u4E0E NonfairSync \u7684 tryAcquire(1) \u6709\u4EC0\u4E48\u533A\u522B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">abstract</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">nonfairTryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u65E0\u4EBA\u6301\u6709\u9501\uFF0C\u5C31\u5F00\u59CB\u4E0B\u9762\u7684\u62A2\u9501</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u62FF\u9501\u6210\u529F\uFF0C\u628A currentThread \u8BBE\u7F6E\u6210\u5F53\u524D\u7EBF\u7A0B</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5DF2\u7ECF\u62FF\u5230\u9501\uFF0C\u518D\u6B21\u91CD\u5165\uFF0C\u76F4\u63A5\u7D2F\u52A0 state \u53D8\u91CF</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">+</span> acquires<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Maximum lock count exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setState</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">FairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasQueuedPredecessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">+</span> acquires<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Maximum lock count exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setState</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E24\u6BB5\u4EE3\u7801\u975E\u5E38\u76F8\u4F3C\uFF0C\u552F\u4E00\u7684\u533A\u522B\u662F\u7B2C\u4E8C\u6BB5\u4EE3\u7801\u591A\u4E86\u4E00\u4E2A if (!hasQueuedPredecessors())\u3002\u4EC0\u4E48\u610F\u601D\u5462\uFF1F\u5C31\u662F\u53EA\u6709\u5F53 c == 0\uFF08\u6CA1\u6709\u7EBF\u7A0B\u6301\u6709\u9501\uFF09\uFF0C\u5E76\u4E14\u6392\u5728\u961F\u5217\u7684\u7B2C 1 \u4E2A\u65F6\uFF08\u5373\u5F53\u961F\u5217\u4E2D\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u7684\u65F6\u5019\uFF09\uFF0C\u624D\u53BB\u62A2\u9501\uFF0C\u5426\u5219\u7EE7\u7EED\u6392\u961F\uFF0C\u8FD9\u624D\u53EB \u201C\u516C\u5E73\u201D\uFF01</p><h3 id="_3-1-6-\u963B\u585E\u961F\u5217\u4E0E\u5524\u9192\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#_3-1-6-\u963B\u585E\u961F\u5217\u4E0E\u5524\u9192\u673A\u5236" aria-hidden="true">#</a> 3.1.6 \u963B\u585E\u961F\u5217\u4E0E\u5524\u9192\u673A\u5236</h3><p>\u4E0B\u9762\u8FDB\u5165\u9501\u7684\u6700\u4E3A\u5173\u952E\u7684\u90E8\u5206\uFF0C\u5373 acquireQueued(..) \u51FD\u6570\u5185\u90E8\u4E00\u63A2\u7A76\u7ADF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u8BF4 addWaiter(..) \u51FD\u6570\uFF0C\u5C31\u662F\u4E3A\u5F53\u524D\u7EBF\u7A0B\u751F\u6210\u4E00\u4E2A Node\uFF0C\u7136\u540E\u628A Node \u653E\u5165\u53CC\u5411\u94FE\u8868\u7684\u5C3E\u90E8\u3002\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u8FD9\u53EA\u662F\u628A Thread \u5BF9\u8C61\u653E\u5165\u4E86\u4E00\u4E2A\u961F\u5217\u4E2D\u800C\u5DF2\uFF0C\u7EBF\u7A0B\u672C\u8EAB\u5E76\u672A\u963B\u585E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> pred <span class="token operator">=</span> tail<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred<span class="token punctuation">;</span>
        <span class="token comment">// \u5148\u5C1D\u8BD5\u52A0\u5230\u961F\u5217\u5C3E\u90E8\uFF0C\u5982\u679C\u4E0D\u6210\u529F\uFF0C\u5219\u6267\u884C\u4E0B\u9762\u7684 enq(node)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetTail</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pred<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
            <span class="token keyword">return</span> node<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// enq \u5185\u90E8\u4F1A\u8FDB\u884C\u961F\u5217\u7684\u521D\u59CB\u5316\uFF0C\u65B0\u5EFA\u4E00\u4E2A\u7A7A\u7684 Node\u3002\u7136\u540E\u4E0D\u65AD\u5C1D\u8BD5\u81EA\u65CB\uFF0C\u76F4\u5230\u6210\u529F\u5730\u628A Node \u52A0\u5165\u961F\u5217\u5C3E\u90E8\u4E3A\u6B62</span>
    <span class="token function">enq</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 addWaiter(..) \u51FD\u6570\u628A Thread \u5BF9\u8C61\u52A0\u5165\u963B\u585E\u961F\u5217\u4E4B\u540E\u7684\u5DE5\u4F5C\u5C31\u8981\u9760 acquireQueued(..) \u51FD\u6570\u5B8C\u6210\u3002\u7EBF\u7A0B\u4E00\u65E6\u8FDB\u5165 acquireQueued(..) \u5C31\u4F1A\u88AB\u65E0\u9650\u671F\u963B\u585E\uFF0C\u5373\u4F7F\u6709\u5176\u4ED6\u7EBF\u7A0B\u8C03\u7528 interrupt() \u51FD\u6570\u4E5F\u4E0D\u80FD\u5C06\u5176\u5524\u9192\uFF0C\u9664\u975E\u6709\u5176\u4ED6\u7EBF\u7A0B\u91CA\u653E\u4E86\u9501\uFF0C\u5E76\u4E14\u8BE5\u7EBF\u7A0B\u62FF\u5230\u4E86\u9501\uFF0C\u624D\u4F1A\u4ECE accquireQueued(..) \u8FD4\u56DE\u3002</p><p>\u6CE8\u610F\uFF1A\u8FDB\u5165 acquireQueued(..)\uFF0C\u8BE5\u7EBF\u7A0B\u88AB\u963B\u585E\u3002\u5728\u8BE5\u51FD\u6570\u8FD4\u56DE\u7684\u4E00\u523B\uFF0C\u5C31\u662F\u62FF\u5230\u9501\u7684\u90A3\u4E00\u523B\uFF0C\u4E5F\u5C31\u662F\u88AB\u5524\u9192\u7684\u90A3\u4E00\u523B\uFF0C\u6B64\u65F6\u4F1A\u5220\u9664\u961F\u5217\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF08head \u6307\u9488\u524D\u79FB 1 \u4E2A\u8282\u70B9\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Node</span> node<span class="token punctuation">,</span> <span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> failed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> interrupted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">Node</span> p <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">predecessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u88AB\u5524\u9192\uFF0C\u5982\u679C\u81EA\u5DF1\u5728\u961F\u5217\u5934\u90E8\uFF08\u81EA\u5DF1\u7684\u524D\u4E00\u4E2A\u8282\u70B9\u662F head \u6307\u5411\u7684\u7A7A\u8282\u70B9\uFF09\uFF0C\u5219\u5C1D\u8BD5\u62FF\u9501</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> head <span class="token operator">&amp;&amp;</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u62FF\u9501\u6210\u529F\uFF0C\u51FA\u961F\u5217\uFF08\u5373 head \u6307\u9488\u524D\u79FB\u4E00\u4E2A\u8282\u70B9\uFF09\uFF0C\u540C\u65F6\u4F1A\u628A node \u7684 thread \u53D8\u91CF\u7F6E\u4E3A NULL\uFF0C</span>
                <span class="token comment">// \u6240\u4EE5 head \u8FD8\u662F\u6307\u5411\u4E86\u4E00\u4E2A\u7A7A\u8282\u70B9</span>
                <span class="token function">setHead</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                failed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> interrupted<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldParkAfterFailedAcquire</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token comment">// \u81EA\u5DF1\u8C03\u7528 park() \u963B\u585E\u81EA\u5DF1</span>
                <span class="token function">parkAndCheckInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                interrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
            <span class="token function">cancelAcquire</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\uFF0CacquireQueued(..) \u51FD\u6570\u6709\u4E00\u4E2A\u8FD4\u56DE\u503C\uFF0C\u8868\u793A\u4EC0\u4E48\u610F\u601D\u5462\uFF1F\u867D\u7136\u8BE5\u51FD\u6570\u4E0D\u4F1A\u4E2D\u65AD\u54CD\u5E94\uFF0C\u4F46\u5B83\u4F1A\u8BB0\u5F55\u88AB\u963B\u585E\u671F\u95F4\u6709\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u5411\u5B83\u53D1\u9001\u8FC7\u4E2D\u65AD\u4FE1\u53F7\u3002\u5982\u679C\u6709\uFF0C\u5219\u8BE5\u51FD\u6570\u4F1A\u8FD4\u56DE true\uFF1B\u5426\u5219\uFF0C\u8FD4\u56DE false\u3002</p><p>\u57FA\u4E8E\u8FD9\u4E2A\u8FD4\u56DE\u503C\uFF0C\u624D\u6709\u4E86\u4E0B\u9762\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53 acquireQueued(..) \u8FD4\u56DE true \u65F6\uFF0C\u4F1A\u8C03\u7528 selfInterrupt()\uFF0C\u81EA\u5DF1\u7ED9\u81EA\u5DF1\u53D1\u9001\u4E2D\u65AD\u4FE1\u53F7\uFF0C\u4E5F\u5C31\u662F\u81EA\u5DF1\u628A\u81EA\u5DF1\u7684\u4E2D\u65AD\u6807\u5FD7\u4F4D\u8BBE\u4E3A true\u3002\u4E4B\u6240\u4EE5\u8981\u8FD9\u4E48\u505A\uFF0C\u662F\u56E0\u4E3A\u81EA\u5DF1\u5728\u963B\u585E\u671F\u95F4\uFF0C\u6536\u5230\u5176\u4ED6\u7EBF\u7A0B\u4E2D\u65AD\u4FE1\u53F7\u6CA1\u6709\u53CA\u65F6\u54CD\u5E94\uFF0C\u73B0\u5728\u8981\u8FDB\u884C\u8865\u507F\u3002\u8FD9\u6837\u4E00\u6765\uFF0C\u5982\u679C\u8BE5\u7EBF\u7A0B\u5728 lock \u4EE3\u7801\u5757\u5185\u90E8\u6709\u8C03\u7528 sleep() \u4E4B\u7C7B\u7684\u963B\u585E\u65B9\u6CD5\uFF0C\u5C31\u53EF\u4EE5\u629B\u51FA\u5F02\u5E38\uFF0C\u54CD\u5E94\u8BE5\u4E2D\u65AD\u4FE1\u53F7\u3002</p><p>\u963B\u585E\u5C31\u53D1\u751F\u5728\u4E0B\u9762\u8FD9\u4E2A\u51FD\u6570\u4E2D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">parkAndCheckInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EBF\u7A0B\u8C03\u7528 park() \u51FD\u6570\uFF0C\u81EA\u5DF1\u628A\u81EA\u5DF1\u963B\u585E\u8D77\u6765\uFF0C\u76F4\u5230\u88AB\u5176\u4ED6\u7EBF\u7A0B\u5524\u9192\uFF0C\u8BE5\u51FD\u6570\u8FD4\u56DE\u3002park() \u51FD\u6570\u8FD4\u56DE\u6709\u4E24\u79CD\u60C5\u51B5\u3002</p><p>\u60C5\u51B5 1\uFF1A\u5176\u4ED6\u7EBF\u7A0B\u8C03\u7528\u4E86 unpark(Thread t)\u3002</p><p>\u60C5\u51B5 2\uFF1A\u5176\u4ED6\u7EBF\u7A0B\u8C03\u7528\u4E86 t.interrupt()\u3002\u8FD9\u91CC\u8981\u6CE8\u610F\u7684\u662F\uFF0Clock() \u4E0D\u80FD\u54CD\u5E94\u4E2D\u65AD\uFF0C\u4F46 LockSupport.park() \u4F1A\u54CD\u5E94\u4E2D\u65AD\u3002</p><p>\u4E5F\u6B63\u56E0\u4E3A LockSupport.park() \u53EF\u80FD\u88AB\u4E2D\u65AD\u5524\u9192\uFF0CacquireQueued(..) \u51FD\u6570\u624D\u5199\u4E86\u4E00\u4E2A for \u6B7B\u5FAA\u73AF\u3002\u5524\u9192\u4E4B\u540E\uFF0C\u5982\u679C\u53D1\u73B0\u81EA\u5DF1\u6392\u5728\u961F\u5217\u5934\u90E8\uFF0C\u5C31\u53BB\u62FF\u9501\uFF1B\u5982\u679C\u62FF\u4E0D\u5230\u9501\uFF0C\u5219\u518D\u6B21\u81EA\u5DF1\u963B\u585E\u81EA\u5DF1\u3002\u4E0D\u65AD\u91CD\u590D\u6B64\u8FC7\u7A0B\uFF0C\u76F4\u5230\u62FF\u5230\u9501\u3002</p><p>\u88AB\u5524\u9192\u4E4B\u540E\uFF0C\u901A\u8FC7 Thread.interrupted() \u6765\u5224\u65AD\u662F\u5426\u88AB\u4E2D\u65AD\u5524\u9192\u3002\u5982\u679C\u662F\u60C5\u51B5 1\uFF0C\u4F1A\u8FD4\u56DE false\uFF1B\u5982\u679C\u662F\u60C5\u51B5 2\uFF0C\u5219\u8FD4\u56DE true\u3002</p><h3 id="_3-1-7-unlock-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_3-1-7-unlock-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 3.1.7 unlock() \u5B9E\u73B0\u5206\u6790</h3><p>\u8BF4\u5B8C\u4E86 lock\uFF0C\u4E0B\u9762\u5206\u6790 unlock \u7684\u5B9E\u73B0\u3002unlock \u4E0D\u533A\u5206\u516C\u5E73\u8FD8\u662F\u975E\u516C\u5E73\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryRelease</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span> h <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> h<span class="token punctuation">.</span>waitStatus <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">unparkSuccessor</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryRelease</span><span class="token punctuation">(</span><span class="token keyword">int</span> releases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> releases<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5F88\u663E\u7136\uFF0C\u53EA\u6709\u9501\u7684\u62E5\u6709\u8005\u624D\u6709\u8D44\u683C\u8C03\u7528 unlock() \u51FD\u6570\uFF0C\u5426\u5219\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> free <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6BCF\u8C03\u7528 1 \u6B21 tryRelease\uFF0Cstate \u503C\u51CF 1\uFF0C\u76F4\u5230\u51CF\u5230 0\uFF0C\u624D\u4EE3\u8868\u9501\u53EF\u4EE5\u88AB\u6210\u529F\u91CA\u653E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        free <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5173\u952E\u70B9\uFF1A\u6CA1\u6709\u4F7F\u7528 CAS\uFF0C\u800C\u662F\u76F4\u63A5\u7528 set\u3002\u56E0\u4E3A\u662F\u6392\u4ED6\u9501\uFF0C\u53EA\u6709 1 \u4E2A\u7EBF\u7A0B\u80FD\u8C03\u51CF state \u503C</span>
    <span class="token function">setState</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> free<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">unparkSuccessor</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token class-name">Node</span> s <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> s<span class="token punctuation">.</span>waitStatus <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> t <span class="token operator">=</span> tail<span class="token punctuation">;</span> t <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> t <span class="token operator">!=</span> node<span class="token punctuation">;</span> t <span class="token operator">=</span> t<span class="token punctuation">.</span>prev<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>waitStatus <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                s <span class="token operator">=</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5173\u952E\u7684\u4E00\u53E5</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>release() \u91CC\u9762\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1AtryRelease(..) \u51FD\u6570\u91CA\u653E\u9501\uFF1BunparkSuccessor(..) \u51FD\u6570\u5524\u9192\u961F\u5217\u4E2D\u7684\u540E\u7EE7\u8005\u3002</p><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u6709\u4E00\u4E2A\u5173\u952E\u70B9\u8981\u8BF4\u660E\uFF1A\u56E0\u4E3A\u662F\u6392\u4ED6\u9501\uFF0C\u53EA\u6709\u5DF2\u7ECF\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u624D\u6709\u8D44\u683C\u8C03\u7528 release(..)\uFF0C\u8FD9\u610F\u5473\u7740\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u4E0E\u5B83\u4E89\u62A2\u3002\u6240\u4EE5\uFF0C\u5728\u4E0A\u9762\u7684 tryRelease(..) \u51FD\u6570\u4E2D\uFF0C\u5BF9 state \u503C\u7684\u4FEE\u6539\uFF0C\u4E0D\u9700\u8981 CAS \u64CD\u4F5C\uFF0C\u76F4\u63A5\u51CF 1 \u5373\u53EF\u3002</p><p>\u4F46\u5BF9\u4E8E\u8BFB\u5199\u9501\u4E2D\u7684\u8BFB\u9501\uFF0C\u4E5F\u5C31\u662F releaseShared(..)\uFF0C\u5C31\u4E0D\u4E00\u6837\u4E86\uFF0C\u89C1\u540E\u7EED\u5206\u6790\u3002</p><h3 id="_3-1-8-lockinterruptibly-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_3-1-8-lockinterruptibly-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 3.1.8 lockInterruptibly() \u5B9E\u73B0\u5206\u6790</h3><p>\u4E0A\u9762\u7684 lock \u4E0D\u80FD\u88AB\u4E2D\u65AD\uFF0C\u8FD9\u91CC\u7684 lockInterruptibly() \u53EF\u4EE5\u88AB\u4E2D\u65AD\uFF0C\u4E0B\u9762\u770B\u4E00\u4E0B\u4E24\u8005\u5728\u5B9E\u73B0\u4E0A\u6709\u4EC0\u4E48\u5DEE\u522B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    sync<span class="token punctuation">.</span><span class="token function">acquireInterruptibly</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquireInterruptibly</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">doAcquireInterruptibly</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684 acquireInterruptibly(..) \u4E5F\u662F AQS \u7684\u6A21\u677F\u65B9\u6CD5\uFF0C\u91CC\u9762\u7684 tryAcquire(..) \u5206\u522B\u88AB FairSync \u548C NonfairSync \u5B9E\u73B0\uFF0C\u6B64\u5904\u4E0D\u518D\u91CD\u590D\u53D9\u8FF0\u3002\u8FD9\u91CC\u4E3B\u8981\u8BB2 doAcquireInterruptibly(..) \u51FD\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doAcquireInterruptibly</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> failed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">Node</span> p <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">predecessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> head <span class="token operator">&amp;&amp;</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setHead</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                failed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldParkAfterFailedAcquire</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">parkAndCheckInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
               <span class="token comment">// \u5173\u952E\u7684\u4E00\u884C\uFF0C\u6536\u5230\u4E2D\u65AD\u4FE1\u53F7\uFF0C\u4E0D\u518D\u963B\u585E\uFF0C\u76F4\u63A5\u629B\u51FA\u5F02\u5E38\u518D\u8FD4\u56DE</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
            <span class="token function">cancelAcquire</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u660E\u767D\u4E86 accquireQueued(..) \u539F\u7406\uFF0C\u6B64\u5904\u5C31\u5F88\u7B80\u5355\u4E86\u3002\u5F53 parkAndCheckInterrupt() \u8FD4\u56DE true \u7684\u65F6\u5019\uFF0C\u8BF4\u660E\u6709\u5176\u4ED6\u7EBF\u7A0B\u53D1\u9001\u4E2D\u65AD\u4FE1\u53F7\uFF0C\u76F4\u63A5\u629B\u51FA InterruptedException\uFF0C\u8DF3\u51FA for \u5FAA\u73AF\uFF0C\u6574\u4E2A\u51FD\u6570\u8FD4\u56DE\u3002</p><h3 id="_3-1-9-trylock-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_3-1-9-trylock-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 3.1.9 tryLock() \u5B9E\u73B0\u5206\u6790</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sync<span class="token punctuation">.</span><span class="token function">nonfairTryAcquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tryLock() \u5B9E\u73B0\u57FA\u4E8E\u8C03\u7528\u975E\u516C\u5E73\u9501\u7684 tryAcquire(..)\uFF0C\u5BF9 state \u8FDB\u884C CAS \u64CD\u4F5C\uFF0C\u5982\u679C\u64CD\u4F5C\u6210\u529F\u5C31\u62FF\u5230\u9501\uFF1B\u5982\u679C\u64CD\u4F5C\u4E0D\u6210\u529F\u5219\u76F4\u63A5\u8FD4\u56DE false\uFF0C\u4E5F\u4E0D\u963B\u585E\u3002</p><h2 id="_3-2-\u8BFB\u5199\u9501" tabindex="-1"><a class="header-anchor" href="#_3-2-\u8BFB\u5199\u9501" aria-hidden="true">#</a> 3.2 \u8BFB\u5199\u9501</h2><p>\u548C\u4E92\u65A5\u9501\u76F8\u6BD4\uFF0C\u8BFB\u5199\u9501\uFF08ReentrantReadWriteLock) \u5C31\u662F\u8BFB\u7EBF\u7A0B\u548C\u8BFB\u7EBF\u7A0B\u4E4B\u95F4\u53EF\u4EE5\u4E0D\u7528\u4E92\u65A5\u4E86\u3002\u5728\u6B63\u5F0F\u4ECB\u7ECD\u539F\u7406\u4E4B\u524D\uFF0C\u5148\u770B\u4E00\u4E0B\u76F8\u5173\u7C7B\u7684\u7EE7\u627F\u4F53\u7CFB\u3002</p><h3 id="_3-2-1-\u7C7B\u7EE7\u627F\u5C42\u6B21" tabindex="-1"><a class="header-anchor" href="#_3-2-1-\u7C7B\u7EE7\u627F\u5C42\u6B21" aria-hidden="true">#</a> 3.2.1 \u7C7B\u7EE7\u627F\u5C42\u6B21</h3><p>\u5982\u56FE3-3 \u6240\u793A\uFF0CReadWriteLock \u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5185\u90E8\u7531\u4E24\u4E2A Lock \u63A5\u53E3\u7EC4\u6210\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ReadWriteLock</span> <span class="token punctuation">{</span>
    <span class="token class-name">Lock</span> <span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Lock</span> <span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+o+`" alt="\u56FE3-3" style="zoom:50%;"><p>\u56FE3-3 ReentrantReadWriteLock \u7C7B\u7EE7\u627F\u5C42\u6B21</p><p>ReentrantReadWriteLock \u5B9E\u73B0\u4E86\u8BE5\u63A5\u53E3\uFF0C\u4F7F\u7528\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ReentrantReadWriteLock</span> rwLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Lock</span> rLock <span class="token operator">=</span> rwLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Lock</span> wLock <span class="token operator">=</span> rwLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
wLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
wLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5F53\u4F7F\u7528 ReadWriteLock \u7684\u65F6\u5019\uFF0C\u5E76\u4E0D\u662F\u76F4\u63A5\u4F7F\u7528\uFF0C\u800C\u662F\u83B7\u5F97\u5176\u5185\u90E8\u7684\u8BFB\u9501\u548C\u5199\u9501\uFF0C\u7136\u540E\u5206\u522B\u8C03\u7528 lock / unlock\u3002</p><h3 id="_3-2-2-\u8BFB\u5199\u9501\u5B9E\u73B0\u7684\u57FA\u672C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-2-2-\u8BFB\u5199\u9501\u5B9E\u73B0\u7684\u57FA\u672C\u539F\u7406" aria-hidden="true">#</a> 3.2.2 \u8BFB\u5199\u9501\u5B9E\u73B0\u7684\u57FA\u672C\u539F\u7406</h3><p>\u4ECE\u8868\u9762\u6765\u770B\uFF0CReadLock \u548C WriteLock \u662F\u4E24\u628A\u9501\uFF0C\u5B9E\u9645\u4E0A\u5B83\u53EA\u662F\u540C\u4E00\u628A\u9501\u7684\u4E24\u4E2A\u89C6\u56FE\u800C\u5DF2\u3002\u4EC0\u4E48\u53EB\u4E24\u4E2A\u89C6\u56FE\u5462\uFF1F\u53EF\u4EE5\u7406\u89E3\u4E3A\u662F\u4E00\u628A\u9501\uFF0C\u7EBF\u7A0B\u5206\u6210\u4E24\u7C7B\uFF1A\u8BFB\u7EBF\u7A0B\u548C\u5199\u7EBF\u7A0B\u3002\u8BFB\u7EBF\u7A0B\u548C\u8BFB\u7EBF\u7A0B\u4E4B\u95F4\u4E0D\u4E92\u65A5\uFF08\u53EF\u4EE5\u540C\u65F6\u62FF\u5230\u8FD9\u628A\u9501\uFF09\uFF0C\u8BFB\u7EBF\u7A0B\u548C\u5199\u7EBF\u7A0B\u4E92\u65A5\uFF0C\u5199\u7EBF\u7A0B\u548C\u5199\u7EBF\u7A0B\u4E5F\u4E92\u65A5\u3002</p><p>\u4ECE\u4E0B\u9762\u7684\u6784\u9020\u51FD\u6570\u4E5F\u53EF\u4EE5\u770B\u51FA\uFF0CreaderLock \u548C writerLock \u5B9E\u9645\u5171\u7528\u540C\u4E00\u4E2A sync \u5BF9\u8C61\u3002sync \u5BF9\u8C61\u540C\u4E92\u65A5\u9501\u4E00\u6837\uFF0C\u5206\u4E3A\u975E\u516C\u5E73\u548C\u516C\u5E73\u4E24\u79CD\u7B56\u7565\uFF0C\u5E76\u7EE7\u627F\u81EA AQS\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync <span class="token operator">=</span> fair <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">FairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">NonfairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    readerLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReadLock</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    writerLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WriteLock</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u4E92\u65A5\u9501\u4E00\u6837\uFF0C\u8BFB\u5199\u9501\u4E5F\u662F\u7528 state \u53D8\u91CF\u6765\u8868\u793A\u9501\u72B6\u6001\u7684\u3002\u53EA\u662F state \u53D8\u91CF\u5728\u8FD9\u91CC\u7684\u542B\u4E49\u548C\u4E92\u65A5\u9501\u5B8C\u5168\u4E0D\u540C\u3002\u5728\u5185\u90E8\u7C7B Sync \u4E2D\uFF0C\u5BF9 state \u53D8\u91CF\u8FDB\u884C\u4E86\u91CD\u65B0\u5B9A\u4E49\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">abstract</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Sync</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SHARED_SHIFT   <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SHARED_UNIT    <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> SHARED_SHIFT<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_COUNT      <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> SHARED_SHIFT<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> EXCLUSIVE_MASK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> SHARED_SHIFT<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u6301\u6709\u8BFB\u9501\u7684\u7EBF\u7A0B\u7684\u91CD\u5165\u6B21\u6570</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">sharedCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token keyword">return</span> c <span class="token operator">&gt;&gt;&gt;</span> SHARED_SHIFT<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u6301\u6709\u5199\u9501\u7684\u7EBF\u7A0B\u91CD\u5165\u6B21\u6570</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">exclusiveCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token keyword">return</span> c <span class="token operator">&amp;</span> EXCLUSIVE_MASK<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u628A state \u53D8\u91CF\u62C6\u6210\u4E24\u534A\uFF0C\u4F4E 16 \u4F4D\uFF0C\u7528\u6765\u8BB0\u5F55\u5199\u9501\u3002\u4F46\u540C\u4E00\u65F6\u95F4\u65E2\u7136\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u5199\uFF0C\u4E3A\u4EC0\u4E48\u8FD8\u9700\u8981 16 \u4F4D\u5462\uFF1F\u8FD9\u662F\u56E0\u4E3A\u4E00\u4E2A\u5199\u7EBF\u7A0B\u53EF\u80FD\u591A\u6B21\u91CD\u5165\u3002\u4F8B\u5982\uFF0C\u4F4E 16 \u4F4D\u7684\u503C\u7B49\u4E8E 5\uFF0C\u8868\u793A\u4E00\u4E2A\u5199\u7EBF\u7A0B\u91CD\u5165\u4E86 5 \u6B21\u3002</p><p>\u9AD8 16 \u4F4D\uFF0C\u7528\u6765 \u201C\u8BFB\u201D \u9501\u3002\u4F8B\u5982\uFF0C\u9AD8 16 \u4F4D\u7684\u503C\u7B49\u4E8E 5\uFF0C\u53EF\u4EE5\u8868\u793A 5 \u4E2A\u8BFB\u7EBF\u7A0B\u90FD\u62FF\u5230\u4E86\u8BE5\u9501\uFF1B\u4E5F\u53EF\u4EE5\u8868\u793A\u4E00\u4E2A\u8BFB\u7EBF\u7A0B\u91CD\u5165\u4E86 5 \u6B21\u3002</p><p>\u8FD9\u4E2A\u5730\u65B9\u7684\u8BBE\u8BA1\u5F88\u5DE7\u5999\uFF0C\u4E3A\u4EC0\u4E48\u8981\u628A\u4E00\u4E2A int \u7C7B\u578B\u53D8\u91CF\u62C6\u6210\u4E24\u534A\uFF0C\u800C\u4E0D\u662F\u7528\u4E24\u4E2A int \u578B\u53D8\u91CF\u5206\u522B\u8868\u793A\u8BFB\u9501\u548C\u5199\u9501\u7684\u72B6\u6001\u5462\uFF1F\u8FD9\u662F\u56E0\u4E3A\u65E0\u6CD5\u7528\u4E00\u6B21 CAS \u540C\u65F6\u64CD\u4F5C\u4E24\u4E2A int \u53D8\u91CF\uFF0C\u6240\u4EE5\u7528\u4E86\u4E00\u4E2A int \u578B\u7684\u9AD8 16 \u4F4D\u548C\u4F4E 16 \u4F4D\u5206\u522B\u8868\u793A\u8BFB\u9501\u548C\u5199\u9501\u7684\u72B6\u6001\u3002</p><p>\u5F53 state = 0 \u65F6\uFF0C\u8BF4\u660E\u65E2\u6CA1\u6709\u7EBF\u7A0B\u6301\u6709\u8BFB\u9501\uFF0C\u4E5F\u6CA1\u6709\u7EBF\u7A0B\u6301\u6709\u5199\u9501\uFF1B\u5F53 state != 0 \u65F6\uFF0C\u8981\u4E48\u6709\u7EBF\u7A0B\u6301\u6709\u8BFB\u9501\uFF0C\u8981\u4E48\u6709\u7EBF\u7A0B\u6301\u6709\u5199\u9501\uFF0C\u4E24\u8005\u4E0D\u80FD\u540C\u65F6\u6210\u7ACB\uFF0C\u56E0\u4E3A\u8BFB\u548C\u5199\u4E92\u65A5\u3002\u8FD9\u65F6\u518D\u8FDB\u4E00\u6B65\u901A\u8FC7 sharedCount(state) \u548C exclusiveCount(state) \u5224\u65AD\u5230\u5E95\u662F\u8BFB\u7EBF\u7A0B\u8FD8\u662F\u5199\u7EBF\u7A0B\u6301\u6709\u4E86\u8BE5\u9501\u3002</p><h3 id="_3-2-3-aqs-\u7684\u4E24\u5BF9\u6A21\u677F\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-2-3-aqs-\u7684\u4E24\u5BF9\u6A21\u677F\u65B9\u6CD5" aria-hidden="true">#</a> 3.2.3 AQS \u7684\u4E24\u5BF9\u6A21\u677F\u65B9\u6CD5</h3><p>\u4E0B\u9762\u4ECB\u7ECD\u5728 ReentrantReadWriteLock \u7684\u4E24\u4E2A\u5185\u90E8\u7C7B ReadLock \u548C WriteLock \u4E2D\uFF0C\u662F\u5982\u4F55\u4F7F\u7528 state \u53D8\u91CF\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ReadLock</span> <span class="token keyword">implements</span> <span class="token class-name">Lock</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sync<span class="token punctuation">.</span><span class="token function">acquireShared</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sync<span class="token punctuation">.</span><span class="token function">releaseShared</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">WriteLock</span> <span class="token keyword">implements</span> <span class="token class-name">Lock</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sync<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sync<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>acquire / release\u3001acquireShared / releaseShared \u662F AQS \u91CC\u9762\u7684\u4E24\u5BF9\u6A21\u677F\u65B9\u6CD5\u3002\u4E92\u65A5\u9501\u548C\u8BFB\u5199\u9501\u7684\u5199\u9501\u90FD\u662F\u57FA\u4E8E acquire / release \u6A21\u677F\u65B9\u6CD5\u6765\u5B9E\u73B0\u7684\u3002\u8BFB\u5199\u9501\u7684\u8BFB\u9501\u662F\u57FA\u4E8E acquireShared / releaseShared \u8FD9\u5BF9\u6A21\u677F\u65B9\u6CD5\u6765\u5B9E\u73B0\u7684\u3002\u8FD9\u4E24\u5BF9\u6A21\u677F\u65B9\u6CD5\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractOwnableSynchronizer</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// tryAcquire \u88AB\u5404\u79CD Sync \u5B50\u7C7B\u5B9E\u73B0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquireShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// tryAcquireShared \u88AB\u5404\u79CD Sync \u5B50\u7C7B\u5B9E\u73B0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryAcquireShared</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">doAcquireShared</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// tryRelease \u88AB\u5404\u79CD Sync \u5B50\u7C7B\u5B9E\u73B0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryRelease</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> h <span class="token operator">=</span> head<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> h<span class="token punctuation">.</span>waitStatus <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token function">unparkSuccessor</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">releaseShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// tryReleaseShared \u88AB\u5404\u79CD Sync \u5B50\u7C7B\u5B9E\u73B0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryReleaseShared</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">doReleaseShared</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u8BFB / \u5199\u3001\u516C\u5E73 / \u975E\u516C\u5E73\u8FDB\u884C\u6392\u5217\u7EC4\u5408\uFF0C\u5C31\u6709 4 \u79CD\u7EC4\u5408\u3002\u5982\u56FE3-4 \u6240\u793A\uFF0C\u4E0A\u9762\u7684\u4E24\u4E2A\u51FD\u6570\u90FD\u662F\u5728 Sync \u4E2D\u5B9E\u73B0\u7684\u3002Sync \u4E2D\u7684\u4E24\u4E2A\u51FD\u6570\u53C8\u662F\u6A21\u677F\u65B9\u6CD5\uFF0C\u5728 NonfairSync \u548C FairSync \u4E2D\u5206\u522B\u6709\u5B9E\u73B0\u3002\u6700\u7EC8\u7684\u5BF9\u5E94\u5173\u7CFB\u5982\u4E0B\uFF1A</p><ol><li><p>\u8BFB\u9501\u7684\u516C\u5E73\u5B9E\u73B0\uFF1ASync.tryAccquireShared() + FairSync \u4E2D\u7684\u4E24\u4E2A\u8986\u5199\u7684\u5B50\u51FD\u6570\u3002</p></li><li><p>\u8BFB\u9501\u7684\u975E\u516C\u5E73\u5B9E\u73B0\uFF1ASync.tryAccquireShared() + NonfairSync \u4E2D\u7684\u4E24\u4E2A\u8986\u5199\u7684\u5B50\u51FD\u6570\u3002</p></li><li><p>\u5199\u9501\u7684\u516C\u5E73\u5B9E\u73B0\uFF1ASync.tryAccquire() + FairSync \u4E2D\u7684\u4E24\u4E2A\u8986\u5199\u7684\u5B50\u51FD\u6570\u3002</p></li><li><p>\u5199\u9501\u7684\u975E\u516C\u5E73\u5B9E\u73B0\uFF1ASync.tryAccquire() + NonfairSync \u4E2D\u7684\u4E24\u4E2A\u8986\u5199\u7684\u5B50\u51FD\u6570\u3002</p></li></ol><img src="`+c+`" alt="\u56FE3-4" style="zoom:50%;"><p>\u56FE3-4 \u56DB\u79CD\u9501\u7684\u7B56\u7565\u7684\u5B9E\u73B0\u793A\u610F\u56FE</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">NonfairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5199\u7EBF\u7A0B\u62A2\u9501\u7684\u65F6\u5019\u662F\u5426\u5E94\u8BE5\u963B\u585E</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">writerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5199\u7EBF\u7A0B\u62A2\u9501\u7684\u4E4B\u524D\u6C38\u8FDC\u4E0D\u88AB\u963B\u585E\uFF0C\u662F\u975E\u516C\u5E73\u7684</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BFB\u7EBF\u7A0B\u62A2\u9501\u7684\u65F6\u5019\u662F\u5426\u5E94\u8BE5\u963B\u585E</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">readerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BFB\u7EBF\u7A0B\u62A2\u9501\u7684\u65F6\u5019\uFF0C\u5F53\u961F\u5217\u4E2D\u7B2C 1 \u4E2A\u5143\u7D20\u662F\u5199\u7EBF\u7A0B\u7684\u65F6\u5019\uFF0C\u8981\u963B\u585E</span>
        <span class="token keyword">return</span> <span class="token function">apparentlyFirstQueuedIsExclusive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">FairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5199\u7EBF\u7A0B\u62A2\u9501\u7684\u65F6\u5019\u662F\u5426\u5E94\u8BE5\u963B\u585E</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">writerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5199\u7EBF\u7A0B\u62A2\u9501\u7684\u4E4B\u524D\uFF0C\u5982\u679C\u961F\u5217\u91CC\u6709\u5176\u4ED6\u7EBF\u7A0B\u5728\u6392\u961F\uFF0C\u5C31\u8981\u963B\u585E\uFF0C\u6240\u4EE5\u662F\u516C\u5E73\u7684</span>
        <span class="token keyword">return</span> <span class="token function">hasQueuedPredecessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BFB\u7EBF\u7A0B\u62A2\u9501\u7684\u65F6\u5019\u662F\u5426\u5E94\u8BE5\u963B\u585E</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">readerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BFB\u7EBF\u7A0B\u62A2\u9501\u7684\u65F6\u5019\uFF0C\u5982\u679C\u961F\u5217\u91CC\u6709\u5176\u4ED6\u7EBF\u7A0B\u5728\u6392\u961F\uFF0C\u5C31\u8981\u963B\u585E\uFF0C\u6240\u4EE5\u662F\u516C\u5E73\u7684	</span>
        <span class="token keyword">return</span> <span class="token function">hasQueuedPredecessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4ECB\u7ECD\u4E86 ReentrantReadWriteLock \u91CC\u9762\u7684 NonfairSync \u548C FairSync \u7684\u5B9E\u73B0\u8FC7\u7A0B\uFF0C\u5BF9\u5E94\u4E86\u4E0A\u9762\u7684\u56DB\u79CD\u5B9E\u73B0\u7B56\u7565\uFF0C\u4E0B\u9762\u5206\u522B\u89E3\u91CA\u3002</p><p>\u5BF9\u4E8E\u516C\u5E73\uFF0C\u6BD4\u8F83\u5BB9\u6613\u7406\u89E3\uFF0C\u4E0D\u8BBA\u662F\u8BFB\u9501\uFF0C\u8FD8\u662F\u5199\u9501\uFF0C\u53EA\u8981\u961F\u5217\u4E2D\u6709\u5176\u4ED6\u7EBF\u7A0B\u5728\u6392\u961F\uFF08\u6392\u961F\u7B49\u8BFB\u9501\uFF0C\u6216\u8005\u6392\u961F\u7B49\u5199\u9501\uFF09\uFF0C\u5C31\u4E0D\u80FD\u76F4\u63A5\u53BB\u62A2\u9501\uFF0C\u8981\u6392\u5728\u961F\u5217\u5C3E\u90E8\u3002</p><p>\u5BF9\u4E8E\u975E\u516C\u5E73\uFF0C\u8BFB\u9501\u548C\u5199\u9501\u7684\u5B9E\u73B0\u7B56\u7565\u7565\u6709\u5DEE\u5F02\u3002\u5148\u8BF4\u5199\u9501\uFF0C\u5199\u7EBF\u7A0B\u80FD\u62A2\u9501\uFF0C\u524D\u63D0\u662F state = 0\uFF0C\u53EA\u6709\u5728\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u6301\u6709\u8BFB\u9501\u6216\u5199\u9501\u7684\u60C5\u51B5\u4E0B\uFF0C\u5B83\u624D\u6709\u673A\u4F1A\u53BB\u62A2\u9501\u3002\u6216\u8005 state != 0\uFF0C\u4F46\u90A3\u4E2A\u6301\u6709\u5199\u9501\u7684\u7EBF\u7A0B\u662F\u5B83\u81EA\u5DF1\uFF0C\u518D\u6B21\u91CD\u5165\u3002\u5199\u7EBF\u7A0B\u662F\u975E\u516C\u5E73\u7684\uFF0C\u5C31\u662F\u4E0D\u7BA1\u4E09\u4E03\u4E8C\u5341\u4E00\u5C31\u53BB\u62A2\uFF0C\u5373\u4E00\u76F4\u8FD4\u56DE false\u3002</p><p>\u4F46\u5BF9\u4E8E\u8BFB\u7EBF\u7A0B\uFF0C\u80FD\u5426\u4E5F\u4E0D\u7BA1\u4E09\u4E03\u4E8C\u5341\u4E00\uFF0C\u4E0A\u6765\u5C31\u53BB\u62A2\u5462\uFF1F\u4E0D\u884C\uFF01\u56E0\u4E3A\u8BFB\u7EBF\u7A0B\u548C\u8BFB\u7EBF\u7A0B\u662F\u4E0D\u4E92\u65A5\u7684\uFF0C\u5047\u8BBE\u5F53\u524D\u7EBF\u7A0B\u88AB\u8BFB\u7EBF\u7A0B\u6301\u6709\uFF0C\u7136\u540E\u5176\u4ED6\u8BFB\u7EBF\u7A0B\u8FD8\u975E\u516C\u5E73\u5730\u4E00\u76F4\u53BB\u62A2\uFF0C\u53EF\u80FD\u5BFC\u81F4\u5199\u7EBF\u7A0B\u6C38\u8FDC\u62FF\u4E0D\u5230\u9501\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u8BFB\u7EBF\u7A0B\u7684\u975E\u516C\u5E73\uFF0C\u8981\u505A\u4E00\u4E9B \u201C\u7EA6\u675F\u201D\u3002\u5F53\u53D1\u73B0\u961F\u5217\u7684\u7B2C 1 \u4E2A\u5143\u7D20\u662F\u5199\u7EBF\u7A0B\u7684\u65F6\u5019\uFF0C\u8BFB\u7EBF\u7A0B\u4E5F\u8981\u963B\u585E\u4E00\u4E0B\uFF0C\u4E0D\u80FD \u201C\u8086\u65E0\u5FCC\u60EE\u201D \u5730\u76F4\u63A5\u53BB\u62A2\u3002</p><p>\u660E\u767D\u7B56\u7565\u540E\uFF0C\u4E0B\u9762\u5177\u4F53\u4ECB\u7ECD\u56DB\u79CD\u5B9E\u73B0\u65B9\u9762\u7684\u5DEE\u5F02\u3002</p><h3 id="_3-2-4-writelock-\u516C\u5E73-vs-\u975E\u516C\u5E73\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-2-4-writelock-\u516C\u5E73-vs-\u975E\u516C\u5E73\u5B9E\u73B0" aria-hidden="true">#</a> 3.2.4 WriteLock \u516C\u5E73 vs \u975E\u516C\u5E73\u5B9E\u73B0</h3><p>\u5199\u9501\u662F\u6392\u4ED6\u9501\uFF0C\u5B9E\u73B0\u7B56\u7565\u7C7B\u4F3C\u4E8E\u4E92\u65A5\u9501\uFF0C\u91CD\u5199\u4E86 tryAcquire / tryRelease \u65B9\u6CD5\u3002</p><ol><li><p>tryAcquire() \u5B9E\u73B0\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u7EBF\u7A0B\u53EA\u80FD\u6709\u4E00\u4E2A\uFF0C\u4F46\u662F\u5199\u7EBF\u7A0B\u53EF\u4EE5\u591A\u6B21\u91CD\u5165</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token function">exclusiveCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// c != 0 \u8BF4\u660E\u6709\u8BFB\u7EBF\u7A0B\u6216\u8005\u5199\u7EBF\u7A0B\u6301\u6709\u9501</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// (Note: if c != 0 and w == 0 then shared count != 0)</span>
        <span class="token comment">// w == 0\uFF0C\u8BF4\u660E\u9501\u88AB\u8BFB\u7EBF\u7A0B\u6301\u6709\uFF0C\u53EA\u80FD\u8FD4\u56DE\uFF1Bw != 0\uFF0C\u6301\u6709\u5199\u9501\u7684\u7EBF\u7A0B\u4E0D\u662F\u81EA\u5DF1\uFF0C\u4E5F\u53EA\u80FD\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> current <span class="token operator">!=</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token comment">// 16 \u4F4D\u7528\u6EE1\u4E86\uFF0C\u8D85\u8FC7\u4E86\u6700\u5927\u91CD\u5165\u6B21\u6570</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">+</span> <span class="token function">exclusiveCount</span><span class="token punctuation">(</span>acquires<span class="token punctuation">)</span> <span class="token operator">&gt;</span> MAX_COUNT<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Maximum lock count exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Reentrant acquire</span>
        <span class="token function">setState</span><span class="token punctuation">(</span>c <span class="token operator">+</span> acquires<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// writerShouldBlock \u5C31\u662F\u56DB\u79CD\u4E0D\u540C\u5B9E\u73B0\u7B56\u7565</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">writerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> c <span class="token operator">+</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A\u4E0A\u9762\u7684\u4EE3\u7801\u62C6\u5F00\u8FDB\u884C\u5206\u6790\uFF0C\u5982\u4E0B\uFF1A</p><p>\uFF081\uFF09if (c != 0) and w == 0\uFF0C\u8BF4\u660E\u5F53\u524D\u4E00\u5B9A\u662F\u8BFB\u7EBF\u7A0B\u62FF\u7740\u9501\uFF0C\u5199\u9501\u4E00\u5B9A\u62FF\u4E0D\u5230\uFF0C\u8FD4\u56DE false\u3002</p><p>\uFF082\uFF09if (c != 0) and w != 0\uFF0C\u8BF4\u660E\u5F53\u524D\u4E00\u5B9A\u662F\u5199\u7EBF\u7A0B\u62FF\u7740\u9501\uFF0C\u6267\u884C current != getExclusiveOwnerThread() \u7684\u5224\u65AD\uFF0C\u53D1\u73B0 ownerThread \u4E0D\u662F\u81EA\u5DF1\uFF0C\u8FD4\u56DE false\u3002</p><p>\uFF083\uFF09c != 0\uFF0Cw != 0\uFF0C\u4E14 current = getExclusiveOwnerThread()\uFF0C\u624D\u4F1A\u8D70\u5230 if (w + exclusiveCount(acquires) &gt; MAX_COUNT)\u3002\u5224\u65AD\u91CD\u5165\u6B21\u6570\uFF0C\u91CD\u5165\u6B21\u6570\u8D85\u8FC7\u6700\u5927\u503C\uFF0C\u629B\u51FA\u5F02\u5E38\u3002\u56E0\u4E3A\u662F\u7528 state \u7684\u4F4E 16 \u4F4D\u4FDD\u5B58\u5199\u9501\u91CD\u5165\u6B21\u6570\u7684\uFF0C\u6240\u4EE5 MAX_COUNT \u662F 216\u3002\u5982\u679C\u8D85\u51FA\u8FD9\u4E2A\u503C\uFF0C\u4F1A\u5199\u5230\u8BFB\u9501\u7684\u9AD8 16 \u4F4D\u4E0A\u3002\u4E3A\u4E86\u907F\u514D\u8FD9\u79CD\u60C5\u5F62\uFF0C\u8FD9\u91CC\u505A\u4E86\u4E00\u4E2A\u68C0\u6D4B\u3002\u5F53\u7136\uFF0C\u4E00\u822C\u4E0D\u53EF\u80FD\u91CD\u5165\u8FD9\u4E48\u591A\u6B21\u3002</p><p>\uFF084\uFF09if (c == 0)\uFF0C\u8BF4\u660E\u5F53\u524D\u65E2\u6CA1\u6709\u8BFB\u7EBF\u7A0B\uFF0C\u4E5F\u6CA1\u6709\u5199\u7EBF\u7A0B\u6301\u6709\u8BE5\u9501\u3002\u53EF\u4EE5\u901A\u8FC7 CAS \u64CD\u4F5C\u5F00\u62A2\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">writerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> c <span class="token operator">+</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u62A2\u6210\u529F\u540E\uFF0C\u8C03\u7528 setExclusiveOwnerThread(current)\uFF0C\u628A ownerThread \u8BBE\u6210\u81EA\u5DF1\u3002</p><p>\u516C\u5E73\u5B9E\u73B0\u548C\u975E\u516C\u5E73\u5B9E\u73B0\u51E0\u4E4E\u4E00\u6A21\u4E00\u6837\uFF0C\u53EA\u662F writerShouldBlock() \u5206\u522B\u88AB FairSync \u548C NonfairSync \u5B9E\u73B0\uFF0C\u5728\u4E0A\u4E00\u8282\u5DF2\u8BB2\u3002</p></li><li><p>tryRelease(..) \u5B9E\u73B0\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryRelease</span><span class="token punctuation">(</span><span class="token keyword">int</span> releases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> nextc <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> releases<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> free <span class="token operator">=</span> <span class="token function">exclusiveCount</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>free<span class="token punctuation">)</span>
        <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u56E0\u4E3A\u5199\u9501\u662F\u6392\u4ED6\u7684\uFF0C\u5728\u5F53\u524D\u7EBF\u7A0B\u6301\u6709\u5199\u9501\u7684\u65F6\u5019\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u65E2\u4E0D\u4F1A\u6301\u6709\u5199\u9501\uFF0C\u4E5F\u4E0D\u4F1A\u6301\u6709\u8BFB\u9501\u3002</span>
    <span class="token comment">// \u6240\u4EE5\uFF0C\u8FD9\u91CC\u5BF9 state \u503C\u7684\u8C03\u51CF\u4E0D\u9700\u8981 CAS \u64CD\u4F5C\uFF0C\u76F4\u63A5\u51CF 1 \u5373\u53EF\u3002</span>
    <span class="token function">setState</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> free<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_3-2-5-readlock-\u516C\u5E73-vs-\u975E\u516C\u5E73\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-2-5-readlock-\u516C\u5E73-vs-\u975E\u516C\u5E73\u5B9E\u73B0" aria-hidden="true">#</a> 3.2.5 ReadLock \u516C\u5E73 vs \u975E\u516C\u5E73\u5B9E\u73B0</h3><p>\u8BFB\u9501\u662F\u5171\u4EAB\u9501\uFF0C\u91CD\u5199\u4E86 tryAcquireShared / tryReleaseShared \u65B9\u6CD5\uFF0C\u5176\u5B9E\u73B0\u7B56\u7565\u548C\u6392\u4ED6\u9501\u6709\u5F88\u5927\u7684\u5DEE\u5F02\u3002</p><ol><li><p>tryAcquireShared(..) \u5B9E\u73B0\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tryAcquireShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> unused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u9501\u88AB\u67D0\u7EBF\u7A0B\u6301\u6709\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u7EBF\u7A0B\u8FD8\u4E0D\u662F\u81EA\u5DF1\uFF0C\u8BFB\u9501\u80AF\u5B9A\u62FF\u4E0D\u5230\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">exclusiveCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> current<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token function">sharedCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u516C\u5E73\u548C\u975E\u516C\u5E73\u7684\u5DEE\u5F02\u5C31\u5728\u4E8E\u8FD9\u4E2A\u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">readerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        r <span class="token operator">&lt;</span> MAX_COUNT <span class="token operator">&amp;&amp;</span>
        <span class="token comment">// CAS \u62FF\u8BFB\u7EBF\u7A0B\uFF0C\u9AD8 16 \u4F4D\u52A0 1</span>
        <span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> c <span class="token operator">+</span> SHARED_UNIT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// r \u4E4B\u524D\u7B49\u4E8E 0\uFF0C\u8BF4\u660E\u8FD9\u662F\u7B2C\u4E00\u4E2A\u62FF\u5230\u8BFB\u9501\u7684\u7EBF\u7A0B</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            firstReader <span class="token operator">=</span> current<span class="token punctuation">;</span>
            firstReaderHoldCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4E0D\u662F\u7B2C\u4E00\u4E2A</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>firstReader <span class="token operator">==</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            firstReaderHoldCount<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">HoldCounter</span> rh <span class="token operator">=</span> cachedHoldCounter<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rh <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> rh<span class="token punctuation">.</span>tid <span class="token operator">!=</span> <span class="token function">getThreadId</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span>
                cachedHoldCounter <span class="token operator">=</span> rh <span class="token operator">=</span> readHolds<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rh<span class="token punctuation">.</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                readHolds<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>rh<span class="token punctuation">)</span><span class="token punctuation">;</span>
            rh<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0A\u9762\u62FF\u8BFB\u9501\u5931\u8D25\uFF0C\u8FDB\u5165\u8FD9\u4E2A\u51FD\u6570\u4E0D\u65AD\u81EA\u9009\u62FF\u8BFB\u9501</span>
    <span class="token keyword">return</span> <span class="token function">fullTryAcquireShared</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u5173\u4E8E\u6B64\u4EE3\u7801\u7684\u89E3\u91CA\uFF1A</p><p>\uFF081\uFF09\u4F4E 16 \u4F4D\u4E0D\u7B49\u4E8E 0\uFF0C\u8BF4\u660E\u6709\u5199\u7EBF\u7A0B\u6301\u6709\u9501\uFF0C\u5E76\u4E14\u53EA\u6709\u5F53 ownerThread != \u81EA\u5DF1\u65F6\uFF0C\u624D\u8FD4\u56DE -1\u3002\u8FD9\u91CC\u9762\u6709\u4E00\u4E2A\u6F5C\u53F0\u8BCD\uFF1A\u5982\u679C current ==o wnerThread\uFF0C\u5219\u8FD9\u6BB5\u4EE3\u7801\u4E0D\u4F1A\u8FD4\u56DE\u3002\u8FD9\u662F\u56E0\u4E3A\u4E00\u4E2A\u5199\u7EBF\u7A0B\u53EF\u4EE5\u518D\u6B21\u53BB\u62FF\u8BFB\u9501\uFF01\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u5728\u6301\u6709\u4E86 WriteLock \u540E\uFF0C\u518D\u53BB\u8C03\u7528 ReadLock.lock \u4E5F\u662F\u53EF\u4EE5\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">exclusiveCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> current<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\uFF082\uFF09\u4E0A\u9762\u7684 compareAndSetState(c, c + SHARED_UNIT)\uFF0C\u5176\u5B9E\u662F\u628A state \u7684\u9AD8 16 \u4F4D\u52A0 1\uFF08\u8BFB\u9501\u7684\u72B6\u6001\uFF09\uFF0C\u4F46\u56E0\u4E3A\u662F\u5728\u9AD8 16 \u4F4D\uFF0C\u5FC5\u987B\u628A 1 \u5DE6\u79FB 16 \u4F4D\u518D\u52A0 1\u3002</p><p>\uFF083\uFF09firstReader\u3001cachedHoldConunter \u4E4B\u7C7B\u7684\u53D8\u91CF\uFF0C\u53EA\u662F\u4E00\u4E9B\u7EDF\u8BA1\u53D8\u91CF\uFF0C\u5728 ReentrantReadWriteLock \u5BF9\u5916\u7684\u4E00\u4E9B\u67E5\u8BE2\u51FD\u6570\u4E2D\u4F1A\u7528\u5230\uFF0C\u4F8B\u5982\uFF0C\u67E5\u8BE2\u6301\u6709\u8BFB\u9501\u7684\u7EBF\u7A0B\u5217\u8868\uFF0C\u4F46\u5BF9\u6574\u4E2A\u8BFB\u5199\u4E92\u65A5\u673A\u5236\u6CA1\u6709\u5F71\u54CD\uFF0C\u6B64\u5904\u4E0D\u518D\u5C55\u5F00\u89E3\u91CA\u3002</p></li><li><p>tryReleaseShared(..) \u5B9E\u73B0\u5206\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryReleaseShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> unused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">-</span> SHARED_UNIT<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> nextc<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> nextc <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u8BFB\u9501\u662F\u5171\u4EAB\u9501\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u4F1A\u540C\u65F6\u6301\u6709\u8BFB\u9501\uFF0C\u6240\u4EE5\u5BF9\u8BFB\u9501\u7684\u91CA\u653E\u4E0D\u80FD\u76F4\u63A5\u51CF 1\uFF0C\u800C\u662F\u9700\u8981\u901A\u8FC7\u4E00\u4E2A for \u5FAA\u73AF + CAS \u64CD\u4F5C\u4E0D\u65AD\u91CD\u8BD5\u3002\u8FD9\u662F tryReleaseShared \u548C tryRelease \u7684\u6839\u672C\u5DEE\u5F02\u6240\u5728\u3002</p></li></ol><h2 id="_3-3-condition" tabindex="-1"><a class="header-anchor" href="#_3-3-condition" aria-hidden="true">#</a> 3.3 Condition</h2><h3 id="_3-3-1-condition-\u4E0E-lock-\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#_3-3-1-condition-\u4E0E-lock-\u7684\u5173\u7CFB" aria-hidden="true">#</a> 3.3.1 Condition \u4E0E Lock \u7684\u5173\u7CFB</h3><p>Condition \u672C\u8EAB\u4E5F\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5176\u529F\u80FD\u548C wait / notify \u7C7B\u4F3C\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Condition</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">awaitUninterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8BB2\u591A\u7EBF\u7A0B\u57FA\u7840\u7684\u65F6\u5019\uFF0C\u5F3A\u8C03 wait() / notify() \u5FC5\u987B\u548C synchronized \u4E00\u8D77\u4F7F\u7528\uFF0CCondition \u4E5F\u662F\u5982\u6B64\uFF0C\u5FC5\u987B\u548C Lock \u4E00\u8D77\u4F7F\u7528\u3002\u56E0\u6B64\uFF0C\u5728 Lock \u7684\u63A5\u53E3\u4E2D\uFF0C\u6709\u4E00\u4E2A\u4E0E Condition \u76F8\u5173\u7684\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Lock</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token keyword">long</span> time<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6240\u6709\u7684 Condition \u90FD\u662F\u4ECE Lock \u4E2D\u6784\u9020\u51FA\u6765\u7684</span>
    <span class="token class-name">Condition</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-2-condition-\u7684\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_3-3-2-condition-\u7684\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> 3.3.2 Condition \u7684\u4F7F\u7528\u573A\u666F</h3><p>\u5728\u8BB2 Condition \u7684\u5B9E\u73B0\u539F\u7406\u4E4B\u524D\uFF0C\u5148\u4EE5 ArrayBlockingQueue \u7684\u5B9E\u73B0\u4E3A\u4F8B\uFF0C\u4ECB\u7ECD Condition \u7684\u4F7F\u7528\u573A\u666F\u3002\u5982\u4E0B\u6240\u793A\u4E3A\u4E00\u4E2A\u7528\u6570\u7EC4\u5B9E\u73B0\u7684\u963B\u585E\u961F\u5217\uFF0C\u6267\u884C put(..) \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u961F\u5217\u6EE1\u4E86\uFF0C\u751F\u6210\u8005\u7EBF\u7A0B\u88AB\u963B\u585E\uFF1B\u6267\u884C take() \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u961F\u5217\u4E3A\u7A7A\uFF0C\u6D88\u8D39\u8005\u7EBF\u7A0B\u88AB\u963B\u585E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token doc-comment comment">/** The queued items */</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> items<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** items index for next take, poll, peek or remove */</span>
    <span class="token keyword">int</span> takeIndex<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** items index for next put, offer, or add */</span>
    <span class="token keyword">int</span> putIndex<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** Number of elements in the queue */</span>
    <span class="token keyword">int</span> count<span class="token punctuation">;</span>
    <span class="token comment">// \u5176\u6838\u5FC3\u662F\u4E00\u628A\u9501 + \u4E24\u4E2A\u6761\u4EF6</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notEmpty<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> notFull<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">,</span> <span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>capacity <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>capacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5728\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u4E00\u628A\u9501\u4E24\u4E2A Condition</span>
        lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span>fair<span class="token punctuation">)</span><span class="token punctuation">;</span>
        notEmpty <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        notFull <span class="token operator">=</span>  lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token function">checkNotNull</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> items<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
                <span class="token comment">// put \u7684\u65F6\u5019\uFF0C\u961F\u5217\u6EE1\u4E86\uFF0C\u963B\u585E\u4E8E \u201C\u975E\u6EE1\u201D \u6761\u4EF6</span>
                notFull<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">insert</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">E</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        items<span class="token punctuation">[</span>putIndex<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
        putIndex <span class="token operator">=</span> <span class="token function">inc</span><span class="token punctuation">(</span>putIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// put \u8FDB\u53BB\u4E4B\u540E\uFF0C\u901A\u77E5\u975E\u7A7A\u6761\u4EF6</span>
        notEmpty<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token comment">// take \u7684\u65F6\u5019\uFF0C\u961F\u5217\u4E3A\u7A7A\uFF0C\u963B\u585E\u5728 \u201C\u975E\u7A7A\u201D \u6761\u4EF6</span>
                notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> items <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">;</span>
        <span class="token class-name">E</span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token function">cast</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>takeIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        items<span class="token punctuation">[</span>takeIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        takeIndex <span class="token operator">=</span> <span class="token function">inc</span><span class="token punctuation">(</span>takeIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        count<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token comment">// take \u64CD\u4F5C\u5B8C\u6210\uFF0C\u901A\u77E5\u975E\u6EE1\u6761\u4EF6</span>
        notFull<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-3-condition-\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-3-3-condition-\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 3.3.3 Condition \u5B9E\u73B0\u539F\u7406</h3><p>\u53EF\u4EE5\u53D1\u73B0\uFF0C\u7684\u4F7F\u7528\u5F88\u7B80\u6D01\uFF0C\u907F\u514D\u4E86 wait / notify \u7684\u751F\u6210\u8005\u901A\u77E5\u751F\u6210\u8005\u3001\u6D88\u8D39\u8005\u901A\u77E5\u6D88\u8D39\u8005\u7684\u95EE\u9898\uFF0C\u8FD9\u662F\u5982\u4F55\u505A\u5230\u7684\u5462\uFF1F\u4E0B\u9762\u8FDB\u5165 Condition \u5185\u90E8\u4E00\u63A2\u7A76\u7ADF\u3002</p><p>\u56E0\u4E3A Condition \u5FC5\u987B\u548C Lock \u4E00\u8D77\u4F7F\u7528\uFF0C\u6240\u4EE5 Condition \u7684\u5B9E\u73B0\u4E5F\u662F Lock \u7684\u4E00\u90E8\u5206\u3002\u4E0B\u9762\u5148\u5206\u522B\u770B\u4E00\u4E0B\u4E92\u65A5\u9501\u548C\u8BFB\u5199\u9501\u4E2D Condition \u7684\u6784\u9020\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReentrantLock</span> <span class="token keyword">implements</span> <span class="token class-name">Lock</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token class-name">Condition</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> sync<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReentrantReadWriteLock</span> <span class="token keyword">implements</span> <span class="token class-name">Lock</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ReadLock</span> <span class="token keyword">implements</span> <span class="token class-name">Lock</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">public</span> <span class="token class-name">Condition</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BFB\u9501\u4E0D\u652F\u6301 Condition</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">WriteLock</span> <span class="token keyword">implements</span> <span class="token class-name">Lock</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">public</span> <span class="token class-name">Condition</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> sync<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\uFF0C\u8BFB\u5199\u9501\u4E2D\u7684 ReadLock \u662F\u4E0D\u652F\u6301 Condition \u7684\uFF0C\u8BFB\u5199\u9501\u7684\u5199\u9501\u548C\u4E92\u65A5\u9501\u90FD\u652F\u6301 Condition\u3002\u867D\u7136\u5B83\u4EEC\u5404\u81EA\u8C03\u7528\u7684\u662F\u81EA\u5DF1\u7684\u5185\u90E8\u7C7B Sync\uFF0C\u4F46\u5185\u90E8\u7C7B Sync \u90FD\u7EE7\u627F\u81EA AQS\u3002\u56E0\u6B64\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801 sync.newCondition \u6700\u7EC8\u90FD\u8C03\u7528\u4E86 AQS \u4E2D\u7684 newCondition\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractOwnableSynchronizer</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConditionObject</span> <span class="token keyword">implements</span> <span class="token class-name">Condition</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
        <span class="token comment">// Condition \u7684\u6240\u6709\u5B9E\u73B0\uFF0C\u90FD\u5728 ConditionObject \u91CC\u9762</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">final</span> <span class="token class-name">ConditionObject</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConditionObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E00\u4E2A Condition \u5BF9\u8C61\u4E0A\u9762\uFF0C\u90FD\u963B\u585E\u4E86\u591A\u4E2A\u7EBF\u7A0B\u3002\u56E0\u6B64\uFF0C\u5728 ConditionObject \u5185\u90E8\u4E5F\u6709\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\u7EC4\u6210\u7684\u961F\u5217\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConditionObject</span> <span class="token keyword">implements</span> <span class="token class-name">Condition</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Node</span> firstWaiter<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Node</span> lastWaiter<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6765\u770B\u4E00\u4E0B\u5728 await() / notify() \u51FD\u6570\u4E2D\uFF0C\u662F\u5982\u4F55\u4F7F\u7528\u8FD9\u4E2A\u961F\u5217\u7684\u3002</p><h3 id="_3-3-4-await-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_3-3-4-await-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 3.3.4 await() \u5B9E\u73B0\u5206\u6790</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6B63\u8981\u6267\u884C await() \u64CD\u4F5C\uFF0C\u6536\u5230\u4E2D\u65AD\u4FE1\u53F7\uFF0C\u629B\u51FA\u5F02\u5E38</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u52A0\u5165 Condition \u7684\u7B49\u5F85\u961F\u5217</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5173\u952E\u7684\u4E00\u53E5\uFF1A\u963B\u585E\u5728 Condition \u4E4B\u524D\u5FC5\u987B\u5148\u91CA\u653E\u9501\uFF0C\u5426\u5219\u4F1A\u6B7B\u9501</span>
    <span class="token keyword">int</span> savedState <span class="token operator">=</span> <span class="token function">fullyRelease</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> interruptMode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isOnSyncQueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u81EA\u5DF1\u963B\u585E\u81EA\u5DF1</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>interruptMode <span class="token operator">=</span> <span class="token function">checkInterruptWhileWaiting</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u91CD\u65B0\u62FF\u9501</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">acquireQueued</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> savedState<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> interruptMode <span class="token operator">!=</span> THROW_IE<span class="token punctuation">)</span>
        interruptMode <span class="token operator">=</span> REINTERRUPT<span class="token punctuation">;</span>
    <span class="token comment">// clean up if cancelled</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>nextWaiter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
        <span class="token function">unlinkCancelledWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptMode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">// \u88AB\u4E2D\u65AD\u5524\u9192\uFF0C\u5411\u5916\u629B\u51FA\u4E2D\u65AD\u5F02\u5E38</span>
        <span class="token function">reportInterruptAfterWait</span><span class="token punctuation">(</span>interruptMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E await\uFF0C\u6709\u51E0\u4E2A\u5173\u952E\u70B9\u8981\u8BF4\u660E\uFF1A</p><ol><li><p>\u7EBF\u7A0B\u8C03\u7528 await() \u7684\u65F6\u5019\uFF0C\u80AF\u5B9A\u5DF2\u7ECF\u5148\u62FF\u5230\u4E86\u9501\u3002\u6240\u4EE5\uFF0C\u5728 addConditionWaiter() \u5185\u90E8\uFF0C\u5BF9\u8FD9\u4E2A\u53CC\u5411\u94FE\u8868\u7684\u64CD\u4F5C\u4E0D\u9700\u8981\u6267\u884C CAS \u64CD\u4F5C\uFF0C\u7EBF\u7A0B\u5929\u751F\u662F\u5B89\u5168\u7684\uFF0C\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> t <span class="token operator">=</span> lastWaiter<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span>CONDITION<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        firstWaiter <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        t<span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> node<span class="token punctuation">;</span>
    lastWaiter <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token keyword">return</span> node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5728\u7EBF\u7A0B\u6267\u884C await \u64CD\u4F5C\u4E4B\u524D\uFF0C\u5FC5\u987B\u5148\u91CA\u653E\u9501\u3002\u4E5F\u5C31\u662F fullyRelease(node)\uFF0C\u5426\u5219\u4F1A\u53D1\u751F\u6B7B\u9501\u3002\u8FD9\u4E2A\u548C wait / notify \u4E0E synchronized \u7684\u914D\u5408\u673A\u5236\u4E00\u6837\u3002</p></li><li><p>\u7EBF\u7A0B\u4ECE await \u4E2D\u88AB\u5524\u9192\u540E\uFF0C\u5FC5\u987B\u7528 acquireQueued(node, savedState) \u51FD\u6570\u91CD\u65B0\u62FF\u9501\u3002</p></li><li><p>checkInterruptWhileWaiting(node) \u4EE3\u7801\u5728 park(this) \u4EE3\u7801\u4E4B\u540E\uFF0C\u662F\u4E3A\u4E86\u68C0\u6D4B\u5728 park \u671F\u95F4\u662F\u5426\u6536\u5230\u8FC7\u4E2D\u65AD\u4FE1\u53F7\u3002\u5F53\u7EBF\u7A0B\u4ECE park \u4E2D\u9192\u6765\u65F6\uFF0C\u6709\u4E24\u79CD\u53EF\u80FD\uFF1A\u4E00\u79CD\u662F\u5176\u4ED6\u7EBF\u7A0B\u8C03\u7528\u4E86 unpark\uFF0C\u53E6\u4E00\u79CD\u662F\u6536\u5230\u4E2D\u65AD\u4FE1\u53F7\u3002\u8FD9\u91CC\u7684 await() \u51FD\u6570\u662F\u53EF\u4EE5\u54CD\u5E94\u4E2D\u65AD\u7684\uFF0C\u6240\u4EE5\u5F53\u53D1\u73B0\u81EA\u5DF1\u662F\u88AB\u4E2D\u65AD\u5524\u9192\u7684\uFF0C\u800C\u4E0D\u662F\u88AB unpark \u5524\u9192\u7684\u65F6\uFF0C\u4F1A\u76F4\u63A5\u9000\u51FA while \u5FAA\u73AF\uFF0Cawait() \u51FD\u6570\u4E5F\u4F1A\u8FD4\u56DE\u3002</p></li><li><p>isOnSyncQueue(node) \u7528\u4E8E\u5224\u65AD\u8BE5 Node \u662F\u5426\u5728 AQS \u7684\u540C\u6B65\u961F\u5217\u91CC\u9762\u3002\u521D\u59CB\u7684\u65F6\u5019\uFF0CNode \u53EA\u5728 Condition \u7684\u961F\u5217\u91CC\uFF0C\u800C\u4E0D\u5728 AQS \u7684\u961F\u5217\u91CC\u3002\u4F46\u6267\u884C signal \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u4F1A\u653E\u8FDB AQS \u7684\u540C\u6B65\u961F\u5217\u3002</p></li></ol><h3 id="_3-3-5-awaituninterruptibly-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_3-3-5-awaituninterruptibly-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 3.3.5 awaitUninterruptibly() \u5B9E\u73B0\u5206\u6790</h3><p>\u4E0E await() \u4E0D\u540C\uFF0CawaitUninterruptibly() \u4E0D\u4F1A\u54CD\u5E94\u4E2D\u65AD\uFF0C\u5176\u51FD\u6570\u7684\u5B9A\u4E49\u4E2D\u4E0D\u4F1A\u6709\u4E2D\u65AD\u5F02\u5E38\u629B\u51FA\uFF0C\u4E0B\u9762\u5206\u6790\u5176\u5B9E\u73B0\u548C await() \u7684\u533A\u522B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">awaitUninterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> savedState <span class="token operator">=</span> <span class="token function">fullyRelease</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> interrupted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isOnSyncQueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE park \u4E2D\u9192\u6765\uFF0C\u6536\u5230\u4E2D\u65AD\uFF0C\u4E0D\u9000\u51FA\uFF0C\u7EE7\u7EED\u6267\u884C while \u5FAA\u73AF</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            interrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">acquireQueued</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> savedState<span class="token punctuation">)</span> <span class="token operator">||</span> interrupted<span class="token punctuation">)</span>
        <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u51FA\uFF0C\u6574\u4F53\u4EE3\u7801\u548C await() \u7C7B\u4F3C\uFF0C\u533A\u522B\u5728\u4E8E\u6536\u5230\u5F02\u5E38\u540E\uFF0C\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u800C\u662F\u7EE7\u7EED\u6267\u884C while \u5FAA\u73AF\u3002</p><h3 id="_3-3-6-signal-\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_3-3-6-signal-\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> 3.3.6 signal() \u5B9E\u73B0\u5206\u6790</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u6709\u6301\u6709\u9501\u7684\u7EBF\u7A0B\uFF0C\u624D\u6709\u8D44\u683C\u8C03\u7528 signal()</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> first <span class="token operator">=</span> firstWaiter<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token function">doSignal</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5524\u9192\u961F\u5217\u4E2D\u7684\u7B2C 1 \u4E2A\u7EBF\u7A0B</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doSignal</span><span class="token punctuation">(</span><span class="token class-name">Node</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>firstWaiter <span class="token operator">=</span> first<span class="token punctuation">.</span>nextWaiter<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            lastWaiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        first<span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">transferForSignal</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>first <span class="token operator">=</span> firstWaiter<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">transferForSignal</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndSetWaitStatus</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span>CONDITION<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD9\u91CC\u5173\u952E\u7684\u4E00\u53E5\uFF1A\u5148\u628A Node \u653E\u5165\u4E92\u65A5\u9501\u7684\u540C\u6B65\u961F\u5217\u91CC\uFF0C\u518D\u8C03\u7528\u4E0B\u9762\u7684 unpark</span>
    <span class="token class-name">Node</span> p <span class="token operator">=</span> <span class="token function">enq</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ws <span class="token operator">=</span> p<span class="token punctuation">.</span>waitStatus<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">compareAndSetWaitStatus</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span>SIGNAL<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C await() \u4E00\u6837\uFF0C\u5728\u8C03\u7528 signal() \u7684\u65F6\u5019\uFF0C\u5FC5\u987B\u5148\u62FF\u5230\u9501\uFF08\u5426\u5219\u5C31\u4F1A\u629B\u51FA\u4E0A\u9762\u7684\u5F02\u5E38\uFF09\uFF0C\u662F\u56E0\u4E3A\u524D\u9762\u6267\u884C await() \u7684\u65F6\u5019\uFF0C\u628A\u9501\u91CA\u653E\u4E86\u3002</p><p>\u7136\u540E\uFF0C\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA firstWait\uFF0C\u5524\u9192\u5B83\u3002\u5728\u901A\u8FC7\u8C03\u7528 unpark \u5524\u9192\u5B83\u4E4B\u524D\uFF0C\u5148\u7528 enq(node) \u51FD\u6570\u628A\u8FD9\u4E2A Node \u653E\u5165 AQS \u7684\u9501\u5BF9\u5E94\u7684\u963B\u585E\u961F\u5217\u4E2D\u3002\u4E5F\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u624D\u6709\u4E86 await() \u51FD\u6570\u91CC\u9762\u7684\u5224\u65AD\u6761\u4EF6 while (!isOnSyncQueue(node))\uFF0C\u8FD9\u4E2A\u5224\u65AD\u6761\u4EF6\u88AB\u6EE1\u8DB3\uFF0C\u8BF4\u660E await \u7EBF\u7A0B\u4E0D\u662F\u88AB\u4E2D\u65AD\uFF0C\u800C\u662F\u88AB unpark \u5524\u9192\u7684\u3002</p><p>\u77E5\u9053\u4E86 signal() \u5B9E\u73B0\u539F\u7406\uFF0CsignalAll() \u4E0E\u6B64\u7C7B\u4F3C\uFF0C\u6B64\u5904\u4E0D\u518D\u8D58\u8FF0\u3002</p><h2 id="_3-4-stampedlock" tabindex="-1"><a class="header-anchor" href="#_3-4-stampedlock" aria-hidden="true">#</a> 3.4 StampedLock</h2><h3 id="_3-4-1-\u4E3A\u4EC0\u4E48\u5F15\u5165-stampedlock" tabindex="-1"><a class="header-anchor" href="#_3-4-1-\u4E3A\u4EC0\u4E48\u5F15\u5165-stampedlock" aria-hidden="true">#</a> 3.4.1 \u4E3A\u4EC0\u4E48\u5F15\u5165 StampedLock</h3><p>\u5728 JDK 8 \u4E2D\u65B0\u589E\u4E86 StampedLock\uFF0C\u6709\u4E86\u8BFB\u5199\u9501\uFF0C\u4E3A\u4EC0\u4E48\u8FD8\u8981\u5F15\u5165 StampedLock \u5462\uFF1F\u6765\u770B\u4E00\u4E0B\u88683-1 \u7684\u5BF9\u6BD4\u3002</p><p>\u88683-1 \u4E09\u79CD\u9501\u7684\u5E76\u53D1\u5EA6\u7684\u5BF9\u6BD4</p><table><thead><tr><th style="text-align:center;">\u9501</th><th style="text-align:center;">\u5E76\u53D1\u5EA6</th></tr></thead><tbody><tr><td style="text-align:center;">ReentrantLock</td><td style="text-align:center;">\u8BFB\u4E0E\u8BFB\u4E92\u65A5\uFF0C\u8BFB\u4E0E\u5199\u4E92\u65A5\uFF0C\u5199\u4E0E\u5199\u4E92\u65A5</td></tr><tr><td style="text-align:center;">ReentrantReadWriteLock</td><td style="text-align:center;">\u8BFB\u4E0E\u8BFB\u4E0D\u4E92\u65A5\uFF0C\u8BFB\u4E0E\u5199\u4E92\u65A5\uFF0C\u5199\u4E0E\u5199\u4E92\u65A5</td></tr><tr><td style="text-align:center;">StampedLock</td><td style="text-align:center;">\u8BFB\u4E0E\u8BFB\u4E0D\u4E92\u65A5\uFF0C\u8BFB\u4E0E\u5199\u4E0D\u4E92\u65A5\uFF0C\u5199\u4E0E\u5199\u4E92\u65A5</td></tr></tbody></table><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u4ECE ReentrantLock \u5230 StampedLock\uFF0C\u5E76\u53D1\u5EA6\u4F9D\u6B21\u63D0\u9AD8\u3002StampedLock \u662F\u5982\u4F55\u505A\u5230 \u201C\u8BFB\u201D \u4E0E \u201C\u5199\u201D \u4E5F\u4E0D\u4E92\u65A5\u3001\u5E76\u53D1\u5730\u8BBF\u95EE\u7684\u5462\uFF1F\u5728\u300A\u8F6F\u4EF6\u67B6\u6784\u8BBE\u8BA1\uFF1A\u5927\u578B\u7F51\u7AD9\u6280\u672F\u67B6\u6784\u4E0E\u4E1A\u52A1\u67B6\u6784\u878D\u5408\u4E4B\u9053\u300B\u4E2D\uFF0C\u8C08\u5230 MySQL \u9AD8\u5E76\u53D1\u7684\u6838\u5FC3\u673A\u5236 MVCC\uFF0C\u4E5F\u5C31\u662F\u4E00\u4EFD\u6570\u636E\u591A\u4E2A\u7248\u672C\uFF0C\u6B64\u5904\u7684 StampedLock \u6709\u5F02\u66F2\u540C\u5DE5\u4E4B\u5999\u3002</p><p>\u53E6\u4E00\u65B9\u9762\uFF0C\u56E0\u4E3A ReentrantLock \u91C7\u7528\u7684\u662F \u201C\u60B2\u89C2\u8BFB\u201D \u7684\u7B56\u7565\uFF0C\u5F53\u7B2C\u4E00\u4E2A\u8BFB\u7EBF\u7A0B\u62FF\u5230\u9501\u4E4B\u540E\uFF0C\u7B2C\u4E8C\u4E2A\u3001\u7B2C\u4E09\u4E2A\u8BFB\u7EBF\u7A0B\u8FD8\u53EF\u4EE5\u62FF\u5230\u9501\uFF0C\u4F7F\u5F97\u5199\u7EBF\u7A0B\u4E00\u76F4\u62FF\u4E0D\u5230\u9501\uFF0C\u53EF\u80FD\u5BFC\u81F4\u5199\u7EBF\u7A0B \u201C\u997F\u6B7B\u201D\u3002\u867D\u7136\u5728\u5176\u516C\u5E73\u6216\u975E\u516C\u5E73\u7684\u5B9E\u73B0\u4E2D\uFF0C\u90FD\u5C3D\u91CF\u907F\u514D\u8FD9\u79CD\u60C5\u5F62\uFF0C\u4F46\u8FD8\u6709\u53EF\u80FD\u53D1\u751F\u3002StampedLock \u5F15\u5165\u4E86 \u201C\u4E50\u89C2\u8BFB\u201D \u7B56\u7565\uFF0C\u8BFB\u7684\u65F6\u5019\u4E0D\u52A0\u8BFB\u9501\uFF0C\u8BFB\u51FA\u6765\u53D1\u73B0\u6570\u636E\u88AB\u4FEE\u6539\u4E86\uFF0C\u518D\u5347\u7EA7\u4E3A \u201C\u60B2\u89C2\u8BFB\u201D\uFF0C\u76F8\u5F53\u4E8E\u964D\u4F4E\u4E86 \u201C\u8BFB\u201D \u7684\u5730\u4F4D\uFF0C\u628A\u62A2\u9501\u7684\u5929\u5E73\u5F80 \u201C\u5199\u201D \u7684\u4E00\u65B9\u503E\u659C\u4E86\u4E00\u4E0B\uFF0C\u907F\u514D\u5199\u7EBF\u7A0B\u88AB\u997F\u6B7B\u3002</p><h3 id="_3-4-2-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_3-4-2-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> 3.4.2 \u4F7F\u7528\u573A\u666F</h3><p>\u5728\u5256\u6790\u5176\u539F\u7406\u4E4B\u524D\uFF0C\u4E0B\u9762\u5148\u4EE5\u5B98\u65B9\u7684\u4E00\u4E2A\u4F8B\u5B50\u6765\u770B\u4E00\u4E0B StampedLock \u5982\u4F55\u4F7F\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StampedLock</span> sl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StampedLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u591A\u4E2A\u7EBF\u7A0B\u8C03\u7528\u8BE5\u51FD\u6570\uFF0C\u4FEE\u6539 x\u3001y \u7684\u503C</span>
    <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">double</span> deltaX<span class="token punctuation">,</span> <span class="token keyword">double</span> deltaY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            x <span class="token operator">+=</span> deltaX<span class="token punctuation">;</span>
            y <span class="token operator">+=</span> deltaY<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            sl<span class="token punctuation">.</span><span class="token function">unlockWrite</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u591A\u4E2A\u7EBF\u7A0B\u8C03\u7528\u8BE5\u51FD\u6570\uFF0C\u6C42\u8DDD\u79BB\uFF0C\u4F7F\u7528 \u201D\u4E50\u89C2\u8BFB\u201C \u5C06\u5171\u4EAB\u53D8\u91CF\u62F7\u8D1D\u5230\u7EBF\u7A0B\u6808\uFF0C</span>
    <span class="token comment">// \u8BFB\u7684\u671F\u95F4\u6709\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u6570\u636E\uFF0C\u8BFB\u7684\u662F\u810F\u6570\u636E\uFF0C\u653E\u5F03\uFF0C\u5347\u7EA7\u4E3A \u201C\u60B2\u89C2\u8BFB\u201D</span>
    <span class="token keyword">double</span> <span class="token function">distanceFromOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">tryOptimisticRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> currentX <span class="token operator">=</span> x<span class="token punctuation">,</span> currentY <span class="token operator">=</span> y<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sl<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                currentX <span class="token operator">=</span> x<span class="token punctuation">;</span>
                currentY <span class="token operator">=</span> y<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                sl<span class="token punctuation">.</span><span class="token function">unlockRead</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>currentX <span class="token operator">*</span> currentX <span class="token operator">+</span> currentY <span class="token operator">*</span> currentY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u9762\u4EE3\u7801\u6240\u793A\uFF0C\u6709\u4E00\u4E2A Point \u7C7B\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u8C03\u7528 move() \u51FD\u6570\uFF0C\u4FEE\u6539\u5750\u6807\uFF1B\u8FD8\u6709\u591A\u4E2A\u7EBF\u7A0B\u8C03\u7528 distanceFromOrigin() \u51FD\u6570\uFF0C\u6C42\u8DDD\u79BB\u3002</p><p>\u9996\u5148\uFF0C\u6267\u884C move \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u8981\u52A0\u5199\u9501\u3002\u8FD9\u4E2A\u7528\u6CD5\u548C ReadWriteLock \u7684\u7528\u6CD5\u6CA1\u6709\u533A\u522B\uFF0C\u5199\u64CD\u4F5C\u548C\u5199\u64CD\u4F5C\u4E5F\u662F\u4E92\u65A5\u7684\u3002\u5173\u952E\u5728\u4E8E\u8BFB\u7684\u65F6\u5019\uFF0C\u7528\u4E86\u4E00\u4E2A \u201C\u4E50\u89C2\u8BFB\u201D sl.tryOptimisticRead()\uFF0C\u76F8\u5F53\u4E8E\u5728\u8BFB\u4E4B\u524D\u7ED9\u6570\u636E\u7684\u72B6\u6001\u505A\u4E86\u4E00\u4E2A \u201C\u5FEB\u7167\u201D\u3002\u7136\u540E\uFF0C\u628A\u6570\u636E\u62F7\u8D1D\u5230\u5185\u5B58\u91CC\u9762\uFF0C\u5728\u7528\u4E4B\u524D\uFF0C\u518D\u6BD4\u5BF9\u4E00\u6B21\u7248\u672C\u53F7\u3002\u5982\u679C\u7248\u672C\u53F7\u53D8\u4E86\uFF0C\u5219\u8BF4\u660E\u5728\u8BFB\u7684\u671F\u95F4\u6709\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u4E86\u6570\u636E\u3002\u8BFB\u51FA\u6765\u7684\u6570\u636E\u5E9F\u5F03\uFF0C\u91CD\u65B0\u83B7\u53D6\u8BFB\u9501\u3002\u5173\u952E\u4EE3\u7801\u5C31\u662F\u4E0B\u9762\u8FD9\u4E09\u884C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5728\u8BFB\u4E4B\u524D\uFF0C\u83B7\u53D6\u6570\u636E\u7684\u7248\u672C\u53F7</span>
<span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">tryOptimisticRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BFB\uFF1A\u5C06\u4E00\u4EFD\u6570\u636E\u62F7\u8D1D\u5230\u7EBF\u7A0B\u7684\u6808\u5185\u5B58\u4E2D</span>
<span class="token keyword">double</span> currentX <span class="token operator">=</span> x<span class="token punctuation">,</span> currentY <span class="token operator">=</span> y<span class="token punctuation">;</span>
<span class="token comment">// \u8BFB\u4E4B\u540E\uFF1A\u5C06\u8BFB\u4E4B\u524D\u7684\u7248\u672C\u53F7\u548C\u5F53\u524D\u7684\u7248\u672C\u53F7\u6BD4\u5BF9\uFF0C\u5224\u65AD\u8BFB\u51FA\u6765\u6570\u636E\u662F\u5426\u53EF\u4EE5\u4F7F\u7528\uFF08\u6240\u8C13\u53EF\u4EE5\u4F7F\u7528\uFF0C\u662F\u6307\u8BFB\u7684\u671F\u95F4\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u8FC7\u6570\u636E\uFF09</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sl<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u8BF4\u660E\u7684\u662F\uFF0C\u8FD9\u4E09\u884C\u5173\u952E\u4EE3\u7801\u5BF9\u987A\u5E8F\u975E\u5E38\u654F\u611F\uFF0C\u4E0D\u80FD\u6709\u91CD\u6392\u5E8F\u3002\u56E0\u4E3A state \u53D8\u91CF\u5DF2\u7ECF\u662F volatile\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7981\u6B62\u91CD\u6392\u5E8F\uFF0C\u4F46 stamp \u5E76\u4E0D\u662F volatile \u7684\u3002\u4E3A\u6B64\uFF0C\u5728 validate(stamp) \u51FD\u6570\u91CC\u9762\u63D2\u5165\u5185\u5B58\u5C4F\u969C\u3002</p><h3 id="_3-4-3-\u4E50\u89C2\u8BFB-\u7684\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-4-3-\u4E50\u89C2\u8BFB-\u7684\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 3.4.3 \u201C\u4E50\u89C2\u8BFB\u201D \u7684\u5B9E\u73B0\u539F\u7406</h3><p>\u9996\u5148\uFF0CStampedLock \u662F\u4E00\u4E2A\u8BFB\u5199\u9501\uFF0C\u56E0\u6B64\u4E5F\u4F1A\u50CF\u8BFB\u5199\u9501\u90A3\u6837\uFF0C\u628A\u4E00\u4E2A state \u53D8\u91CF\u5206\u6210\u4E24\u534A\uFF0C\u5206\u522B\u8868\u793A\u8BFB\u9501\u548C\u5199\u9501\u7684\u72B6\u6001\u3002\u540C\u65F6\uFF0C\u5B83\u8FD8\u9700\u8981\u4E00\u4E2A\u6570\u636E\u7684 version\u3002\u4F46\u6B63\u5982\u524D\u9762\u6240\u8BF4\uFF0C\u4E00\u6B21 CAS \u6CA1\u6709\u529E\u6CD5\u64CD\u4F5C\u4E24\u4E2A\u53D8\u91CF\uFF0C\u6240\u4EE5\u8FD9\u4E2A state \u53D8\u91CF\u672C\u8EAB\u540C\u65F6\u4E5F\u8868\u793A\u4E86\u6570\u636E\u7684 version\u3002\u4E0B\u9762\u5148\u5206\u6790 state \u53D8\u91CF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StampedLock</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span> 
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> LG_READERS <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> RUNIT <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C 8 \u4F4D\u8868\u793A\u5199\u9501</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> WBIT  <span class="token operator">=</span> <span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> LG_READERS<span class="token punctuation">;</span>
    <span class="token comment">// \u6700\u4F4E\u7684 7 \u4F4D\u8868\u793A\u8BFB\u9501</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> RBITS <span class="token operator">=</span> WBIT <span class="token operator">-</span> <span class="token number">1L</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BFB\u9501\u7684\u6570\u76EE</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> RFULL <span class="token operator">=</span> RBITS <span class="token operator">-</span> <span class="token number">1L</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BFB\u9501\u548C\u5199\u9501\u7684\u72B6\u6001\u5408\u5230\u4E00\u8D77</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> ABITS <span class="token operator">=</span> RBITS <span class="token operator">|</span> WBIT<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> SBITS <span class="token operator">=</span> <span class="token operator">~</span>RBITS<span class="token punctuation">;</span> 

    <span class="token comment">// Initial value for lock state; avoid failure value zero</span>
    <span class="token comment">// state \u7684\u521D\u59CB\u503C</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> ORIGIN <span class="token operator">=</span> WBIT <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> state<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u5408\u4EE3\u7801\u548C\u56FE3-5\uFF1A\u7528\u6700\u4F4E\u7684 8 \u4F4D\u8868\u793A\u8BFB\u548C\u5199\u7684\u72B6\u6001\uFF0C\u5176\u4E2D\u7B2C 8 \u4F4D\u8868\u793A\u5199\u9501\u7684\u72B6\u6001\uFF0C\u6700\u4F4E\u7684 7 \u4F4D\u8868\u793A\u8BFB\u9501\u7684\u72B6\u6001\u3002\u56E0\u4E3A\u5199\u9501\u53EA\u6709\u4E00\u4E2A bit \u4F4D\uFF0C\u6240\u4EE5\u5199\u9501\u662F\u4E0D\u53EF\u91CD\u5165\u7684\u3002</p><img src="`+l+`" alt="\u56FE3-5" style="zoom:50%;"><p>\u56FE3-5 state \u53D8\u91CF\u5728\u4E0D\u540C\u72B6\u6001\u4E0B\u7684\u53D6\u503C</p><p>\u521D\u59CB\u503C\u4E0D\u4E3A 0\uFF0C\u800C\u662F\u628A WBIT \u5411\u5DE6\u79FB\u52A8\u4E86\u4E00\u4F4D\uFF0C\u4E5F\u5C31\u662F\u4E0A\u9762\u7684 ORIGIN \u5E38\u91CF\uFF0C\u6784\u9020\u51FD\u6570\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">StampedLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    state <span class="token operator">=</span> ORIGIN<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4EC0\u4E48 state \u7684\u521D\u59CB\u503C\u4E0D\u8BBE\u4E3A 0 \u5462\uFF1F\u8FD9\u5C31\u8981\u4ECE\u4E50\u89C2\u9501\u7684\u5B9E\u73B0\u8BF4\u8D77\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">tryOptimisticRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> s<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> state<span class="token punctuation">)</span> <span class="token operator">&amp;</span> WBIT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>s <span class="token operator">&amp;</span> SBITS<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0L</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token keyword">long</span> stamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">loadFence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F53 stamp = 0 \u65F6\uFF0Cvalidate \u6C38\u8FDC\u8FD4\u56DE false</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>stamp <span class="token operator">&amp;</span> SBITS<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>state <span class="token operator">&amp;</span> SBITS<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4E24\u4E2A\u51FD\u6570\u5FC5\u987B\u7ED3\u5408\u8D77\u6765\u770B\uFF1A\u5F53 state &amp; WBIT != 0 \u7684\u65F6\u5019\uFF0C\u8BF4\u660E\u6709\u7EBF\u7A0B\u6301\u6709\u5199\u9501\uFF0C\u4E0A\u9762\u7684 tryOptimisticRead \u4F1A\u6C38\u8FDC\u8FD4\u56DE 0\u3002\u8FD9\u6837\uFF0C\u518D\u8C03\u7528 validate(stamp)\uFF0C\u4E5F\u5C31\u662F validate(0) \u4E5F\u4F1A\u6C38\u8FDC\u8FD4\u56DE false\u3002\u8FD9\u6B63\u662F\u6211\u4EEC\u60F3\u8981\u7684\u903B\u8F91\uFF1A\u5F53\u6709\u7EBF\u7A0B\u6301\u6709\u5199\u9501\u7684\u65F6\u5019\uFF0Cvalidate \u6C38\u8FDC\u8FD4\u56DE false\uFF0C\u65E0\u8BBA\u5199\u7EBF\u7A0B\u662F\u5426\u91CA\u653E\u4E86\u5199\u9501\u3002\u56E0\u4E3A\u65E0\u8BBA\u662F\u5426\u91CA\u653E\u4E86\uFF08state \u56DE\u5230\u521D\u59CB\u503C\uFF09\u5199\u9501\uFF0Cstate \u503C\u90FD\u4E0D\u4E3A 0\uFF0C\u6240\u4EE5 validate(0) \u6C38\u8FDC\u4E3A false\u3002</p><p>\u4E3A\u4EC0\u4E48\u4E0A\u9762\u7684 validate(..) \u51FD\u6570\u4E0D\u76F4\u63A5\u6BD4\u8F83 stamp = state\uFF0C\u800C\u8981\u6BD4\u8F83 state &amp; SBITS = state &amp; SBITS \u5462\uFF1F\u56E0\u4E3A\u8BFB\u9501\u548C\u8BFB\u9501\u662F\u4E0D\u4E92\u65A5\u7684\uFF01\u6240\u4EE5\uFF0C\u5373\u4F7F\u5728 \u201C\u4E50\u89C2\u8BFB\u201D \u7684\u65F6\u5019\uFF0Cstate \u503C\u88AB\u4FEE\u6539\u4E86\uFF0C\u4F46\u5982\u679C\u5B83\u6539\u7684\u662F\u7B2C 7 \u4F4D\uFF0Cvalidate(..) \u8FD8\u662F\u4F1A\u8FD4\u56DE true\u3002</p><p>\u53E6\u5916\u8981\u8BF4\u660E\u7684\u4E00\u70B9\u662F\uFF0C\u4E0A\u9762\u4F7F\u7528\u4E86\u5185\u5B58\u5C4F\u969C U.loadFence()\uFF0C\u662F\u56E0\u4E3A\u5728\u8FD9\u884C\u4EE3\u7801\u7684\u4E0B\u4E00\u884C\u91CC\u9762\u7684 stamp\u3001SBITS \u53D8\u91CF\u4E0D\u662F volatile \u7684\uFF0C\u7531\u6B64\u53EF\u4EE5\u7981\u6B62\u5176\u548C\u524D\u9762\u7684 currentX = x\uFF0CcurrentY = y \u8FDB\u884C\u91CD\u6392\u5E8F\u3002</p><p>\u901A\u8FC7\u4E0A\u9762\u7684\u5206\u6790\uFF0C\u53EF\u4EE5\u53D1\u73B0 state \u7684\u8BBE\u8BA1\u975E\u5E38\u5DE7\u5999\u3002\u53EA\u901A\u8FC7\u4E00\u4E2A\u53D8\u91CF\uFF0C\u65E2\u5B9E\u73B0\u4E86\u8BFB\u9501\u3001\u5199\u9501\u7684\u72B6\u6001\u8BB0\u5F55\uFF0C\u8FD8\u5B9E\u73B0\u4E86\u6570\u636E\u7684\u7248\u672C\u53F7\u7684\u8BB0\u5F55\u3002</p><h3 id="_3-4-4-\u60B2\u89C2\u8BFB-\u5199-\u963B\u585E-\u4E0E-\u81EA\u65CB-\u7B56\u7565\u5B9E\u73B0\u5DEE\u5F02" tabindex="-1"><a class="header-anchor" href="#_3-4-4-\u60B2\u89C2\u8BFB-\u5199-\u963B\u585E-\u4E0E-\u81EA\u65CB-\u7B56\u7565\u5B9E\u73B0\u5DEE\u5F02" aria-hidden="true">#</a> 3.4.4 \u60B2\u89C2\u8BFB / \u5199\uFF1A\u201C\u963B\u585E\u201D \u4E0E \u201C\u81EA\u65CB\u201D \u7B56\u7565\u5B9E\u73B0\u5DEE\u5F02</h3><p>\u540C ReadWriteLock \u4E00\u6837\uFF0CStampedLock \u4E5F\u8981\u8FDB\u884C\u60B2\u89C2\u7684\u8BFB\u9501\u548C\u5199\u9501\u64CD\u4F5C\u3002\u4E0D\u8FC7\uFF0C\u5B83\u4E0D\u662F\u57FA\u4E8E AQS \u5B9E\u73B0\u7684\uFF0C\u800C\u662F\u5185\u90E8\u91CD\u65B0\u5B9E\u73B0\u4E86\u4E00\u4E2A\u963B\u585E\u961F\u5217\u3002\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StampedLock</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token doc-comment comment">/** Wait nodes */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">WNode</span> <span class="token punctuation">{</span>
        <span class="token keyword">volatile</span> <span class="token class-name">WNode</span> prev<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">WNode</span> next<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">WNode</span> cowait<span class="token punctuation">;</span>   
        <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> thread<span class="token punctuation">;</span>   
        <span class="token comment">// \u53D6\u503C\uFF1A0\uFF0CWAITING \u6216 CANCELLED</span>
        <span class="token keyword">volatile</span> <span class="token keyword">int</span> status<span class="token punctuation">;</span>     
        <span class="token comment">// \u53D6\u503C\uFF1ARMODE \u6216 WMODE</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> mode<span class="token punctuation">;</span>            
        <span class="token class-name">WNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token class-name">WNode</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            mode <span class="token operator">=</span> m<span class="token punctuation">;</span> 
            prev <span class="token operator">=</span> p<span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">WNode</span> whead<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">WNode</span> wtail<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u963B\u585E\u961F\u5217\u548C AQS \u91CC\u9762\u7684\u5F88\u50CF\u3002\u521A\u5F00\u59CB\u7684\u65F6\u5019\uFF0Cwhead = wtail = NULL\uFF0C\u7136\u540E\u521D\u59CB\u5316\uFF0C\u5EFA\u4E00\u4E2A\u7A7A\u8282\u70B9\uFF0Cwhead \u548C wtail \u90FD\u6307\u5411\u8FD9\u4E2A\u7A7A\u8282\u70B9\uFF0C\u4E4B\u540E\u5F80\u91CC\u9762\u52A0\u5165\u4E00\u4E2A\u4E2A\u8BFB\u7EBF\u7A0B\u6216\u5199\u7EBF\u7A0B\u8282\u70B9\u3002\u4F46\u57FA\u4E8E\u8FD9\u4E2A\u963B\u585E\u961F\u5217\u5B9E\u73B0\u7684\u9501\u7684\u8C03\u5EA6\u7B56\u7565\u548C AQS \u5F88\u4E0D\u4E00\u6837\uFF0C\u4E5F\u5C31\u662F \u201C\u81EA\u65CB\u201D\u3002\u5728 AQS \u91CC\u9762\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B CAS state \u5931\u8D25\u4E4B\u540E\uFF0C\u4F1A\u7ACB\u5373\u52A0\u5165\u963B\u585E\u961F\u5217\uFF0C\u5E76\u4E14\u8FDB\u5165\u963B\u585E\u72B6\u6001\u3002\u4F46\u5728 StampedLock \u4E2D\uFF0CCAS state \u5931\u8D25\u4E4B\u540E\uFF0C\u4F1A\u4E0D\u65AD\u81EA\u65CB\uFF0C\u81EA\u65CB\u8DB3\u591F\u591A\u7684\u6B21\u6570\u4E4B\u540E\uFF0C\u5982\u679C\u8FD8\u62FF\u4E0D\u5230\u9501\uFF0C\u624D\u8FDB\u5165\u963B\u585E\u72B6\u6001\u3002\u4E3A\u6B64\uFF0C\u6839\u636E CPU \u7684\u6838\u6570\uFF0C\u5B9A\u4E49\u4E86\u81EA\u65CB\u6B21\u6570\u7684\u5E38\u91CF\u503C\u3002\u5982\u679C\u662F\u5355\u6838\u7684 CPU\uFF0C\u80AF\u5B9A\u4E0D\u80FD\u81EA\u65CB\uFF0C\u5728\u591A\u6838\u60C5\u51B5\u4E0B\uFF0C\u624D\u91C7\u7528\u81EA\u65CB\u7B56\u7565\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NCPU <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** Maximum number of retries before enqueuing on acquisition */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SPINS <span class="token operator">=</span> <span class="token punctuation">(</span>NCPU <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u4EE5\u5199\u9501\u7684\u52A0\u9501\uFF0C\u4E5F\u5C31\u662F StampedLock \u7684 writeLock() \u51FD\u6570\u4E3A\u4F8B\uFF0C\u6765\u770B\u4E00\u4E0B\u81EA\u65CB\u7684\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> s<span class="token punctuation">,</span> next<span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> state<span class="token punctuation">)</span> <span class="token operator">&amp;</span> ABITS<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0L</span> <span class="token operator">&amp;&amp;</span>
             <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> STATE<span class="token punctuation">,</span> s<span class="token punctuation">,</span> next <span class="token operator">=</span> s <span class="token operator">+</span> WBIT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> next <span class="token operator">:</span> <span class="token function">acquireWrite</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u9762\u4EE3\u7801\u6240\u793A\uFF0C\u5F53 state &amp; ABITS == 0 \u7684\u65F6\u5019\uFF0C\u8BF4\u660E\u65E2\u6CA1\u6709\u7EBF\u7A0B\u6301\u6709\u8BFB\u9501\uFF0C\u4E5F\u6CA1\u6709\u7EBF\u7A0B\u6301\u6709\u5199\u9501\uFF0C\u6B64\u65F6\u5F53\u524D\u7EBF\u7A0B\u624D\u6709\u8D44\u683C\u901A\u8FC7 CAS \u64CD\u4F5C state\u3002\u82E5\u64CD\u4F5C\u4E0D\u6210\u529F\uFF0C\u5219\u8C03\u7528 acquireWrite() \u51FD\u6570\u8FDB\u5165\u963B\u585E\u961F\u5217\uFF0C\u5E76\u8FDB\u884C\u81EA\u65CB\uFF0C\u8FD9\u4E2A\u51FD\u6570\u662F\u6574\u4E2A\u52A0\u9501\u64CD\u4F5C\u7684\u6838\u5FC3\uFF0C\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">long</span> <span class="token function">acquireWrite</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> interruptible<span class="token punctuation">,</span> <span class="token keyword">long</span> deadline<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">WNode</span> node <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> p<span class="token punctuation">;</span>
    <span class="token comment">// \u5165\u961F\u5217\u65F6\u81EA\u65CB</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> spins <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token keyword">long</span> m<span class="token punctuation">,</span> s<span class="token punctuation">,</span> ns<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m <span class="token operator">=</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> state<span class="token punctuation">)</span> <span class="token operator">&amp;</span> ABITS<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> STATE<span class="token punctuation">,</span> s<span class="token punctuation">,</span> ns <span class="token operator">=</span> s <span class="token operator">+</span> WBIT<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// \u81EA\u65CB\u7684\u65F6\u5019\u62FF\u5230\u4E86\u9501\uFF0C\u51FD\u6570\u8FD4\u56DE</span>
                <span class="token keyword">return</span> ns<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>spins <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            spins <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">==</span> WBIT <span class="token operator">&amp;&amp;</span> wtail <span class="token operator">==</span> whead<span class="token punctuation">)</span> <span class="token operator">?</span> SPINS <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>spins <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">nextSecondarySeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token comment">// \u4E0D\u65AD\u81EA\u65CB\uFF0C\u4EE5\u4E00\u5B9A\u7684\u6982\u7387\u628A spins \u503C\u5F80\u4E0B\u7D2F\u51CF</span>
                <span class="token operator">--</span>spins<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u521D\u59CB\u5316\u961F\u5217</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> wtail<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token class-name">WNode</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WNode</span><span class="token punctuation">(</span>WMODE<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> WHEAD<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hd<span class="token punctuation">)</span><span class="token punctuation">)</span>
                wtail <span class="token operator">=</span> hd<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WNode</span><span class="token punctuation">(</span>WMODE<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>prev <span class="token operator">!=</span> p<span class="token punctuation">)</span>
            node<span class="token punctuation">.</span>prev <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> WTAIL<span class="token punctuation">,</span> p<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
            <span class="token comment">// for \u5FAA\u73AF\u552F\u4E00\u7684 break\uFF0CCAS tail \u6210\u529F\uFF08\u6210\u529F\u52A0\u5165\u961F\u5217\u5C3E\u90E8\uFF09\uFF0C\u624D\u4F1A\u9000\u51FA for \u5FAA\u73AF</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> spins <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WNode</span> h<span class="token punctuation">,</span> np<span class="token punctuation">,</span> pp<span class="token punctuation">;</span> <span class="token keyword">int</span> ps<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">=</span> whead<span class="token punctuation">)</span> <span class="token operator">==</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>spins <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                spins <span class="token operator">=</span> HEAD_SPINS<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>spins <span class="token operator">&lt;</span> MAX_HEAD_SPINS<span class="token punctuation">)</span>
                spins <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> spins<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> s<span class="token punctuation">,</span> ns<span class="token punctuation">;</span>
                <span class="token comment">// \u518D\u6B21\u5C1D\u8BD5\u62FF\u9501</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> state<span class="token punctuation">)</span> <span class="token operator">&amp;</span> ABITS<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> STATE<span class="token punctuation">,</span> s<span class="token punctuation">,</span> ns <span class="token operator">=</span> s <span class="token operator">+</span> WBIT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        whead <span class="token operator">=</span> node<span class="token punctuation">;</span>
                        node<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> ns<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u4E0D\u65AD\u81EA\u65CB</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">nextSecondarySeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">--</span>k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u81EA\u5DF1\u4ECE\u963B\u585E\u4E2D\u5524\u9192\uFF0C\u7136\u540E\u5524\u9192 cowait \u4E2D\u7684\u6240\u6709 reader \u7EBF\u7A0B</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token class-name">WNode</span> c<span class="token punctuation">;</span> <span class="token class-name">Thread</span> w<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">=</span> h<span class="token punctuation">.</span>cowait<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> WCOWAIT<span class="token punctuation">,</span> c<span class="token punctuation">,</span> c<span class="token punctuation">.</span>cowait<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>w <span class="token operator">=</span> c<span class="token punctuation">.</span>thread<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>whead <span class="token operator">==</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>np <span class="token operator">=</span> node<span class="token punctuation">.</span>prev<span class="token punctuation">)</span> <span class="token operator">!=</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>np <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token punctuation">(</span>p <span class="token operator">=</span> np<span class="token punctuation">)</span><span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>   <span class="token comment">// stale</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ps <span class="token operator">=</span> p<span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> WSTATUS<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> WAITING<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ps <span class="token operator">==</span> CANCELLED<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pp <span class="token operator">=</span> p<span class="token punctuation">.</span>prev<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    node<span class="token punctuation">.</span>prev <span class="token operator">=</span> pp<span class="token punctuation">;</span>
                    pp<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> time<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>deadline <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span>
                    time <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>time <span class="token operator">=</span> deadline <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0L</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token function">cancelWaiter</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> node<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span> wt <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>wt<span class="token punctuation">,</span> PARKBLOCKER<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                node<span class="token punctuation">.</span>thread <span class="token operator">=</span> wt<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> h <span class="token operator">||</span> <span class="token punctuation">(</span>state <span class="token operator">&amp;</span> ABITS<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> whead <span class="token operator">==</span> h <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>prev <span class="token operator">==</span> p<span class="token punctuation">)</span>
                    <span class="token comment">// \u8FDB\u5165\u963B\u585E\u72B6\u6001\uFF0C\u4E4B\u540E\u88AB\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B release \u5524\u9192\uFF0C\u63A5\u7740\u5F80\u4E0B\u6267\u884C\u8FD9\u4E2A for \u5FAA\u73AF</span>
                    <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
                node<span class="token punctuation">.</span>thread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>wt<span class="token punctuation">,</span> PARKBLOCKER<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptible <span class="token operator">&amp;&amp;</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token function">cancelWaiter</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> node<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4E2A acquireWrite(..) \u51FD\u6570\u662F\u4E24\u4E2A\u5927\u7684 for \u5FAA\u73AF\uFF0C\u5185\u90E8\u5B9E\u73B0\u4E86\u975E\u5E38\u590D\u6742\u7684\u81EA\u65CB\u7B56\u7565\u3002</p><p>\u5728\u7B2C\u4E00\u4E2A\u5927\u7684 for \u5FAA\u73AF\u91CC\u9762\uFF0C\u76EE\u7684\u5C31\u662F\u628A\u8BE5 Node \u52A0\u5165\u961F\u5217\u7684\u5C3E\u90E8\uFF0C\u4E00\u8FB9\u52A0\u5165\uFF0C\u4E00\u8FB9\u901A\u8FC7 CAS \u64CD\u4F5C\u5C1D\u8BD5\u83B7\u5F97\u9501\u3002\u5982\u679C\u83B7\u5F97\u4E86\uFF0C\u6574\u4E2A\u51FD\u6570\u5C31\u4F1A\u8FD4\u56DE\uFF1B\u5982\u679C\u4E0D\u80FD\u83B7\u5F97\u9501\uFF0C\u4F1A\u4E00\u76F4\u81EA\u65CB\uFF0C\u76F4\u5230\u52A0\u5165\u961F\u5217\u5C3E\u90E8\u3002</p><p>\u5728\u7B2C\u4E8C\u4E2A\u5927\u7684 for \u5FAA\u73AF\u91CC\uFF0C\u4E5F\u5C31\u662F\u8BE5 Node \u5DF2\u7ECF\u5728\u961F\u5217\u5C3E\u90E8\u4E86\u3002\u8FD9\u4E2A\u65F6\u5019\uFF0C\u5982\u679C\u53D1\u73B0\u81EA\u5DF1\u521A\u597D\u4E5F\u5728\u961F\u5217\u5934\u90E8\uFF0C\u8BF4\u660E\u961F\u5217\u4E2D\u9664\u4E86\u7A7A\u7684 Head \u8282\u70B9\uFF0C\u5C31\u662F\u5F53\u524D\u7EBF\u7A0B\u4E86\u3002\u6B64\u65F6\uFF0C\u518D\u8FDB\u884C\u65B0\u4E00\u8F6E\u7684\u81EA\u65CB\uFF0C\u76F4\u5230\u8FBE\u5230 MAX_HEAD_SPINS \u6B21\u6570\uFF0C\u7136\u540E\u8FDB\u5165\u963B\u585E\u3002\u8FD9\u91CC\u6709\u4E00\u4E2A\u5173\u952E\u70B9\u8981\u8BF4\u660E\uFF1A\u5F53 release(..) \u51FD\u6570\u88AB\u8C03\u7528\u4E4B\u540E\uFF0C\u4F1A\u5524\u9192\u961F\u5217\u5934\u90E8\u7684\u7B2C 1 \u4E2A\u5143\u7D20\uFF0C\u6B64\u65F6\u4F1A\u6267\u884C\u7B2C\u4E8C\u4E2A\u5927\u7684 for \u5FAA\u73AF\u91CC\u9762\u7684\u903B\u8F91\uFF0C\u4E5F\u5C31\u662F\u63A5\u7740 for \u5FAA\u73AF\u91CC\u9762 park() \u51FD\u6570\u540E\u9762\u7684\u4EE3\u7801\u5F80\u4E0B\u6267\u884C\u3002</p><p>\u53E6\u5916\u4E00\u4E2A\u4E0D\u540C\u4E8E AQS \u7684\u963B\u585E\u961F\u5217\u7684\u5730\u65B9\u662F\uFF0C\u5728\u6BCF\u4E2A WNode \u91CC\u9762\u6709\u4E00\u4E2A cowait \u6307\u9488\uFF0C\u7528\u4E8E\u4E32\u8054\u8D77\u6240\u6709\u7684\u8BFB\u7EBF\u7A0B\u3002\u4F8B\u5982\uFF0C\u961F\u5217\u5C3E\u90E8\u963B\u585E\u7684\u662F\u4E00\u4E2A\u8BFB\u7EBF\u7A0B 1\uFF0C\u73B0\u5728\u53C8\u6765\u4E86\u8BFB\u7EBF\u7A0B 2\u30013\uFF0C\u90A3\u4E48\u4F1A\u901A\u8FC7 cowait \u6307\u9488\uFF0C\u628A 1\u30012\u30013 \u4E32\u8054\u8D77\u6765\u30021 \u88AB\u5524\u9192\u4E4B\u540E\uFF0C2\u30013 \u4E5F\u968F\u4E4B\u4E00\u8D77\u88AB\u5524\u9192\uFF0C\u56E0\u4E3A\u8BFB\u548C\u8BFB\u4E4B\u95F4\u4E0D\u4E92\u65A5\u3002</p><p>\u660E\u767D\u52A0\u9501\u7684\u81EA\u65CB\u7B56\u7565\u540E\uFF0C\u4E0B\u9762\u6765\u770B\u9501\u7684\u91CA\u653E\u64CD\u4F5C\u3002\u548C\u8BFB\u5199\u9501\u7684\u5B9E\u73B0\u7C7B\u4F3C\uFF0C\u4E5F\u662F\u505A\u4E86\u4E24\u4EF6\u4E8B\u60C5\uFF1A\u4E00\u662F\u628A state \u53D8\u91CF\u7F6E\u56DE\u539F\u4F4D\uFF0C\u4E8C\u662F\u5524\u9192\u963B\u585E\u961F\u5217\u4E2D\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\u3002\u8282\u70B9\u88AB\u5524\u9192\u4E4B\u540E\uFF0C\u4F1A\u7EE7\u7EED\u6267\u884C\u4E0A\u9762\u7684\u7B2C\u4E8C\u4E2A\u5927\u7684 for \u5FAA\u73AF\uFF0C\u81EA\u65CB\u62FF\u9501\u3002\u5982\u679C\u6210\u529F\u62FF\u5230\uFF0C\u5219\u51FA\u961F\u5217\uFF1B\u5982\u679C\u62FF\u4E0D\u5230\uFF0C\u5219\u518D\u6B21\u8FDB\u5165\u963B\u585E\uFF0C\u7B49\u5F85\u4E0B\u4E00\u6B21\u88AB\u5524\u9192\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlockWrite</span><span class="token punctuation">(</span><span class="token keyword">long</span> stamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">WNode</span> h<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">!=</span> stamp <span class="token operator">||</span> <span class="token punctuation">(</span>stamp <span class="token operator">&amp;</span> WBIT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u91CA\u653E\u9501\uFF0C\u628A state \u56DE\u5F52\u539F\u4F4D</span>
    state <span class="token operator">=</span> <span class="token punctuation">(</span>stamp <span class="token operator">+=</span> WBIT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0L</span> <span class="token operator">?</span> ORIGIN <span class="token operator">:</span> stamp<span class="token punctuation">;</span>
    <span class="token comment">// \u5524\u9192\u961F\u5217\u5934\u90E8\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">=</span> whead<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> h<span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">release</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">WNode</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WNode</span> q<span class="token punctuation">;</span> <span class="token class-name">Thread</span> w<span class="token punctuation">;</span>
        <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> WSTATUS<span class="token punctuation">,</span> WAITING<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">=</span> h<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> q<span class="token punctuation">.</span>status <span class="token operator">==</span> CANCELLED<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">WNode</span> t <span class="token operator">=</span> wtail<span class="token punctuation">;</span> t <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> t <span class="token operator">!=</span> h<span class="token punctuation">;</span> t <span class="token operator">=</span> t<span class="token punctuation">.</span>prev<span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>status <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    q <span class="token operator">=</span> t<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>q <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>w <span class="token operator">=</span> q<span class="token punctuation">.</span>thread<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,201),k=[u];function r(d,v){return s(),a("div",null,k)}var y=n(i,[["render",r],["__file","\u7B2C3\u7AE0Lock\u4E0ECondition.html.vue"]]);export{y as default};
