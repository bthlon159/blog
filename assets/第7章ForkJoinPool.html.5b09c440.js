import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.0d56c066.js";var t="/assets/\u56FE7-1.c746c988.jpeg",o="/assets/\u56FE7-2.5157b3f1.jpeg",e="/assets/\u56FE7-3.c484ff75.jpeg",c="/assets/\u56FE7-4.4c002d1c.jpeg",l="/assets/\u56FE7-5.edbc6f95.jpeg",i="/assets/\u56FE7-6.0436d62b.jpeg",u="/assets/\u56FE7-7.b8e3ab81.jpeg",k="/assets/\u56FE7-8.7d827aca.jpeg";const r={},d=p(`<h1 id="\u7B2C-7-\u7AE0-forkjoinpool" tabindex="-1"><a class="header-anchor" href="#\u7B2C-7-\u7AE0-forkjoinpool" aria-hidden="true">#</a> \u7B2C 7 \u7AE0 ForkJoinPool</h1><h2 id="_7-1-forkjoinpool-\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_7-1-forkjoinpool-\u7528\u6CD5" aria-hidden="true">#</a> 7.1 ForkJoinPool \u7528\u6CD5</h2><p>\u5728\u5927\u5B66\u7684\u7B97\u6CD5\u8BFE\u672C\u4E2D\uFF0C\u90FD\u6709\u4E00\u79CD\u57FA\u672C\u7B97\u6CD5\uFF1A\u5206\u6CBB\u3002\u5176\u57FA\u672C\u601D\u8DEF\u662F\uFF1A\u5C06\u4E00\u4E2A\u5927\u7684\u4EFB\u52A1\u5206\u4E3A\u82E5\u5E72\u4E2A\u5B50\u4EFB\u52A1\uFF0C\u8FD9\u4E9B\u5B50\u4EFB\u52A1\u5206\u522B\u8BA1\u7B97\uFF0C\u7136\u540E\u5408\u5E76\u51FA\u6700\u7EC8\u7ED3\u679C\uFF0C\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\u901A\u5E38\u4F1A\u7528\u5230\u9012\u5F52\u3002</p><p>\u800C ForkJoinPool \u5C31\u662F JDK 7 \u63D0\u4F9B\u7684\u4E00\u79CD \u201C\u5206\u6CBB\u7B97\u6CD5\u201D \u7684\u591A\u7EBF\u7A0B\u5E76\u884C\u8BA1\u7B97\u6846\u67B6\u3002Fork \u610F\u4E3A\u5206\u53C9\uFF0CJoin \u610F\u4E3A\u5408\u5E76\uFF0C\u4E00\u5206\u4E00\u5408\uFF0C\u76F8\u4E92\u914D\u5408\uFF0C\u5F62\u6210\u5206\u6CBB\u7B97\u6CD5\u3002\u6B64\u5916\uFF0C\u4E5F\u53EF\u4EE5\u5C06 ForkJoinPool \u770B\u4F5C\u4E00\u4E2A\u5355\u673A\u7248\u7684 Map / Reduce\uFF0C\u53EA\u4E0D\u8FC7\u8FD9\u91CC\u7684\u5E76\u884C\u4E0D\u662F\u591A\u53F0\u673A\u5668\u5E76\u884C\u8BA1\u7B97\uFF0C\u800C\u662F\u591A\u4E2A\u7EBF\u7A0B\u5E76\u884C\u8BA1\u7B97\u3002</p><p>\u76F8\u6BD4\u4E8E ThreadPoolExecutor\uFF0CForkJoinPool \u53EF\u4EE5\u66F4\u597D\u5730\u5B9E\u73B0\u8BA1\u7B97\u7684\u8D1F\u8F7D\u5747\u8861\uFF0C\u63D0\u9AD8\u8D44\u6E90\u5229\u7528\u7387\u3002\u5047\u8BBE\u6709 5 \u4E2A\u4EFB\u52A1\uFF0C\u5728 ThreadPoolExecutor \u4E2D\u6709 5 \u4E2A\u7EBF\u7A0B\u5E76\u884C\u6267\u884C\uFF0C\u5176\u4E2D\u4E00\u4E2A\u4EFB\u52A1\u7684\u8BA1\u7B97\u91CF\u5F88\u5927\uFF0C\u5176\u4F59 4 \u4E2A\u4EFB\u52A1\u7684\u8BA1\u7B97\u91CF\u5F88\u5C0F\uFF0C\u8FD9\u4F1A\u5BFC\u81F4 1 \u4E2A\u7EBF\u7A0B\u5F88\u5FD9\uFF0C\u5176\u4ED6 4 \u4E2A\u7EBF\u7A0B\u5219\u5904\u4E8E\u7A7A\u95F2\u72B6\u6001\u3002\u800C\u5229\u7528 ForkJoinPool\uFF0C\u53EF\u4EE5\u628A\u5927\u7684\u4EFB\u52A1\u62C6\u5206\u6210\u5F88\u591A\u5C0F\u4EFB\u52A1\uFF0C\u7136\u540E\u8FD9\u4E9B\u5C0F\u4EFB\u52A1\u88AB\u6240\u6709\u7684\u7EBF\u7A0B\u6267\u884C\uFF0C\u4ECE\u800C\u5B9E\u73B0\u4EFB\u52A1\u8BA1\u7B97\u7684\u8D1F\u8F7D\u5747\u8861\u3002</p><p>\u4E0B\u9762\u901A\u8FC7\u4E24\u4E2A\u7B80\u5355\u4F8B\u5B50\u770B\u4E00\u4E0B ForkJoinPool \u7684\u7528\u6CD5\uFF1A</p><p>\u4F8B\u5B50 1\uFF1A\u5FEB\u6392</p><p>\u5FEB\u6392\u6709 2 \u4E2A\u6B65\u9AA4\uFF1A</p><p>\u7B2C 1 \u6B65\uFF0C\u5229\u7528\u6570\u7EC4\u7684\u7B2C 1 \u4E2A\u5143\u7D20\u628A\u6570\u7EC4\u5212\u5206\u6210\u4E24\u534A\uFF0C\u5DE6\u8FB9\u6570\u7EC4\u91CC\u9762\u7684\u5143\u7D20\u5C0F\u4E8E\u6216\u7B49\u4E8E\u8BE5\u5143\u7D20\uFF0C\u53F3\u8FB9\u6570\u7EC4\u91CC\u9762\u7684\u5143\u7D20\u6BD4\u8BE5\u5143\u7D20\u5927\uFF1B</p><p>\u7B2C 2 \u6B65\uFF0C\u5BF9\u5DE6\u53F3\u7684 2 \u4E2A\u5B50\u6570\u7EC4\u5206\u522B\u6392\u5E8F\u3002\u53EF\u4EE5\u770B\u51FA\uFF0C\u8FD9\u91CC\u5DE6\u53F3 2 \u4E2A\u5B50\u6570\u7EC4\u662F\u53EF\u4EE5\u76F8\u4E92\u72EC\u7ACB\u3001\u5E76\u884C\u8BA1\u7B97\u7684\u3002</p><p>\u56E0\u6B64\u53EF\u4EE5\u5229\u7528 ForkJoinPool\uFF0C\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A Task\uFF0C\u7EE7\u627F\u81EA RecursiveAction\uFF0C\u5B9E\u73B0\u5176 compute \u65B9\u6CD5</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SortTask</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveAction</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> lo<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> hi<span class="token punctuation">;</span>
    <span class="token comment">// </span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> THRESHOLD <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">SortTask</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>array <span class="token operator">=</span> array<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hi <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">SortTask</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> lo<span class="token punctuation">,</span> <span class="token keyword">int</span> hi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>array <span class="token operator">=</span> array<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lo <span class="token operator">=</span> lo<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hi <span class="token operator">=</span> hi<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lo <span class="token operator">&lt;</span> hi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5212\u5206</span>
            <span class="token keyword">int</span> pivot <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SortTask</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SortTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> pivot <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SortTask</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SortTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> pivot <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>
            left<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            right<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            left<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            right<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> lo<span class="token punctuation">,</span> <span class="token keyword">int</span> hi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> x <span class="token operator">=</span> array<span class="token punctuation">[</span>hi<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> lo <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> lo<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> hi<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6D4B\u8BD5\u7A0B\u5E8F</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 \u4E2A\u4EFB\u52A1</span>
        <span class="token class-name">ForkJoinTask</span> sort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SortTask</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1 \u4E2A ForkJoinPool</span>
        <span class="token class-name">ForkJoinPool</span> fjpool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u63D0\u4EA4\u4EFB\u52A1</span>
        fjpool<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>sort<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7ED3\u675F\u3002ForkJoinPool \u5185\u90E8\u4F1A\u5F00\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u540C\u65F6\u6267\u884C\u4E0A\u9762\u7684\u5B50\u4EFB\u52A1</span>
        fjpool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fjpool<span class="token punctuation">.</span><span class="token function">awaitTermination</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F8B\u5B50 2\uFF1A\u6C42 1 \u5230 n \u4E2A\u6570\u7684\u548C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SumTask</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> THRESHOLD <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> start<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> end<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span><span class="token keyword">long</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span><span class="token keyword">long</span> start<span class="token punctuation">,</span> <span class="token keyword">long</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> start<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Long</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> THRESHOLD<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">long</span> l <span class="token operator">=</span> start<span class="token punctuation">;</span> l <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sum <span class="token operator">+=</span> l<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>start <span class="token operator">+</span> end<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5206\u6CBB\uFF0C\u9012\u5F52</span>
            <span class="token class-name">SumTask</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SumTask</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
            left<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            right<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sum <span class="token operator">=</span> left<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> right<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6D4B\u8BD5\u51FD\u6570</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">ExecutionException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 \u4E2A\u4EFB\u52A1</span>
        <span class="token class-name">SumTask</span> sum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1 \u4E2A ForkJoinPool</span>
        <span class="token class-name">ForkJoinPool</span> fjPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u63D0\u4EA4\u4EFB\u52A1</span>
        <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> fjPool<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u83B7\u53D6\u8FD4\u56DE\u503C</span>
        <span class="token class-name">Long</span> r <span class="token operator">=</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
        fjPool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u7528\u5230\u4E86 RecursiveAction \u548C RecursiveTask \u4E24\u4E2A\u7C7B\uFF0C\u5B83\u4EEC\u90FD\u7EE7\u627F\u81EA\u62BD\u8C61\u7C7B ForkJoinTask\uFF0C\u7528\u5230\u4E86\u5176\u4E2D\u5173\u952E\u7684\u63A5\u53E3 fork()\u3001join()\u3002\u4E8C\u8005\u7684\u533A\u522B\u662F\u4E00\u4E2A\u6709\u8FD4\u56DE\u503C\uFF0C\u4E00\u4E2A\u6CA1\u6709\u8FD4\u56DE\u503C\u3002\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RecursiveAction</span> <span class="token keyword">extends</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ... </span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ... </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RecursiveAction / RecursiveTask \u7C7B\u7EE7\u627F\u4F53\u7CFB\u5982\u56FE7-1 \u6240\u793A\uFF0C\u5176\u4E2D AC \u8868\u793A Abstract Class\u3002</p><img src="`+t+`" alt="\u56FE7-1" style="zoom:50%;"><p>\u56FE7-1 RecursiveAction / RecursiveTask \u7C7B\u7EE7\u627F\u4F53\u7CFB</p><p>\u5728 ForkJoinPool \u4E2D\uFF0C\u5BF9\u5E94\u7684\u63A5\u53E3\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-2-\u6838\u5FC3\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_7-2-\u6838\u5FC3\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> 7.2 \u6838\u5FC3\u6570\u636E\u7ED3\u6784</h2><p>\u5982\u56FE7-2 \u6240\u793A\u4E3A ForkJoinPool \u6570\u636E\u7ED3\u6784\uFF0C\u4E0D\u540C\u4E8E ThreadPoolExector\uFF0C\u9664\u4E00\u4E2A\u5168\u5C40\u7684\u4EFB\u52A1\u961F\u5217\u4E4B\u5916\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u8FD8\u6709\u4E00\u4E2A\u81EA\u5DF1\u7684\u5C40\u90E8\u961F\u5217\u3002</p><img src="`+o+`" alt="\u56FE7-2" style="zoom:50%;"><p>\u56FE7-2 ForkJoinPool \u6570\u636E\u7ED3\u6784</p><p>\u6838\u5FC3\u6570\u636E\u7ED3\u6784\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinPool</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u7EBF\u7A0B\u96C6\u5408</span>
    <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> workers<span class="token punctuation">;</span>
    <span class="token comment">// \u5168\u5C40\u961F\u5217</span>
    <span class="token keyword">private</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> submissionQueue<span class="token punctuation">;</span>
    <span class="token comment">// \u961F\u5217\u7684\u5C3E\u6307\u9488</span>
    <span class="token keyword">volatile</span> <span class="token keyword">int</span> queueBase<span class="token punctuation">;</span>
    <span class="token comment">//\u961F\u5217\u7684\u5934\u6307\u9488</span>
    <span class="token keyword">int</span> queueTop<span class="token punctuation">;</span>
    <span class="token comment">// \u72B6\u6001\u53D8\u91CF\uFF0C\u7C7B\u4F3C\u4E8E ThreadPoolExecutor \u4E2D\u7684 ctl \u53D8\u91CF\uFF0C\u540E\u9762\u4F1A\u8BE6\u7EC6\u89E3\u91CA</span>
    <span class="token keyword">volatile</span> <span class="token keyword">long</span> ctl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinWorkerThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u6BCF\u4E2A Worker \u7EBF\u7A0B\u6709 1 \u4E2A\u5C40\u90E8\u961F\u5217</span>
    <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> queue<span class="token punctuation">;</span>
    <span class="token comment">// \u961F\u5217\u7684\u5934\u6307\u9488\uFF08\u975E volatile \u7C7B\u578B\uFF09</span>
    <span class="token keyword">int</span> queueTop<span class="token punctuation">;</span>
    <span class="token comment">// \u961F\u5217\u7684\u5C3E\u6307\u9488\uFF08volatile \u7C7B\u578B\uFF09</span>
    <span class="token keyword">volatile</span> <span class="token keyword">int</span> queueBase<span class="token punctuation">;</span>
    <span class="token comment">// \u5BF9\u6240\u5728 ForkJoinPool \u7684\u53CD\u5411\u5F15\u7528</span>
    <span class="token keyword">final</span> <span class="token class-name">ForkJoinPool</span> pool<span class="token punctuation">;</span>
    <span class="token comment">// \u5728 Worker[] \u6570\u7EC4\u4E2D\u7684 index</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> poolIndex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u770B\u4E00\u4E0B\u8FD9\u4E9B\u6838\u5FC3\u6570\u636E\u7ED3\u6784\u7684\u6784\u9020\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u4F20\u5E76\u53D1\u6570\uFF0C\u9ED8\u8BA4\u7B49\u4E8E CPU \u7684\u6838\u6570</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultForkJoinWorkerThreadFactory<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> parallelism<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>parallelism<span class="token punctuation">,</span> defaultForkJoinWorkerThreadFactory<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> parallelism<span class="token punctuation">,</span> <span class="token class-name">ForkJoinWorkerThreadFactory</span> factory<span class="token punctuation">,</span>
                    <span class="token class-name">Thread<span class="token punctuation">.</span>UncaughtExceptionHandler</span> handler<span class="token punctuation">,</span> <span class="token keyword">boolean</span> asyncMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parallelism <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> parallelism <span class="token operator">&gt;</span> MAX_ID<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parallelism <span class="token operator">=</span> parallelism<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>factory <span class="token operator">=</span> factory<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ueh <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>locallyFifo <span class="token operator">=</span> asyncMode<span class="token punctuation">;</span>
    <span class="token comment">// ctl \u53D8\u91CF\u5F88\u5173\u952E\uFF0C\u540E\u9762\u4F1A\u8BE6\u7EC6\u5206\u6790</span>
    <span class="token keyword">long</span> np <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">-</span>parallelism<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ctl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>np <span class="token operator">&lt;&lt;</span> AC_SHIFT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> AC_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>np <span class="token operator">&lt;&lt;</span> TC_SHIFT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> TC_MASK<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521D\u59CB\u5168\u5C40\u961F\u5217\u7684\u5927\u5C0F\uFF0CINITIAL_QUEUE_CAPACITY = 8</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>submissionQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>INITIAL_QUEUE_CAPACITY<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// n \u662F parallelism \u7684 2 \u500D</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> parallelism <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> MAX_ID<span class="token punctuation">)</span>
        n <span class="token operator">=</span> MAX_ID<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521D\u59CB\u7EBF\u7A0B\u6C60\u7684\u5BB9\u91CF\u4E3A 2 \u500D\u7684 parallelism\u3002\u6CE8\u610F\uFF0C\u8FD9\u4E2A\u5730\u65B9\u5E76\u6CA1\u6709\u521B\u5EFA\u4EFB\u4F55\u7EBF\u7A0B\uFF0C\u53EA\u662F\u4E00\u4E2A\u5F15\u7528\u7C7B\u578B\u7684\u6570\u7EC4\u800C\u5DF2</span>
    workers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>submissionLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>termination <span class="token operator">=</span> submissionLock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;ForkJoinPool-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>poolNumberGenerator<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;-worker-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>workerNamePrefix <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-3-\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_7-3-\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217" aria-hidden="true">#</a> 7.3 \u5DE5\u4F5C\u7A83\u53D6\u961F\u5217</h2><p>\u5173\u4E8E\u4E0A\u9762\u7684\u5168\u5C40\u961F\u5217\uFF0C\u6709\u4E00\u4E2A\u5173\u952E\u70B9\u9700\u8981\u8BF4\u660E\uFF1A\u5B83\u5E76\u975E\u4F7F\u7528 BlockingQueue\uFF0C\u800C\u662F\u57FA\u4E8E\u4E00\u4E2A\u666E\u901A\u7684\u6570\u7EC4\u5F97\u4EE5\u5B9E\u73B0\u3002</p><p>\u8FD9\u4E2A\u961F\u5217\u53C8\u540D\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\uFF0C\u4E3A ForkJoinPool \u7684\u5DE5\u4F5C\u7A83\u53D6\u7B97\u6CD5\u63D0\u4F9B\u670D\u52A1\u3002\u5728 ForkJoinPool \u5F00\u7BC7\u7684\u6CE8\u91CA\u4E2D\uFF0CDoug Lea \u7279\u522B\u63D0\u5230\u4E86\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u7684\u5B9E\u73B0\uFF0C\u5176\u9648\u8FF0\u6765\u81EA\u5982\u4E0B\u4E24\u7BC7\u8BBA\u6587\uFF1A\uFF02Dynamic Circular Work-Stealing Deque\uFF02 by Chase and Lev, SPAA 2005 \u4E0E\uFF02Idempotent work stealing\uFF02by Michael, Saraswat, and Vechev, PPoPP 2009\u3002\u8BFB\u8005\u53EF\u4EE5\u5728\u7F51\u4E0A\u67E5\u9605\u76F8\u5E94\u8BBA\u6587\u3002</p><p>\u6240\u8C13\u5DE5\u4F5C\u7A83\u53D6\u7B97\u6CD5\uFF0C\u662F\u6307\u4E00\u4E2A Worker \u7EBF\u7A0B\u5728\u6267\u884C\u5B8C\u6BD5\u81EA\u5DF1\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\u4E4B\u540E\uFF0C\u53EF\u4EE5\u7A83\u53D6\u5176\u4ED6\u7EBF\u7A0B\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\u6765\u6267\u884C\uFF0C\u4ECE\u800C\u5B9E\u73B0\u8D1F\u8F7D\u5747\u8861\uFF0C\u4EE5\u9632\u6709\u7684\u7EBF\u7A0B\u5F88\u7A7A\u95F2\uFF0C\u6709\u7684\u7EBF\u7A0B\u5F88\u5FD9\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u8981\u7528\u5230\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\uFF0C\u56FE7-3 \u6240\u793A\u4E3A\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u793A\u610F\u56FE\u3002</p><img src="`+e+'" alt="\u56FE7-3" style="zoom:50%;"><p>\u56FE7-3 \u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u793A\u610F\u56FE</p><p>\u8FD9\u4E2A\u961F\u5217\u53EA\u6709\u4E09\u4E2A\u64CD\u4F5C\uFF1A</p><ol><li>Worker \u7EBF\u7A0B\u81EA\u5DF1\uFF0C\u5728\u961F\u5217\u5934\u90E8\uFF0C\u901A\u8FC7\u5BF9 queueTop \u6307\u9488\u6267\u884C\u52A0\u3001\u51CF\u64CD\u4F5C\uFF0C\u5B9E\u73B0\u5165\u961F\u6216\u51FA\u961F\uFF0C\u8FD9\u662F\u5355\u7EBF\u7A0B\u7684\u3002</li><li>\u5176\u4ED6 Worker \u7EBF\u7A0B\uFF0C\u5728\u961F\u5217\u5C3E\u90E8\uFF0C\u901A\u8FC7\u5BF9 queueBase \u8FDB\u884C\u7D2F\u52A0\uFF0C\u5B9E\u73B0\u51FA\u961F\u64CD\u4F5C\uFF0C\u4E5F\u5C31\u662F\u7A83\u53D6\uFF0C\u8FD9\u662F\u591A\u7EBF\u7A0B\u7684\uFF0C\u9700\u8981\u901A\u8FC7 CAS \u64CD\u4F5C\u3002</li></ol><p>\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u5728\u4E0A\u9762\u7684\u6570\u636E\u7ED3\u6784\u5B9A\u4E49\u4E2D\uFF0CqueueTop \u4E0D\u662F volatile \u7684\uFF0CqueueBase \u662F volatile \u7C7B\u578B\u3002</p><p>\u8FD9\u4E2A\u961F\u5217\uFF0C\u5728 Dynamic Circular Work-Stealing Deque \u8FD9\u7BC7\u8BBA\u6587\u4E2D\u88AB\u79F0\u4E3A dynamic-cyclic-array\u3002\u4E4B\u6240\u4EE5\u8FD9\u6837\u547D\u540D\uFF0C\u662F\u56E0\u4E3A\u6709\u4E24\u4E2A\u5173\u952E\u70B9\uFF1A</p><ol><li><p>\u6574\u4E2A\u961F\u5217\u662F\u73AF\u5F62\u7684\uFF0C\u4E5F\u5C31\u662F\u4E00\u4E2A\u6570\u7EC4\u5B9E\u73B0\u7684 RingBuffer\u3002\u5E76\u4E14 queueBase \u4F1A\u4E00\u76F4\u7D2F\u52A0\uFF0C\u4E0D\u4F1A\u51CF\u5C0F\uFF1BqueueTop \u4F1A\u7D2F\u52A0\u3001\u51CF\u5C0F\u3002\u6700\u540E\uFF0CqueueBase\u3001queueTop \u7684\u503C\u90FD\u4F1A\u5927\u4E8E\u6574\u4E2A\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u53EA\u662F\u8BA1\u7B97\u6570\u7EC4\u4E0B\u6807\u7684\u65F6\u5019\uFF0C\u4F1A\u53D6 queueTop &amp; (queue.length - 1)\uFF0CqueueBase &amp; (queue.length - 1)\u3002\u56E0\u4E3A queue.length \u662F 2 \u7684\u6574\u6570\u6B21\u65B9\uFF0C\u8FD9\u91CC\u4E5F\u5C31\u662F\u5BF9 queue.length \u8FDB\u884C\u53D6\u6A21\u64CD\u4F5C\u3002</p><p>\u5F53 queueTop - queueBase = queue.length - 1 \u7684\u65F6\u5019\uFF0C\u961F\u5217\u4E3A\u6EE1\uFF0C\u6B64\u65F6\u9700\u8981\u6269\u5BB9\uFF1B</p><p>\u5F53 queueTop = queueBase \u7684\u65F6\u5019\uFF0C\u961F\u5217\u4E3A\u7A7A\uFF0CWorker \u7EBF\u7A0B\u5373\u5C06\u8FDB\u5165\u963B\u585E\u72B6\u6001\u3002</p></li><li><p>\u5F53\u961F\u5217\u6EE1\u4E86\u4E4B\u540E\u4F1A\u6269\u5BB9\uFF0C\u6240\u4EE5\u88AB\u79F0\u4E3A\u662F\u52A8\u6001\u7684\u3002\u4F46\u8FD9\u5C31\u6D89\u53CA\u4E00\u4E2A\u68D8\u624B\u7684\u95EE\u9898\uFF1A\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u5728\u8BFB\u5199\u8FD9\u4E2A\u961F\u5217\uFF0C\u5982\u4F55\u5B9E\u73B0\u5728\u4E0D\u52A0\u9501\u7684\u60C5\u51B5\u4E0B\u4E00\u8FB9\u8BFB\u5199\u3001\u4E00\u8FB9\u6269\u5BB9\u5462\uFF1F</p><p>\u901A\u8FC7\u5206\u6790\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u7684\u7279\u6027\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\uFF1A\u5728 queueBase \u4E00\u7AEF\uFF0C\u662F\u591A\u7EBF\u7A0B\u8BBF\u95EE\u7684\uFF0C\u4F46\u5B83\u4EEC\u53EA\u4F1A\u4F7F queueBase \u53D8\u5927\uFF0C\u4E5F\u5C31\u662F\u4F7F\u961F\u5217\u4E2D\u7684\u5143\u7D20\u53D8\u5C11\u3002\u6240\u4EE5\u961F\u5217\u4E3A\u6EE1\uFF0C\u4E00\u5B9A\u53D1\u751F\u5728 queueTop \u4E00\u7AEF\uFF0C\u5BF9 queueTop \u8FDB\u884C\u7D2F\u52A0\u7684\u65F6\u5019\uFF0C\u8FD9\u4E00\u7AEF\u5374\u662F\u5355\u7EBF\u7A0B\u7684\uFF01\u961F\u5217\u7684\u6269\u5BB9\u6070\u597D\u5229\u7528\u4E86\u8FD9\u4E2A\u5355\u7EBF\u7A0B\u7684\u7279\u6027\uFF01\u5373\u5728\u6269\u5BB9\u8FC7\u7A0B\u4E2D\uFF0C\u4E0D\u53EF\u80FD\u6709\u5176\u4ED6\u7EBF\u7A0B\u5BF9 queueTop \u8FDB\u884C\u4FEE\u6539\uFF0C\u53EA\u6709\u7EBF\u7A0B\u5BF9 queueBase \u8FDB\u884C\u4FEE\u6539\uFF01</p><p>\u56FE7-4 \u6240\u793A\u4E3A\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u6269\u5BB9\u793A\u610F\u56FE\u3002\u6269\u5BB9\u4E4B\u540E\uFF0C\u6570\u7EC4\u957F\u5EA6\u53D8\u6210\u4E4B\u524D\u7684\u4E8C\u500D\uFF0C\u4F46 queueTop\u3001queueBase \u7684\u503C\u662F\u4E0D\u53D8\u7684\uFF01\u901A\u8FC7 queueTop\u3001queueBase \u5BF9\u65B0\u7684\u6570\u7EC4\u957F\u5EA6\u53D6\u6A21\uFF0C\u4ECD\u7136\u53EF\u4EE5\u5B9A\u4F4D\u5230\u5143\u7D20\u5728\u65B0\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\u3002</p><img src="'+c+`" alt="\u56FE7-4" style="zoom:50%;"><p>\u56FE7-4 \u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u6269\u5BB9\u793A\u610F\u56FE</p><p>\u4E0B\u9762\u7ED3\u5408 ForkJoinWorkerThread \u6269\u5BB9\u7684\u4EE3\u7801\u8FDB\u4E00\u6B65\u5206\u6790\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">growQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldQ <span class="token operator">=</span> queue<span class="token punctuation">;</span>
    <span class="token keyword">int</span> size <span class="token operator">=</span> oldQ <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> oldQ<span class="token punctuation">.</span>length <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">:</span> INITIAL_QUEUE_CAPACITY<span class="token punctuation">;</span>
    <span class="token comment">// \u6269\u5927\u4E24\u500D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> MAXIMUM_QUEUE_CAPACITY<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RejectedExecutionException</span><span class="token punctuation">(</span><span class="token string">&quot;Queue capacity exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&lt;</span> INITIAL_QUEUE_CAPACITY<span class="token punctuation">)</span>
        size <span class="token operator">=</span> INITIAL_QUEUE_CAPACITY<span class="token punctuation">;</span>
    <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> q <span class="token operator">=</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> mask <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> top <span class="token operator">=</span> queueTop<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldMask<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldQ <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldMask <span class="token operator">=</span> oldQ<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u65E7\u5143\u7D20\u9010\u4E2A\u590D\u5236\u5230\u65B0\u961F\u5217</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> b <span class="token operator">=</span> queueBase<span class="token punctuation">;</span> b <span class="token operator">!=</span> top<span class="token punctuation">;</span> <span class="token operator">++</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">&amp;</span> oldMask<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">;</span>
            <span class="token comment">// \u53D6\u65E7\u6570\u7EC4\u4E2D\u7684\u5143\u7D20</span>
            <span class="token class-name">Object</span> x <span class="token operator">=</span> UNSAFE<span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>oldQ<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u65E7\u6570\u7EC4\u5143\u7D20\u7F6E\u4E3A null</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>oldQ<span class="token punctuation">,</span> u<span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// \u8D4B\u503C\u5230\u65B0\u6570\u7EC4</span>
                UNSAFE<span class="token punctuation">.</span>putObjectVolatile <span class="token punctuation">(</span>q<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">&amp;</span> mask<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u6709\u4E24\u4E2A\u5173\u952E\u70B9\uFF1A</p><p>\uFF081\uFF09\u6269\u5BB9\u4E4B\u540E\u7684\u65B0\u6570\u7EC4\u8FD8\u662F\u7A7A\u7684\u65F6\u5019\uFF0C\u5C31\u5DF2\u7ECF\u8D4B\u7ED9\u4E86\u6210\u5458\u53D8\u91CF queue\u3002\u800C queueTop\u3001queueBase \u7684\u503C\u662F\u4E0D\u53D8\u7684\uFF0C\u8FD9\u610F\u5473\u7740\uFF0C\u5176\u4ED6\u7A83\u53D6\u7EBF\u7A0B\u82E5\u6B64\u65F6\u6765\u7A83\u53D6\u4EFB\u52A1\uFF0C\u53D6\u5230\u7684\u5C06\u5168\u662F null\uFF0C\u5373\u53D6\u4E0D\u5230\u4EFB\u52A1\u3002\u4E0D\u8FC7\uFF0C\u867D\u7136\u6B64\u65F6\u7A83\u53D6\u4E0D\u5230\uFF0C\u53EF\u4EE5\u963B\u585E\u4E00\u4F1A\u513F\uFF0C\u5F85\u6269\u5BB9\u5B8C\u6210\u5C31\u53EF\u4EE5\u7A83\u53D6\u5230\u4E86\uFF0C\u4E0D\u4F1A\u5F71\u54CD\u6574\u4E2A\u7B97\u6CD5\u7684\u6B63\u786E\u6027\u3002</p><p>\uFF082\uFF09\u5728\u628A\u65E7\u6570\u7EC4\u7684\u5143\u7D20\u590D\u5236\u8FC7\u6765\u4E4B\u524D\uFF0C\u5148\u901A\u8FC7 CAS \u64CD\u4F5C\u628A\u65E7\u6570\u7EC4\u4E2D\u7684\u8BE5\u5143\u7D20\u7F6E\u4E3A null\u3002\u53EA\u6709 CAS \u6210\u529F\u7F6E\u4E3A null \u4E86\uFF0C\u624D\u80FD\u8D4B\u503C\u5230\u65B0\u6570\u7EC4\u3002\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u540C 1 \u4E2A\u5143\u7D20\u5728\u65E7\u6570\u7EC4\u3001\u65B0\u6570\u7EC4\u4E2D\u5404\u6709 1 \u4EFD\u30021 \u4E2A\u7A83\u53D6\u7EBF\u7A0B\u8FD8\u5728\u8BFB\u65E7\u6570\u7EC4\uFF0C\u53E6 1 \u4E2A\u7A83\u53D6\u7EBF\u7A0B\u8BFB\u53D6\u65B0\u6570\u7EC4\uFF0C\u5BFC\u81F4\u540C 1 \u4E2A\u5143\u7D20\u88AB 2 \u4E2A\u7EBF\u7A0B\u91CD\u590D\u7A83\u53D6\u3002</p></li></ol><h2 id="_7-4-forkjoinpool-\u72B6\u6001\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#_7-4-forkjoinpool-\u72B6\u6001\u63A7\u5236" aria-hidden="true">#</a> 7.4 ForkJoinPool \u72B6\u6001\u63A7\u5236</h2><h3 id="_7-4-1-\u72B6\u6001\u53D8\u91CF-ctl-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_7-4-1-\u72B6\u6001\u53D8\u91CF-ctl-\u89E3\u6790" aria-hidden="true">#</a> 7.4.1 \u72B6\u6001\u53D8\u91CF ctl \u89E3\u6790</h3><p>\u7C7B\u4F3C\u4E8E ThreadPoolExecutor\uFF0C\u5728 ForkJoinPool \u4E2D\u4E5F\u6709\u4E00\u4E2A ctl \u53D8\u91CF\u8D1F\u8D23\u8868\u8FBE ForkJoinPool \u7684\u6574\u4E2A\u751F\u547D\u5468\u671F\u548C\u76F8\u5173\u7684\u5404\u79CD\u72B6\u6001\u3002\u4E0D\u8FC7 ctl \u53D8\u91CF\u66F4\u52A0\u590D\u6742\uFF0C\u662F\u4E00\u4E2A long \u578B\u53D8\u91CF\uFF0C\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinPool</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">volatile</span> <span class="token keyword">long</span> ctl<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> AC_SHIFT <span class="token operator">=</span> <span class="token number">48</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TC_SHIFT <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> ST_SHIFT <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> EC_SHIFT <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_ID <span class="token operator">=</span> <span class="token number">0x7fff</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SMASK <span class="token operator">=</span> <span class="token number">0xffff</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SHORT_SIGN <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> INT_SIGN <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> STOP_BIT <span class="token operator">=</span> <span class="token number">0</span>x0001L <span class="token operator">&lt;&lt;</span> ST_SHIFT<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> AC_MASK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> SMASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> AC_SHIFT<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> TC_MASK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> SMASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> TC_SHIFT<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> TC_UNIT <span class="token operator">=</span> <span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> TC_SHIFT<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> AC_UNIT <span class="token operator">=</span> <span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> AC_SHIFT<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UAC_SHIFT <span class="token operator">=</span> AC_SHIFT <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UTC_SHIFT <span class="token operator">=</span> TC_SHIFT <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UAC_MASK <span class="token operator">=</span> SMASK <span class="token operator">&lt;&lt;</span> UAC_SHIFT<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UTC_MASK <span class="token operator">=</span> SMASK <span class="token operator">&lt;&lt;</span> UTC_SHIFT<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UAC_UNIT <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> UAC_SHIFT<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UTC_UNIT <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> UTC_SHIFT<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> E_MASK <span class="token operator">=</span> <span class="token number">0x7fffffff</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> EC_UNIT <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> EC_SHIFT<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> parallelism<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">long</span> np <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">-</span>parallelism<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ctl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>np <span class="token operator">&lt;&lt;</span> AC_SHIFT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> AC_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>np <span class="token operator">&lt;&lt;</span> TC_SHIFT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> TC_MASK<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56FE7-5 \u6240\u793A\u4E3A ctl \u53D8\u91CF\u7684 64 \u4E2A\u6BD4\u7279\u4F4D\u542B\u4E49\u793A\u610F\u56FE\u3002\u8FD9 64 \u4E2A\u6BD4\u7279\u4F4D\u88AB\u5206\u6210\u4E94\u90E8\u5206\uFF1A</p><img src="`+l+'" alt="\u56FE7-5" style="zoom:50%;"><p>\u56FE7-5 ctl \u53D8\u91CF\u7684 64 \u4E2A\u6BD4\u7279\u4F4D\u542B\u4E49\u793A\u610F\u56FE</p><p>AC\uFF1A\u6700\u9AD8\u7684 16 \u4E2A\u6BD4\u7279\u4F4D\uFF0C\u8868\u793A Active \u7EBF\u7A0B\u6570 - parallelism\uFF0Cparallelism \u662F\u4E0A\u9762\u7684\u6784\u9020\u51FD\u6570\u4F20\u8FDB\u53BB\u7684\u53C2\u6570\uFF1B</p><p>TC\uFF1A\u6B21\u9AD8\u7684 16 \u4E2A\u6BD4\u7279\u4F4D\uFF0C\u8868\u793A Total \u7EBF\u7A0B\u6570 - parallelism\uFF1B</p><p>ST\uFF1A1 \u4E2A\u6BD4\u7279\u4F4D\uFF0C\u5982\u679C\u662F 1\uFF0C\u8868\u793A\u6574\u4E2A ForkJoinPool \u6B63\u5728\u5173\u95ED\uFF1B</p><p>EC\uFF1A15 \u4E2A\u6BD4\u7279\u4F4D\uFF0C\u8868\u793A\u963B\u585E\u6808\u7684\u6808\u9876\u7EBF\u7A0B\u7684 wait count\uFF08\u5173\u4E8E\u4EC0\u4E48\u662F wait count\uFF0C\u63A5\u4E0B\u6765\u7684 7.4.2 \u7AE0\u8282\u4F1A\u89E3\u91CA\uFF09\uFF1B</p><p>ID\uFF1A16 \u4E2A\u6BD4\u7279\u4F4D\uFF0C\u8868\u793A\u963B\u585E\u6808\u7684\u6808\u9876\u7EBF\u7A0B\u5BF9\u5E94\u7684 poolIndex\u3002</p><p>\u4EC0\u4E48\u53EB\u963B\u585E\u6808\u5462\uFF1F\u4E0B\u9762\u6765\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p><h3 id="_7-4-2-\u963B\u585E\u6808-treiber-stack" tabindex="-1"><a class="header-anchor" href="#_7-4-2-\u963B\u585E\u6808-treiber-stack" aria-hidden="true">#</a> 7.4.2 \u963B\u585E\u6808 Treiber Stack</h3><p>\u8981\u5B9E\u73B0\u591A\u4E2A\u7EBF\u7A0B\u7684\u963B\u585E\u3001\u5524\u9192\uFF0C\u9664\u4E86 park / unpark \u8FD9\u4E00\u5BF9\u64CD\u4F5C\u539F\u8BED\uFF0C\u8FD8\u9700\u8981\u4E00\u4E2A\u65E0\u9501\u94FE\u8868\u5B9E\u73B0\u7684\u963B\u585E\u961F\u5217\uFF0C\u628A\u6240\u6709\u963B\u585E\u7684\u7EBF\u7A0B\u4E32\u5728\u4E00\u8D77\u3002</p><p>\u5728 ForkJoinPool \u4E2D\uFF0C\u6CA1\u6709\u4F7F\u7528\u963B\u585E\u961F\u5217\uFF0C\u800C\u662F\u4F7F\u7528\u4E86\u963B\u585E\u6808\u3002\u628A\u6240\u6709\u7A7A\u95F2\u7684 Worker \u7EBF\u7A0B\u653E\u5728\u4E00\u4E2A\u6808\u91CC\u9762\uFF0C\u8FD9\u4E2A\u6808\u540C\u6837\u901A\u8FC7\u94FE\u8868\u6765\u5B9E\u73B0\uFF0C\u540D\u4E3A Treiber Stack\u3002\u5728 4.5 \u8282\u8BB2\u89E3 Phaser \u7684\u5B9E\u73B0\u539F\u7406\u7684\u65F6\u5019\uFF0C\u4E5F\u7528\u8FC7\u8FD9\u4E2A\u6570\u636E\u7ED3\u6784\u3002</p><p>\u56FE7-6 \u6240\u793A\u4E3A\u6240\u6709\u963B\u585E\u7684 Worker \u7EBF\u7A0B\u7EC4\u6210\u7684 Treiber Stack\u3002</p><img src="'+i+`" alt="\u56FE7-6" style="zoom:50%;"><p>\u56FE7-6 \u6240\u6709\u963B\u585E\u7684 Worer \u7EBF\u7A0B\u7EC4\u6210\u7684 Treiber Stack</p><p>\u9996\u5148\uFF0CForkJoinWorkerThread \u6709\u4E00\u4E2A poolIndex \u53D8\u91CF\uFF0C\u8BB0\u5F55\u4E86\u81EA\u5DF1\u5728 ForkJoinWorkerThread[] \u6570\u7EC4\u4E2D\u7684\u4E0B\u6807\u4F4D\u7F6E\uFF0CpoolIndex \u53D8\u91CF\u5C31\u76F8\u5F53\u4E8E\u6BCF\u4E2A ForkJoinPoolWorkerThread \u5BF9\u8C61\u7684\u5730\u5740\uFF1B\u5176\u6B21\uFF0CForkJoinWorkerThread \u8FD8\u6709\u4E00\u4E2A nextWait \u53D8\u91CF\uFF0C\u8BB0\u5F55\u4E86\u524D\u4E00\u4E2A\u963B\u585E\u7EBF\u7A0B\u7684 poolIndex\uFF0C\u8FD9\u4E2A nextWait \u53D8\u91CF\u5C31\u76F8\u5F53\u4E8E\u94FE\u8868\u7684 next \u6307\u9488\uFF0C\u628A\u6240\u6709\u7684\u963B\u585E\u7EBF\u7A0B\u4E32\u8054\u5728\u4E00\u8D77\uFF0C\u7EC4\u6210\u4E00\u4E2A Treiber Stack\u3002</p><p>\u6700\u540E\uFF0Cctl \u53D8\u91CF\u7684\u6700\u4F4E 16 \u4F4D\uFF0C\u8BB0\u5F55\u4E86\u6808\u7684\u6808\u9876\u7EBF\u7A0B\u7684 poolIndex\uFF1B\u4E2D\u95F4\u7684 15 \u4F4D\uFF0C\u8BB0\u5F55\u4E86\u6808\u9876\u7EBF\u7A0B\u88AB\u963B\u585E\u7684\u6B21\u6570\uFF0C\u4E5F\u79F0\u4E3A wait count\u3002</p><h3 id="_7-4-3-ctl-\u53D8\u91CF\u7684\u521D\u59CB\u503C" tabindex="-1"><a class="header-anchor" href="#_7-4-3-ctl-\u53D8\u91CF\u7684\u521D\u59CB\u503C" aria-hidden="true">#</a> 7.4.3 ctl \u53D8\u91CF\u7684\u521D\u59CB\u503C</h3><p>\u5728 7.4.1 \u8282\u7684\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u6709\u5982\u4E0B\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">long</span> np <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">-</span>parallelism<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>ctl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>np <span class="token operator">&lt;&lt;</span> AC_SHIFT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> AC_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>np <span class="token operator">&lt;&lt;</span> TC_SHIFT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> TC_MASK<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u5728\u521D\u59CB\u7684\u65F6\u5019\uFF0CForkJoinPool \u4E2D\u7684\u7EBF\u7A0B\u4E2A\u6570\u4E3A 0\uFF0C\u6240\u4EE5 AC = 0 - parallelism\uFF0CTC =0 - parallelism\u3002\u8FD9\u610F\u5473\u7740\u53EA\u6709\u9AD8 32 \u4F4D\u7684 AC\u3001TC \u4E24\u4E2A\u90E8\u5206\u586B\u5145\u4E86\u503C\uFF0C\u4F4E 32 \u4F4D\u90FD\u662F 0 \u586B\u5145\u3002</p><h3 id="_7-4-4-forkjoinworkerthread-\u72B6\u6001\u4E0E\u4E2A\u6570\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_7-4-4-forkjoinworkerthread-\u72B6\u6001\u4E0E\u4E2A\u6570\u5206\u6790" aria-hidden="true">#</a> 7.4.4 ForkJoinWorkerThread \u72B6\u6001\u4E0E\u4E2A\u6570\u5206\u6790</h3><p>\u5728 ThreadPoolExecutor \u4E2D\uFF0C\u6709 corePoolSize \u548C maxmiumPoolSize \u4E24\u4E2A\u53C2\u6570\u8054\u5408\u63A7\u5236\u603B\u7684\u7EBF\u7A0B\u6570\uFF0C\u800C\u5728 ForkJoinPool \u4E2D\u53EA\u4F20\u5165\u4E86\u4E00\u4E2A parallelism \u53C2\u6570\uFF0C\u4E14\u8FD9\u4E2A\u53C2\u6570\u5E76\u4E0D\u662F\u5B9E\u9645\u7684\u7EBF\u7A0B\u6570\u3002\u90A3\u4E48\uFF0CForkJoinPool \u5728\u5B9E\u9645\u7684\u8FD0\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u7EBF\u7A0B\u6570\u7A76\u7ADF\u662F\u7531\u54EA\u4E9B\u56E0\u7D20\u51B3\u5B9A\u7684\u5462\uFF1F</p><p>\u8981\u56DE\u7B54\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5148\u5F97\u660E\u767D ForkJoinPool \u4E2D\u7684\u7EBF\u7A0B\u90FD\u53EF\u80FD\u6709\u54EA\u51E0\u79CD\u72B6\u6001\uFF1F\u53EF\u80FD\u7684\u72B6\u6001\u6709\u4E09\u79CD\uFF1A</p><ol><li>\u7A7A\u95F2\u72B6\u6001\uFF08\u653E\u5728 Treiber Stack \u91CC\u9762\uFF09\u3002</li><li>\u6D3B\u8DC3\u72B6\u6001\uFF08\u6B63\u5728\u6267\u884C\u67D0\u4E2A ForkJoinTask\uFF0C\u672A\u963B\u585E\uFF09\u3002</li><li>\u963B\u585E\u72B6\u6001\uFF08\u6B63\u5728\u6267\u884C\u67D0\u4E2A ForkJoinTask\uFF0C\u4F46\u963B\u585E\u4E86\uFF0C\u4E8E\u662F\u8C03\u7528 join\uFF0C\u7B49\u5F85\u53E6\u5916\u4E00\u4E2A\u4EFB\u52A1\u7684\u7ED3\u679C\u8FD4\u56DE\uFF09\u3002</li></ol><p>ctl \u53D8\u91CF\u5F88\u597D\u5730\u53CD\u6620\u51FA\u4E86\u4E09\u79CD\u72B6\u6001\uFF1A</p><p>\u9AD8 32 \u4F4D\uFF1Au = (int) (ctl &gt;&gt;&gt; 32)\uFF0C\u7136\u540E u \u53C8\u62C6\u5206\u6210 tc\u3001ac \u4E24\u4E2A 16 \u4F4D\uFF1B</p><p>\u4F4E 32 \u4F4D\uFF1Ae = (int) ctl\u3002</p><ol><li>e &gt; 0\uFF0C\u8BF4\u660E Treiber Stack \u4E0D\u4E3A\u7A7A\uFF0C\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF1Be = 0\uFF0C\u8BF4\u660E\u6CA1\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF1B</li><li>ac &gt; 0\uFF0C\u8BF4\u660E\u6709\u6D3B\u8DC3\u7EBF\u7A0B\uFF1Bac &lt;= 0\uFF0C\u8BF4\u660E\u6CA1\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u5E76\u4E14\u8FD8\u672A\u8D85\u51FA parallelism\uFF1B</li><li>tc &gt; 0\uFF0C\u8BF4\u660E\u603B\u7EBF\u7A0B\u6570 &gt; parallelism\u3002</li></ol><p>tc \u4E0E ac \u7684\u5DEE\u503C\uFF0C\u4E5F\u5C31\u662F\u603B\u7EBF\u7A0B\u6570\u4E0E\u6D3B\u8DC3\u7EBF\u7A0B\u6570\u7684\u5DEE\u5F02\uFF0C\u5728 ForkJoinPool \u4E2D\u6709\u53E6\u5916\u4E00\u4E2A\u53D8\u91CF blockedCount \u8BB0\u5F55\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">volatile</span> <span class="token keyword">int</span> blockedCount<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6240\u4EE5\uFF0C\u901A\u8FC7 ctl \u548C blockedCount \u8FD9\u4E24\u4E2A\u53D8\u91CF\uFF0C\u53EF\u4EE5\u77E5\u9053\u5728\u6574\u4E2A ForkJoinPool \u4E2D\uFF0C\u6240\u6709\u7A7A\u95F2\u7EBF\u7A0B\u3001\u6D3B\u8DC3\u7EBF\u7A0B\u4EE5\u53CA\u963B\u585E\u7EBF\u7A0B\u7684\u6570\u91CF\u3002</p><p>\u5F53\u4E00\u4E2A\u65B0\u4EFB\u52A1\u5230\u6765\u65F6\uFF0C\u53D1\u73B0\u65E2\u6CA1\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u4E5F\u6CA1\u6709\u6D3B\u8DC3\u7EBF\u7A0B\uFF0C\u6240\u6709\u7EBF\u7A0B\u90FD\u963B\u585E\u7740\uFF0C\u5728\u7B49\u5F85\u4EFB\u52A1\u8FD4\u56DE\uFF0C\u6B64\u65F6\u4FBF\u4F1A\u5F00\u65B0\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\u3002\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5C06\u7ED3\u5408\u4EE3\u7801\u8BE6\u7EC6\u4E86\u89E3\u4EFB\u52A1\u662F\u5982\u4F55\u63D0\u4EA4\u7684\uFF0C\u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u7EBF\u7A0B\u662F\u5982\u4F55\u5F00\u542F\uFF0C\u4EE5\u53CA\u5982\u4F55\u6267\u884C\u4EFB\u52A1\u7684\u3002\u5728\u6B64\u4E4B\u524D\uFF0C\u5148\u4E86\u89E3\u4E00\u4E0B\u7EBF\u7A0B\u7684\u963B\u585E\u548C\u5524\u9192\u673A\u5236\u3002</p><h2 id="_7-5-worker-\u7EBF\u7A0B\u7684\u963B\u585E\u2014\u5524\u9192\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#_7-5-worker-\u7EBF\u7A0B\u7684\u963B\u585E\u2014\u5524\u9192\u673A\u5236" aria-hidden="true">#</a> 7.5 Worker \u7EBF\u7A0B\u7684\u963B\u585E\u2014\u5524\u9192\u673A\u5236</h2><p>ForkerJoinPool \u6CA1\u6709\u4F7F\u7528 BlockingQueue\uFF0C\u4E5F\u5C31\u4E0D\u66FE\u5229\u7528\u5176\u963B\u585E\u2014\u5524\u9192\u673A\u5236\uFF0C\u800C\u662F\u5229\u7528\u4E86 park / unpark \u539F\u8BED\uFF0C\u5E76\u81EA\u884C\u5B9E\u73B0\u4E86 Treiber Stack\u3002\u4E0B\u9762\u8FDB\u884C\u8BE6\u7EC6\u5206\u6790 ForkerJoinPool\uFF0C\u5728\u963B\u585E\u548C\u5524\u9192\u7684\u65F6\u5019\uFF0C\u5206\u522B\u662F\u5982\u4F55\u5165\u6808\u7684\u3002</p><h3 id="_7-5-1-\u963B\u585E\u2014\u5165\u6808" tabindex="-1"><a class="header-anchor" href="#_7-5-1-\u963B\u585E\u2014\u5165\u6808" aria-hidden="true">#</a> 7.5.1 \u963B\u585E\u2014\u5165\u6808</h3><p>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u7A83\u53D6\u4E0D\u5230\u4EFB\u4F55\u4EFB\u52A1\uFF0C\u4E5F\u5C31\u662F\u5904\u4E8E\u7A7A\u95F2\u72B6\u6001\u65F6\u5C31\u4F1A\u963B\u585E\uFF0C\u5165\u6808\u3002\u5176\u6838\u5FC3\u903B\u8F91\u5728 tryAwaitWork \u51FD\u6570\u91CC\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">tryAwaitWork</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">,</span> <span class="token keyword">long</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> v <span class="token operator">=</span> w<span class="token punctuation">.</span>eventCount<span class="token punctuation">;</span>
    <span class="token comment">// \u5173\u952E\u7684\u7B2C\u4E00\u53E5\uFF1A\u4F7F\u5F53\u524D\u7EBF\u7A0B\u7684 nextWait \u7684\u6307\u5411\u6808\u9876</span>
    w<span class="token punctuation">.</span>nextWait <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> c<span class="token punctuation">;</span>                      
    <span class="token comment">// nc \u5373 new ctl</span>
    <span class="token keyword">long</span> nc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>v <span class="token operator">&amp;</span> E_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">-</span> AC_UNIT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>AC_MASK <span class="token operator">|</span> TC_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ctl <span class="token operator">!=</span> c <span class="token operator">||</span> <span class="token operator">!</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span> nc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> d <span class="token operator">=</span> ctl<span class="token punctuation">;</span> 
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> d <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> c <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d <span class="token operator">-</span> c<span class="token punctuation">)</span> <span class="token operator">&amp;</span> AC_MASK<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7EDF\u8BA1 stealCount</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> sc <span class="token operator">=</span> w<span class="token punctuation">.</span>stealCount<span class="token punctuation">;</span> sc <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token keyword">long</span> s <span class="token operator">=</span> stealCount<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> stealCountOffset<span class="token punctuation">,</span> s<span class="token punctuation">,</span> s <span class="token operator">+</span> sc<span class="token punctuation">)</span><span class="token punctuation">)</span>
            sc <span class="token operator">=</span> w<span class="token punctuation">.</span>stealCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>eventCount <span class="token operator">!=</span> v<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>shutdown <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> parallelism <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>nc <span class="token operator">&gt;&gt;</span> AC_SHIFT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        blockedCount <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> quiescerCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">// \u6574\u4E2A ForkJoinPool \u662F\u5426\u9759\u9ED8</span>
        <span class="token function">idleAwaitWork</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> nc<span class="token punctuation">,</span> c<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>       
    <span class="token comment">// \u963B\u585E\u4E4B\u524D\uFF0C\u91CD\u65B0\u626B\u4E86\u4E00\u904D\u961F\u5217</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">boolean</span> rescanned <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>eventCount <span class="token operator">!=</span> v<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>rescanned<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> g <span class="token operator">=</span> scanGuard<span class="token punctuation">,</span> m <span class="token operator">=</span> g <span class="token operator">&amp;</span> SMASK<span class="token punctuation">;</span>
            <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ws <span class="token operator">=</span> workers<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> m <span class="token operator">&lt;</span> ws<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                rescanned <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">ForkJoinWorkerThread</span> u <span class="token operator">=</span> ws<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span>queueBase <span class="token operator">!=</span> u<span class="token punctuation">.</span>queueTop <span class="token operator">&amp;&amp;</span>
                            <span class="token operator">!</span><span class="token function">tryReleaseWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            rescanned <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>eventCount <span class="token operator">!=</span> v<span class="token punctuation">)</span>
                            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>scanGuard <span class="token operator">!=</span> g <span class="token operator">||</span>               
                <span class="token punctuation">(</span>queueBase <span class="token operator">!=</span> queueTop <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">tryReleaseWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                rescanned <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>rescanned<span class="token punctuation">)</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 
            <span class="token keyword">else</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            w<span class="token punctuation">.</span>parked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    
            <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>eventCount <span class="token operator">!=</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                w<span class="token punctuation">.</span>parked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5173\u952E\u7684\u7B2C\u4E8C\u53E5\uFF1A\u8FDB\u5165\u963B\u585E</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4ECE\u963B\u585E\u4E2D\u5524\u9192</span>
            rescanned <span class="token operator">=</span> w<span class="token punctuation">.</span>parked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4E4B\u6240\u4EE5\u590D\u6742\uFF0C\u4E3B\u8981\u662F\u56E0\u4E3A\u5B83\u5C06\u7EBF\u7A0B\u5165\u6808\u3001\u963B\u585E\u4E4B\u5916\uFF0C\u8FD8\u505A\u4E86\u5F88\u591A\u989D\u5916\u7684\u4E8B\u60C5\u3002</p><p>\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u5C31\u662F\u8981\u963B\u585E\u7684\u7EBF\u7A0B\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u5F53\u524D\u7684 ctl \u53D8\u91CF\u7684\u503C\u3002\u5165\u6808\uFF0C\u4E5F\u5C31\u662F 3 \u6B65\u3002</p><p>\u7B2C 1 \u6B65\uFF1Aw.nextWait = (int) c\uFF0C\u5373\u4F7F w.nextWait \u6307\u9488\uFF0C\u6307\u5411\u6808\u9876\uFF1B</p><p>\u7B2C 2 \u6B65\uFF1Along nc = (long) (v &amp; E_MASK) | ((c - AC_UNIT) &amp; (AC_MASK | TC_MASK))\uFF0C\u5373\u65B0\u7684\u6808\u9876\u5C31\u662F\u5F53\u524D\u7684\u7EBF\u7A0B w\uFF0C\u540C\u65F6\u628A ac \u7684\u503C\u51CF 1\uFF0C\u5373\u6D3B\u8DC3\u7EBF\u7A0B\u6570\u51CF 1\uFF1B</p><p>\u7B2C 3 \u6B65\uFF1A\u5C06 nc \u901A\u8FC7 CAS \u8D4B\u503C\u7ED9 ctl \u53D8\u91CF UNSAFE.compareAndSwapLong(this, ctlOffset, c, nc)\u3002</p><p>\u6B64\u65F6\u5165\u6808\u6210\u529F\uFF0Cctl \u53D8\u91CF\u66F4\u65B0\u6210\u529F\u3002\u6700\u540E\uFF0C\u8C03\u7528 LockSupport.park(this) \u963B\u585E\u81EA\u5DF1\u3002\u4F46\u5728\u8FD9\u671F\u95F4\uFF0C\u505A\u4E86\u5F88\u591A\u5176\u4ED6\u4E8B\u60C5\uFF1A</p><ol><li>\u7EDF\u8BA1 stealCount\u3002\u6BCF\u4E2A Worker \u7EBF\u7A0B\u5185\u90E8\u90FD\u6709\u4E00\u4E2A stealCount \u53D8\u91CF\uFF0C\u8BB0\u5F55\u8BE5\u7EBF\u7A0B\u7A83\u53D6\u4E86\u591A\u5C11\u4E2A\u4EFB\u52A1\u3002ForkJoinPool \u4E5F\u6709\u4E00\u4E2A stealCount \u53D8\u91CF\uFF0C\u5728\u7EBF\u7A0B\u963B\u585E\u4E4B\u524D\uFF0C\u628A\u7EBF\u7A0B\u7684 stealCount \u7D2F\u52A0\u5230 ForkJoinPool \u7684 stealCount\u3002\u8FD9\u4E2A\u53D8\u91CF\u53EA\u662F\u4E00\u4E2A\u7EDF\u8BA1\u53D8\u91CF\uFF0C\u5BF9\u6574\u4F53\u903B\u8F91\u6CA1\u6709\u5F71\u54CD\u3002</li><li>\u5224\u65AD ForkJoinPool \u662F\u5426\u5173\u95ED\uFF0C\u4EE5\u53CA\u662F\u5426\u6240\u6709\u7EBF\u7A0B\u90FD\u5904\u4E8E\u7A7A\u95F2\u72B6\u6001\uFF0C\u6574\u4E2A ForkJoinPool \u662F\u5426\u5904\u4E8E\u9759\u9ED8\u72B6\u6001\u3002\u5173\u4E8E\u8FD9\u70B9\uFF0C\u540E\u9762\u4F1A\u518D\u8BE6\u7EC6\u8BA8\u8BBA\u3002</li><li>\u5728\u963B\u585E\u4E4B\u524D\uFF0C\u4E3A\u4E86\u4FDD\u9669\uFF0C\u53C8\u91CD\u65B0\u626B\u63CF\u4E86\u4E00\u904D\u961F\u5217\uFF0C\u89C2\u5BDF\u662F\u5426\u6709\u4EFB\u52A1\u53EF\u4EE5\u6267\u884C\u3002\u6B64\u5904\u6D89\u53CA\u5F88\u591A\u903B\u8F91\uFF0C\u540E\u9762\u4F1A\u518D\u8BE6\u7EC6\u8BA8\u8BBA\u3002</li></ol><h3 id="_7-5-2-\u5524\u9192\u2014\u51FA\u6808" tabindex="-1"><a class="header-anchor" href="#_7-5-2-\u5524\u9192\u2014\u51FA\u6808" aria-hidden="true">#</a> 7.5.2 \u5524\u9192\u2014\u51FA\u6808</h3><p>\u5728\u65B0\u7684\u4EFB\u52A1\u5230\u6765\u4E4B\u540E\uFF0C\u7A7A\u95F2\u7684\u7EBF\u7A0B\u88AB\u5524\u9192\uFF0C\u5176\u6838\u5FC3\u903B\u8F91\u5728 signalWork \u51FD\u6570\u91CC\u9762\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">signalWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> c<span class="token punctuation">;</span> <span class="token keyword">int</span> e<span class="token punctuation">,</span> u<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">=</span> ctl<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>
            <span class="token punctuation">(</span>INT_SIGN<span class="token operator">|</span>SHORT_SIGN<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>INT_SIGN<span class="token operator">|</span>SHORT_SIGN<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                         
            <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">;</span> <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ws<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ws <span class="token operator">=</span> workers<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
                <span class="token comment">// e \u7684\u4F4E 16 \u4F4D\u5B58\u50A8\u7684\u662F\u6808\u9876\u5143\u7D20\u7684 poolIndex</span>
                <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token operator">~</span>e <span class="token operator">&amp;</span> SMASK<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> ws<span class="token punctuation">.</span>length <span class="token operator">||</span>
                <span class="token comment">// \u53D6\u6808\u9876\u7684\u5143\u7D20\uFF0C\u5982\u679C\u4E3A\u7A7A\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE</span>
                <span class="token punctuation">(</span>w <span class="token operator">=</span> ws<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">long</span> nc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>nextWait <span class="token operator">&amp;</span> E_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>u <span class="token operator">+</span> UAC_UNIT<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>eventCount <span class="token operator">==</span> e <span class="token operator">&amp;&amp;</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span> nc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                w<span class="token punctuation">.</span>eventCount <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">+</span> EC_UNIT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> E_MASK<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>parked<span class="token punctuation">)</span>
                    <span class="token comment">// \u6709\u963B\u585E\u7684\u7EBF\u7A0B\uFF0C\u5524\u9192\u5176\u4E2D\u4E00\u4E2A</span>
                    UNSAFE<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span>
                                           <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u <span class="token operator">+</span> UTC_UNIT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> UTC_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>u <span class="token operator">+</span> UAC_UNIT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> UAC_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6CA1\u6709\u963B\u585E\u7684\u7EBF\u7A0B\uFF0C\u5F00\u4E00\u4E2A\u65B0\u7EBF\u7A0B</span>
            <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u7684\u53C2\u6570\u4E3A\u7A7A\uFF0C\u5B83\u4F1A\u5524\u9192\u6808\u9876\u7684\u7EBF\u7A0B\uFF0C\u5982\u4E0A\u6587\u6240\u8FF0\uFF1Ae &gt; 0\uFF0C\u8BF4\u660E\u6808\u4E0D\u4E3A\u7A7A\uFF0C\u6B64\u65F6 e \u7684\u6700\u4F4E 16 \u4F4D\uFF0C\u5B58\u50A8\u7684\u662F\u6808\u9876\u7EBF\u7A0B\u7684 poolIndex\uFF0C\u53D6\u51FA\u6765\u5524\u9192\uFF1Be = 0\uFF0C\u8BF4\u660E\u6808\u4E3A\u7A7A\uFF0C\u6B64\u65F6\u5F00\u4E00\u4E2A\u65B0\u7EBF\u7A0B\u3002</p><h2 id="_7-6-\u4EFB\u52A1\u7684\u63D0\u4EA4\u8FC7\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_7-6-\u4EFB\u52A1\u7684\u63D0\u4EA4\u8FC7\u7A0B\u5206\u6790" aria-hidden="true">#</a> 7.6 \u4EFB\u52A1\u7684\u63D0\u4EA4\u8FC7\u7A0B\u5206\u6790</h2><p>\u5728\u660E\u767D\u4E86\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u3001ctl \u53D8\u91CF\u7684\u5404\u79CD\u72B6\u6001\u3001Worker \u7684\u5404\u79CD\u72B6\u6001\uFF0C\u4EE5\u53CA\u7EBF\u7A0B\u963B\u585E\u2014\u5524\u9192\u673A\u5236\u4E4B\u540E\uFF0C\u63A5\u4E0B\u6765\u7EFC\u5408\u8FD9\u4E9B\u77E5\u8BC6\uFF0C\u8BE6\u7EC6\u5206\u6790\u4EFB\u52A1\u7684\u63D0\u4EA4\u548C\u6267\u884C\u8FC7\u7A0B\u3002</p><p>\u5173\u4E8E\u4EFB\u52A1\u7684\u63D0\u4EA4\uFF0CForkJoinPool \u6700\u5916\u5C42\u7684\u63A5\u53E3\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">forkOrSubmit</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> task<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">forkOrSubmit</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">;</span>
    <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>shutdown<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RejectedExecutionException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7EBF\u7A0B\u6C60\u5185\u90E8\u7EBF\u7A0B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token keyword">instanceof</span> <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>w <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span> t<span class="token punctuation">)</span><span class="token punctuation">.</span>pool <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token comment">// \u52A0\u5165\u8BE5\u7EBF\u7A0B\u7684\u5C40\u90E8\u961F\u5217</span>
        w<span class="token punctuation">.</span><span class="token function">pushTask</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5916\u90E8\u8C03\u7528\u8005\u7EBF\u7A0B</span>
    <span class="token keyword">else</span>
        <span class="token comment">// \u52A0\u5165\u5168\u5C40\u961F\u5217</span>
        <span class="token function">addSubmission</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>forkOrSubmit(ForkJoinTask&lt;T&gt; task) \u4E2D\uFF0Cfork \u8868\u793A\u5206\u53C9\uFF0C\u5373\u662F\u5185\u90E8\u751F\u6210\u7684\u4EFB\u52A1\uFF0Csubmit \u662F\u5916\u90E8\u63D0\u4EA4\u7684\u4EFB\u52A1\u3002</p><p>\u5982\u4F55\u533A\u5206\u4E00\u4E2A\u4EFB\u52A1\u662F\u5185\u90E8\u4EFB\u52A1\uFF0C\u8FD8\u662F\u5916\u90E8\u4EFB\u52A1\u5462\uFF1F\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528\u8BE5\u51FD\u6570\u7684\u7EBF\u7A0B\u7C7B\u578B\u5224\u65AD\u3002\u5982\u679C\u7EBF\u7A0B\u7C7B\u578B\u662F ForkJoinWorkerThread\uFF0C\u8BF4\u660E\u662F\u7EBF\u7A0B\u6C60\u5185\u90E8\u7684\u67D0\u4E2A\u7EBF\u7A0B\u5728\u8C03\u7528\u8BE5\u51FD\u6570\uFF0C\u5219\u628A\u8BE5\u4EFB\u52A1\u653E\u5165\u8BE5\u7EBF\u7A0B\u7684\u5C40\u90E8\u961F\u5217\uFF1B\u5426\u5219\uFF0C\u662F\u5916\u90E8\u7EBF\u7A0B\u5728\u8C03\u7528\u8BE5\u51FD\u6570\uFF0C\u5219\u5C06\u8BE5\u4EFB\u52A1\u52A0\u5165\u5168\u5C40\u961F\u5217\u3002</p><h3 id="_7-6-1-\u5185\u90E8\u63D0\u4EA4\u4EFB\u52A1-pushtask" tabindex="-1"><a class="header-anchor" href="#_7-6-1-\u5185\u90E8\u63D0\u4EA4\u4EFB\u52A1-pushtask" aria-hidden="true">#</a> 7.6.1 \u5185\u90E8\u63D0\u4EA4\u4EFB\u52A1 pushTask</h3><p>\u5185\u90E8\u63D0\u4EA4\u4EFB\u52A1\uFF0C\u5373\u4E0A\u9762\u7684 w.pushTask(task)\uFF0C\u4F1A\u653E\u5165\u8BE5\u7EBF\u7A0B\u7684\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u4E2D\uFF0C\u4EE3\u7801\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinWorkerThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">pushTask</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> q<span class="token punctuation">;</span> 
        <span class="token keyword">int</span> s<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">=</span> queue<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> queueTop<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> q<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">;</span>
            UNSAFE<span class="token punctuation">.</span><span class="token function">putOrderedObject</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> u<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u6CE8\u610F\uFF1A\u56E0\u4E3A\u662F\u5355\u7EBF\u7A0B\uFF0CpushTask \u4E0D\u9700\u8981\u52A0\u9501\uFF0C\u76F4\u63A5\u7D2F\u52A0 queueTop</span>
            queueTop <span class="token operator">=</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>         
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">-=</span> queueBase<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span>
                <span class="token comment">// queueTop - queueBase &lt;= 2\uFF0C\u4E4B\u524D\u662F\u7A7A\u7684\uFF0C\u901A\u77E5\u7A7A\u95F2\u7EBF\u7A0B</span>
                pool<span class="token punctuation">.</span><span class="token function">signalWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> m<span class="token punctuation">)</span>
                <span class="token comment">// \u961F\u5217\u6269\u5BB9\uFF0C\u524D\u9762\u5DF2\u7ECF\u5206\u6790</span>
                <span class="token function">growQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>signalWork() \u51FD\u6570\u5728 7.5 \u8282\u4E2D\u5DF2\u8BB2\uFF0CgrowQueue() \u51FD\u6570\u5728 7.3 \u8282\u4E2D\u5DF2\u8BB2\u3002\u7531\u4E8E\u5DE5\u4F5C\u7A83\u53D6\u961F\u5217\u7684\u7279\u6027\uFF0C\u5176\u5BF9 queueTop \u7684\u64CD\u4F5C\u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u6240\u4EE5\u6B64\u5904\u4E0D\u9700\u8981\u6267\u884C CAS \u64CD\u4F5C\u3002\u6B64\u5916\uFF0C\u5F53 queueTop - queueBase = 0 \u7684\u65F6\u5019\uFF0C\u961F\u5217\u4E3A\u7A7A\uFF0C\u6B64\u5904\u4E3A\u4E86\u4FDD\u9669\uFF0C\u5199\u4F5C queueTop - queueBase\uFF1C= 2\uFF0C\u4E0D\u5F71\u54CD\u6B63\u786E\u6027\u3002</p><h3 id="_7-6-2-\u5916\u90E8\u63D0\u4EA4\u4EFB\u52A1-addsubmission" tabindex="-1"><a class="header-anchor" href="#_7-6-2-\u5916\u90E8\u63D0\u4EA4\u4EFB\u52A1-addsubmission" aria-hidden="true">#</a> 7.6.2 \u5916\u90E8\u63D0\u4EA4\u4EFB\u52A1 addSubmission</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addSubmission</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submissionLock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> q<span class="token punctuation">;</span> 
        <span class="token keyword">int</span> s<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">=</span> submissionQueue<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> queueTop<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> q<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">;</span>
            UNSAFE<span class="token punctuation">.</span><span class="token function">putOrderedObject</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> u<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5165\u961F\uFF0C\u7D2F\u52A0 queueTop</span>
            queueTop <span class="token operator">=</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// \u961F\u5217\u5DF2\u6EE1</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">-</span> queueBase <span class="token operator">==</span> m<span class="token punctuation">)</span>
                <span class="token comment">// \u6269\u5BB9</span>
                <span class="token function">growSubmissionQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u901A\u77E5\u7A7A\u95F2\u7EBF\u7A0B\u6765\u53D6</span>
    <span class="token function">signalWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5916\u90E8\u591A\u4E2A\u7EBF\u7A0B\u4F1A\u8C03\u7528\u8BE5\u51FD\u6570\uFF0C\u6240\u4EE5\u8981\u52A0\u9501\uFF0C\u5165\u961F\u5217\u548C\u6269\u5BB9\u7684\u903B\u8F91\u548C\u7EBF\u7A0B\u5185\u90E8\u7684\u961F\u5217\u57FA\u672C\u76F8\u540C\u3002\u6700\u540E\uFF0C\u8C03\u7528 signalWork()\uFF0C\u901A\u77E5\u4E00\u4E2A\u7A7A\u95F2\u7EBF\u7A0B\u6765\u53D6\uFF0C\u8FD9\u70B9\u5728 7.5 \u8282\u5DF2\u8BB2\u3002</p><h2 id="_7-7-\u5DE5\u4F5C\u7A83\u53D6\u7B97\u6CD5-\u4EFB\u52A1\u7684\u6267\u884C\u8FC7\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_7-7-\u5DE5\u4F5C\u7A83\u53D6\u7B97\u6CD5-\u4EFB\u52A1\u7684\u6267\u884C\u8FC7\u7A0B\u5206\u6790" aria-hidden="true">#</a> 7.7 \u5DE5\u4F5C\u7A83\u53D6\u7B97\u6CD5\uFF1A\u4EFB\u52A1\u7684\u6267\u884C\u8FC7\u7A0B\u5206\u6790</h2><p>\u5168\u5C40\u961F\u5217\u6709\u4EFB\u52A1\uFF0C\u5C40\u90E8\u961F\u5217\u4E5F\u6709\u4EFB\u52A1\uFF0C\u6BCF\u4E00\u4E2A Worker \u7EBF\u7A0B\u90FD\u4F1A\u4E0D\u95F4\u65AD\u5730\u626B\u63CF\u8FD9\u4E9B\u961F\u5217\uFF0C\u7A83\u53D6\u4EFB\u52A1\u6765\u6267\u884C\u3002\u4E0B\u9762\u4ECE Worker \u7EBF\u7A0B\u7684 run \u51FD\u6570\u5F00\u59CB\u5206\u6790\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinWorkerThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Throwable</span> exception <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pool<span class="token punctuation">.</span><span class="token function">work</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            exception <span class="token operator">=</span> ex<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token function">onTermination</span><span class="token punctuation">(</span>exception<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>run() \u51FD\u6570\u8C03\u7528\u7684\u662F\u6240\u5728 ForkJoinPool \u7684 work \u51FD\u6570\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinPool</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// swpet \u8868\u793A\u626B\u63CF\u4E86\u6240\u6709\u961F\u5217\uFF0C\u672A\u53D1\u73B0\u4E00\u4E2A\u4EFB\u52A1</span>
        <span class="token keyword">boolean</span> swept <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>              
        <span class="token keyword">long</span> c<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>w<span class="token punctuation">.</span>terminate <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">=</span> ctl<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> a<span class="token punctuation">;</span>                            
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>swept <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;&gt;</span> AC_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token comment">// a \u5C31\u662F ac</span>
                swept <span class="token operator">=</span> <span class="token function">scan</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4E00\u4E2A\u4EFB\u52A1\u90FD\u6CA1\u6709\uFF0C\u8FDB\u5165\u7A7A\u95F2\u3001\u963B\u585E\u72B6\u6001</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryAwaitWork</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>
                swept <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u8981 w.terminate \u4E0D\u4E3A true\uFF0C\u5E76\u4E14 ctl \u53D8\u91CF\u7684\u4F4E 32 \u4F4D\u5927\u4E8E\u6216\u7B49\u4E8E 0\uFF0C\u5373 shutdown \u6807\u5FD7\u4F4D\u4E0D\u4E3A 1\uFF0C\u5C31\u4E00\u76F4\u5728 while \u5FAA\u73AF\u91CC\u9762\uFF0C\u4E0D\u65AD\u626B\u63CF\u4EFB\u52A1\u3002\u5982\u626B\u63CF\u5230\u4E86\uFF0C\u5219\u6267\u884C\u4EFB\u52A1\uFF1B\u5982\u626B\u63CF\u4E0D\u5230\uFF0C\u5219\u8C03\u7528 tryAwaitWork \u8FDB\u5165\u963B\u585E\u72B6\u6001\uFF0C\u963B\u585E\u88AB\u5524\u9192\u4E4B\u540E\uFF0C\u7EE7\u7EED\u626B\u63CF\u3002</p><p>tryAwaitWork \u51FD\u6570\u5728 7.5 \u8282\u4E2D\u5DF2\u8BB2\uFF0C\u4E0B\u9762\u8BE6\u7EC6\u770B\u626B\u63CF\u8FC7\u7A0B scan(w, a)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">scan</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> g <span class="token operator">=</span> scanGuard<span class="token punctuation">;</span> 
    <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span>parallelism <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">-</span> a <span class="token operator">&amp;&amp;</span> blockedCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> g <span class="token operator">&amp;</span> SMASK<span class="token punctuation">;</span>
    <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ws <span class="token operator">=</span> workers<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ws<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> m<span class="token punctuation">)</span> 
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// \u626B\u63CF\u5C40\u90E8\u961F\u5217</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> r <span class="token operator">=</span> w<span class="token punctuation">.</span>seed<span class="token punctuation">,</span> k <span class="token operator">=</span> r<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>m <span class="token operator">+</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m <span class="token operator">+</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> t<span class="token punctuation">;</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> q<span class="token punctuation">;</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
        <span class="token comment">// \u6CE8\u610F\uFF1Am \u662F\u79BB\u6700\u5927\u4E0B\u6807\u6700\u8FD1\u7684 2 \u7684\u6574\u6570\u6B21\u65B9 - 1\uFF0C</span>
        <span class="token comment">// \u5F53 m \u4EE5\u540E\u5230\u6570\u7EC4\u6700\u5927\u957F\u5EA6\u7684\u4F4D\u7F6E\uFF0C\u5373 [m, ws.length - 1] \u90FD\u662F null\uFF0C\u4E0D\u9700\u8981\u904D\u5386</span>
        <span class="token class-name">ForkJoinWorkerThread</span> v <span class="token operator">=</span> ws<span class="token punctuation">[</span>k <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>b <span class="token operator">=</span> v<span class="token punctuation">.</span>queueBase<span class="token punctuation">)</span> <span class="token operator">!=</span> v<span class="token punctuation">.</span>queueTop <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>q <span class="token operator">=</span> v<span class="token punctuation">.</span>queue<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> b<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> q<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> v<span class="token punctuation">.</span>queueBase <span class="token operator">==</span> b <span class="token operator">&amp;&amp;</span>
                UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> u<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token punctuation">(</span>v<span class="token punctuation">.</span>queueBase <span class="token operator">=</span> b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> v<span class="token punctuation">.</span>queueTop<span class="token punctuation">;</span>
                v<span class="token punctuation">.</span>stealHint <span class="token operator">=</span> w<span class="token punctuation">.</span>poolIndex<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token function">signalWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             
                <span class="token comment">// \u7A83\u53D6\u5230\u4E00\u4E2A\u5185\u90E8\u4EFB\u52A1\uFF0C\u6267\u884C\uFF0C\u7136\u540E\u8FD4\u56DE false</span>
                w<span class="token punctuation">.</span><span class="token function">execTask</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            r <span class="token operator">^=</span> r <span class="token operator">&lt;&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> 
            r <span class="token operator">^=</span> r <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">17</span><span class="token punctuation">;</span> 
            w<span class="token punctuation">.</span>seed <span class="token operator">=</span> r <span class="token operator">^</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                      
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                     
            r <span class="token operator">^=</span> r <span class="token operator">&lt;&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> 
            r <span class="token operator">^=</span> r <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">17</span><span class="token punctuation">;</span> 
            k <span class="token operator">=</span> r <span class="token operator">^=</span> r <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
            <span class="token operator">++</span>k<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u626B\u63CF\u961F\u5217\u4E4B\u540E\uFF0C\u53D1\u73B0\u961F\u5217\u5DF2\u7ECF\u53D1\u751F\u4E86\u4FEE\u6539\uFF0C\u8FD4\u56DE false\u3002\u4E4B\u540E\u4F1A\u518D\u6B21\u8FDB\u5165 scan \u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scanGuard <span class="token operator">!=</span> g<span class="token punctuation">)</span>                      
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C40\u90E8\u961F\u5217\u90FD\u662F\u7A7A\u7684\uFF0C\u518D\u626B\u63CF\u5168\u5C40\u961F\u5217</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>                                     
        <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> t<span class="token punctuation">;</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> q<span class="token punctuation">;</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">=</span> queueBase<span class="token punctuation">)</span> <span class="token operator">!=</span> queueTop <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>q <span class="token operator">=</span> submissionQueue<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> b<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> q<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> queueBase <span class="token operator">==</span> b <span class="token operator">&amp;&amp;</span>
                UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> u<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                queueBase <span class="token operator">=</span> b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token comment">// \u7A83\u53D6\u5230\u4E00\u4E2A\u5916\u90E8\u4EFB\u52A1\uFF0C\u6267\u884C\uFF0C\u7136\u540E\u8FD4\u56DE false</span>
                w<span class="token punctuation">.</span><span class="token function">execTask</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                         
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\uFF0C\u6574\u4E2A\u51FD\u6570\u53EA\u6709\u5728\u6700\u540E\u65F6\u8FD4\u56DE true\uFF0C\u5728\u5176\u4ED6\u65F6\u523B\u90FD\u662F\u8FD4\u56DE false\u3002\u8FD4\u56DE true\uFF0C\u610F\u5473\u7740\u6CA1\u6709\u4EFB\u4F55\u4EFB\u52A1\u53EF\u7A83\u53D6\uFF0C\u56DE\u5230\u5916\u9762\u7684 while \u5FAA\u73AF\uFF0C\u8FDB\u5165\u7A7A\u95F2\u7B49\u5F85\u72B6\u6001\uFF1B\u8FD4\u56DE false\uFF0C\u56DE\u5230\u5916\u9762\u7684 while \u5FAA\u73AF\uFF0C\u4E0D\u4F1A\u7A7A\u95F2\u7B49\u5F85\uFF0C\u800C\u662F\u518D\u6B21\u8FDB\u5165 scan \u51FD\u6570\uFF0C\u7EE7\u7EED\u8FDB\u884C\u626B\u63CF\u3002</p><p>\u5176\u6B21\uFF0C\u5728\u626B\u63CF\u5C40\u90E8\u961F\u5217\u7684\u65F6\u5019\uFF0C\u4E0D\u662F\u4ECE 0 \u5F00\u59CB\u626B\u63CF\uFF0C\u800C\u662F\u968F\u673A\u9009\u53D6\u4E86\u4E00\u4E2A\u4E0B\u6807\u4F5C\u4E3A\u8D77\u70B9\u3002\u8FD9\u662F\u56E0\u4E3A\u5982\u679C\u6240\u6709\u7EBF\u7A0B\u90FD\u4ECE 0 \u626B\u63CF\u5230 m\uFF0C\u4F1A\u63D0\u9AD8\u51B2\u7A81\u6982\u7387\u3002\u4F46\u8981\u6CE8\u610F\uFF0C\u5C3D\u7BA1\u4E0D\u662F\u4ECE 0 \u5F00\u59CB\u626B\u63CF\uFF0C\u4F46 j \u662F\u4ECE -2m \u5FAA\u73AF\u5230 2m \u7684\uFF0C\u80FD\u591F\u4FDD\u8BC1\u5728 [0, m] \u4E4B\u95F4\u6765\u56DE\u5404\u626B\u63CF\u4E00\u904D\uFF0C\u4E0D\u4F1A\u6F0F\u6389\u67D0\u4E2A\u5C40\u90E8\u961F\u5217\u3002</p><p>\u7136\u540E\uFF0C\u5728\u6574\u4E2A\u4EE3\u7801\u4E2D\u53CD\u590D\u51FA\u73B0\u4E00\u4E2A\u53D8\u91CF scanGuard\u3002\u8FD9\u4E2A\u53D8\u91CF\u5F88\u5173\u952E\uFF0C\u4F46\u4E5F\u6BD4\u8F83\u6666\u6DA9\u3002\u8981\u660E\u767D\u8FD9\u4E2A\u53D8\u91CF\u7684\u542B\u4E49\uFF0C\u5C31\u9700\u8981\u4E86\u89E3\u4E00\u79CD\u9501\uFF1A\u987A\u5E8F\u9501\u3002</p><h3 id="_7-7-1-\u987A\u5E8F\u9501-seqlock" tabindex="-1"><a class="header-anchor" href="#_7-7-1-\u987A\u5E8F\u9501-seqlock" aria-hidden="true">#</a> 7.7.1 \u987A\u5E8F\u9501 SeqLock</h3><p>\u987A\u5E8F\u9501\u6709\u70B9\u7C7B\u4F3C\u4E8E JDK 8 \u5F15\u5165\u7684 StampedLock\uFF0C\u4E5F\u662F\u4E50\u89C2\u8BFB\u7684\u601D\u60F3\u3002\u901A\u8FC7\u4E00\u4E2A sequence number \u6765\u63A7\u5236\u5BF9\u5171\u4EAB\u6570\u636E\u7684\u8BBF\u95EE\uFF0C\u5177\u4F53\u6765\u8BF4\uFF0C\u5C31\u662F\uFF1A</p><ol><li>\u8BFB\u7EBF\u7A0B\u5728\u8BFB\u53D6\u5171\u4EAB\u6570\u636E\u4E4B\u524D\u5148\u8BFB\u53D6 sequence number\uFF0C\u5728\u8BFB\u53D6\u6570\u636E\u4E4B\u540E\u518D\u8BFB\u4E00\u6B21 sequence number\uFF0C\u5982\u679C\u4E24\u6B21\u7684\u503C\u4E0D\u540C\uFF0C\u8BF4\u660E\u5728\u6B64\u671F\u95F4\u6709\u5176\u4ED6\u7EBF\u7A0B\u4FEE\u6539\u4E86\u6570\u636E\uFF0C\u6B64\u6B21\u8BFB\u53D6\u6570\u636E\u65E0\u6548\uFF0C\u91CD\u65B0\u8BFB\u53D6\uFF1B</li><li>\u5199\u7EBF\u7A0B\uFF0C\u5728\u5199\u5165\u6570\u636E\u4E4B\u524D\uFF0C\u7D2F\u52A0\u4E00\u6B21 sequence number\uFF0C\u5728\u5199\u5165\u6570\u636E\u4E4B\u540E\uFF0C\u518D\u7D2F\u52A0\u4E00\u6B21 sequence number\u3002</li></ol><p>\u6700\u521D\uFF0Csequence number = 0\uFF0C\u8BFB\u7EBF\u7A0B\u4E0D\u4F1A\u4FEE\u6539 sequence number\uFF0C\u800C\u4E00\u4E2A\u5199\u7EBF\u7A0B\u4F1A\u7D2F\u52A0\u4E24\u6B21 sequence number\uFF0C\u6240\u4EE5 sequence number \u59CB\u7EC8\u662F\u5076\u6570\u3002\u5982\u679C sequence number \u662F\u5947\u6570\uFF0C\u8BF4\u660E\u5F53\u524D\u67D0\u4E2A\u5199\u7EBF\u7A0B\u6B63\u5728\u4FEE\u6539\u6570\u636E\uFF0C\u5176\u4ED6\u5199\u7EBF\u7A0B\u88AB\u4E92\u65A5\u4E86\u3002</p><p>\u6240\u4EE5\uFF0C\u5BF9\u4E8E\u5199\u7EBF\u7A0B\u800C\u8A00\uFF0C\u53D1\u73B0 sequence number \u662F\u5947\u6570\uFF0C\u5C31\u4E0D\u80FD\u4FEE\u6539\u5171\u4EAB\u6570\u636E\u4E86\u3002\u5BF9\u4E8E\u8BFB\u7EBF\u7A0B\u800C\u8A00\uFF0C\u53D1\u73B0 sequence number \u662F\u5947\u6570\uFF0C\u4E5F\u4E0D\u80FD\u518D\u8BFB\u53D6\u6570\u636E\uFF1B\u5982\u679C\u53D1\u73B0 sequence number \u662F\u5076\u6570\uFF0C\u90A3\u4E48\u5728\u8BFB\u53D6\u6570\u636E\u524D\u540E\u5206\u522B\u8BFB\u53D6\u4E00\u6B21 sequence number\uFF0C\u5982\u679C\u4E24\u6B21\u7684\u503C\u76F8\u540C\uFF0C\u5219\u8BFB\u53D6\u6210\u529F\uFF0C\u5426\u5219\u91CD\u65B0\u8BFB\u53D6\u3002</p><h3 id="_7-7-2-scanguard-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_7-7-2-scanguard-\u89E3\u6790" aria-hidden="true">#</a> 7.7.2 scanGuard \u89E3\u6790</h3><p>scanGuard \u53D8\u91CF\u5145\u5F53\u4E86\u987A\u5E8F\u9501\u7684 sequence number \u7684\u529F\u80FD\uFF0C\u5171\u4EAB\u6570\u636E\u5C31\u662F Worker \u7EBF\u7A0B\u6570\u7EC4 ws\u3002\u6240\u4EE5\uFF0C\u5728\u4E0A\u9762\u7684 scan \u51FD\u6570\u4E2D\uFF0C\u5728\u51FD\u6570\u5F00\u59CB\u7684\u65F6\u5019\uFF0C\u8BFB\u53D6\u4E86\u4E00\u6B21 scanGuard\uFF0C\u626B\u63CF\u5B8C ws \u5BF9\u5E94\u7684\u961F\u5217\uFF0C\u53C8\u8BFB\u53D6\u4E86\u4E00\u6B21 scanGuard\uFF0C\u53D1\u73B0\u4E24\u6B21\u7684\u503C\u4E0D\u540C\u3002\u8BF4\u660E\u5728\u8FD9\u671F\u95F4 ws \u7684\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u53EF\u80FD\u662F\u65B0\u52A0\u4E86\u7EBF\u7A0B\uFF0Cws \u6570\u7EC4\u6269\u5BB9\u4E86\uFF0C\u4E8E\u662F\u8FD4\u56DE false\uFF0C\u91CD\u65B0\u8FDB\u5165 scan \u51FD\u6570\u3002</p><p>\u5F53\u7136\uFF0CscanGuard \u53D8\u91CF\u4E0D\u4EC5\u627F\u62C5\u4E86\u987A\u5E8F\u9501\u7684\u529F\u80FD\uFF0C\u8FD8\u8868\u793A\u8DDD\u79BB\u6570\u7EC4\u4E2D\u5143\u7D20\u6700\u5927\u4E0B\u6807\u6700\u8FD1\u7684 2 \u7684\u6574\u6570\u6B21\u65B9 - 1\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u5C31\u662F\uFF1A</p><ol><li><p>\u5176\u4F4E 16 \u4F4D\uFF0Cm = scanGuard &amp; SMASK\uFF0C\u5176\u503C\u7B49\u4E8E\u8DDD\u79BB\u6570\u7EC4\u6700\u5927\u4E0B\u6807\u6700\u8FD1\u7684 2 \u7684\u6574\u6570\u6B21\u65B9 - 1\u3002\u8FD9\u53E5\u8BDD\u6709\u4E9B\u62D7\u53E3\uFF0C\u4E3E\u4E2A\u4F8B\u5B50\u6765\u8BF4\u660E\uFF1A\u5047\u8BBE\u6570\u7EC4\u957F\u5EA6\u662F 1024\uFF08\u6570\u7EC4\u957F\u5EA6\u59CB\u7EC8\u662F 2 \u7684\u6574\u6570\u6B21\u65B9)\uFF0C\u91CC\u9762\u53EA\u88C5\u4E86 10 \u4E2A\u7EBF\u7A0B\uFF0C\u6700\u5927\u4E0B\u6807\u662F 12\uFF08\u610F\u5473\u7740\u5728 0 ~ 12 \u91CC\u9762\uFF0C\u6709 3 \u4E2A\u683C\u5B50\u662F null \u7684\uFF0C\u8FD9 3 \u4E2A\u7EBF\u7A0B\u5DF2\u7ECF\u6B7B\u4EA1\uFF0C\u5269\u4E0B 10 \u4E2A\u7EBF\u7A0B\uFF0C12 \u4EE5\u540E\u7684\u6240\u6709\u683C\u5B50\u4E5F\u90FD\u662F null\uFF09\u3002\u90A3\u4E48 m = 16 - 1 = 15\u300215 \u662F\u79BB 12 \u6700\u8FD1\u7684\uFF0C2 \u7684 4 \u6B21\u65B9 - 1\u3002</p><p>\u4E4B\u6240\u4EE5\u8FD9\u6837\u8BB0\uFF0C\u662F\u4E3A\u4E86\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u6570\u7EC4\u904D\u5386\uFF0C\u5728\u8FD9\u91CC\u53EA\u9700\u8981\u4ECE 0 \u904D\u5386\u5230 15 \u5C31\u53EF\u4EE5\u4E86\uFF0C\u800C\u4E0D\u9700\u8981\u4ECE 0 \u904D\u5386\u5230 1024\uFF1B\u4E4B\u6240\u4EE5\u662F 2 \u7684\u6574\u6570\u6B21\u65B9 - 1\uFF0C\u662F\u4E3A\u4E86\u53D6\u6A21\u4F18\u5316\uFF0C\u8FD9\u4E2A\u6280\u5DE7\u5728\u6574\u4E2A JUC \u7684\u4EE3\u7801\u4E2D\u53CD\u590D\u7528\u5230\uFF0C\u4E5F\u5C31\u662F\u4E0A\u9762\u4EE3\u7801\u4E2D ws[k &amp; m]\uFF0C\u7B49\u4EF7\u4E8E ws[k % (m + 1)]\u3002\u5F88\u663E\u7136\uFF0C\u5F53\u6570\u7EC4\u4E2D\u88C5\u6EE1\u7EBF\u7A0B\u7684\u65F6\u5019\uFF0C\u6570\u7EC4\u957F\u5EA6\u7B49\u4E8E\u7EBF\u7A0B\u4E2A\u6570\uFF0C\u6B64\u65F6 m = \u6570\u7EC4\u957F\u5EA6 - 1\u3002</p></li><li><p>\u7B2C 17 \u4F4D\uFF0C\u4E5F\u5C31\u662F SG_UNIT \u4F4D\u7F6E\uFF0C\u6807\u8BC6\u5F53\u524D\u662F\u5426\u6709\u7EBF\u7A0B\u5728\u4FEE\u6539 ws \u6570\u7EC4\u3002\u8FD9\u91CC\u4F7F\u7528\u7684\u5176\u5B9E\u662F SeqLock \u7684\u53D8\u4F53\uFF0C\u7528\u7B2C 17 \u4F4D\u6765\u63A7\u5236\u591A\u4E2A\u5199\u7EBF\u7A0B\u7684\u4E92\u65A5\uFF0C\u7528\u4F4E 16 \u4F4D\u6765\u68C0\u6D4B\u5728\u8BFB\u7684\u8FC7\u7A0B\u4E2D\u662F\u5426\u6709\u5199\u7EBF\u7A0B\u4FEE\u6539 ws \u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinPool</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">volatile</span> <span class="token keyword">int</span> scanGuard<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SG_UNIT <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SMASK <span class="token operator">=</span> <span class="token number">0xffff</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ws \u6570\u7EC4\u7684\u4FEE\u6539\u4E3B\u8981\u53D1\u751F\u5728\u628A\u4E00\u4E2A Worker \u7EBF\u7A0B\u52A0\u5165 ws \u6570\u7EC4\u7684\u65F6\u5019\uFF0C\u4E0B\u9762\u770B\u4E00\u4E0B\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\uFF0CscanGuard \u53D8\u91CF\u662F\u5982\u4F55\u8D77\u4F5C\u7528\u7684\u3002\u6BCF 1 \u4E2A Worker \u7EBF\u7A0B\u5728\u521B\u5EFA\u7684\u65F6\u5019\uFF0C\u90FD\u4F1A\u8C03\u7528\u4E0B\u9762\u7684\u51FD\u6570\uFF0C\u628A\u81EA\u5DF1\u6CE8\u518C\u5230 ForkJoinPool \u7684 ws \u6570\u7EC4\u91CC\u9762\uFF0C\u4E0B\u9762\u6765\u770B\u5177\u4F53\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">registerWorker</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> g<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ws<span class="token punctuation">;</span>
        <span class="token comment">// \u7B2C 17 \u4F4D\u4E3A 0\uFF0C\u5C1D\u8BD5\u7F6E\u4E3A 1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>g <span class="token operator">=</span> scanGuard<span class="token punctuation">)</span> <span class="token operator">&amp;</span> SG_UNIT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
            UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> scanGuardOffset<span class="token punctuation">,</span> g<span class="token punctuation">,</span> g <span class="token operator">|</span> SG_UNIT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> k <span class="token operator">=</span> nextWorkerIndex<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ws <span class="token operator">=</span> workers<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                    <span class="token keyword">int</span> n <span class="token operator">=</span> ws<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> k <span class="token operator">&gt;=</span> n <span class="token operator">||</span> ws<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> ws<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token operator">++</span>k<span class="token punctuation">)</span>
                            <span class="token punctuation">;</span>
                        <span class="token comment">// \u6240\u6709\u4F4D\u7F6E\u90FD\u4E0D\u4E3A null\uFF0C\u6269\u5BB9 2 \u500D</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> n<span class="token punctuation">)</span>
                            ws <span class="token operator">=</span> workers <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>ws<span class="token punctuation">,</span> n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u5C06 w \u6CE8\u518C\u5230\u7B2C k \u4E2A\u4F4D\u7F6E</span>
                    ws<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> w<span class="token punctuation">;</span>
                    <span class="token comment">// \u8BB0\u5F55\u4E0B\u4E00\u4E2A\u53EF\u4EE5\u6CE8\u518C\u7684\u4F4D\u7F6E</span>
                    nextWorkerIndex <span class="token operator">=</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> m <span class="token operator">=</span> g <span class="token operator">&amp;</span> SMASK<span class="token punctuation">;</span>
                    <span class="token comment">// \u65B0\u7684 g</span>
                    g <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> m<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> SMASK <span class="token operator">:</span> g <span class="token operator">+</span> <span class="token punctuation">(</span>SG_UNIT <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                scanGuard <span class="token operator">=</span> g<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> k<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6709\u5176\u4ED6\u7EBF\u7A0B\u6B63\u5728\u4FEE\u6539 ws\uFF0C\u505A\u4E9B\u5176\u4ED6\u989D\u5916\u5DE5\u4F5C</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ws <span class="token operator">=</span> workers<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span> u <span class="token operator">:</span> ws<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> u<span class="token punctuation">.</span>queueBase <span class="token operator">!=</span> u<span class="token punctuation">.</span>queueTop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryReleaseWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>\u5173\u4E8E\u4E0A\u9762\u7684\u51FD\u6570\uFF0C\u6709\u51E0\u70B9\u8BF4\u660E\uFF1A</p><p>\uFF081\uFF09\u5728\u5199\u5165 ws \u4E4B\u524D\uFF0C\u5148\u5224\u65AD scanGuard \u7684\u7B2C 17 \u4F4D\u662F\u5426\u4E3A 0\u3002\u82E5\u4E0D\u4E3A 0\uFF0C\u8BF4\u660E\u6709\u5176\u4ED6\u7EBF\u7A0B\u6B63\u5728\u5199\u5165 ws\uFF1B\u82E5\u4E3A 0\uFF0C\u5219\u5C1D\u8BD5\u7528 CAS\uFF0C\u7F6E\u4E3A 1\u3002</p><p>\uFF082\uFF09\u7F6E\u4E3A 1 \u6210\u529F\u4E4B\u540E\uFF0C\u4ECE\u4E0B\u6807 0 \u5F00\u59CB\u904D\u5386 ws \u6570\u7EC4\uFF0C\u627E\u5230\u7B2C\u4E00\u4E2A\u4E3A null \u7684\u4F4D\u7F6E\uFF0C\u628A w \u653E\u8FDB\u53BB\u3002\u5982\u679C\u904D\u5386\u6574\u4E2A\u6570\u7EC4\uFF0C\u672A\u53D1\u73B0\u6709 null \u7684\u4F4D\u7F6E\uFF0C\u5219\u5BF9\u6570\u7EC4\u8FDB\u884C 2 \u500D\u7684\u6269\u5BB9\u3002</p><p>\uFF083\uFF09ws \u4FEE\u6539\u6210\u529F\u4E4B\u540E\uFF0C\u518D\u6062\u590D scanGuard \u7684\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   g <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> m<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> SMASK <span class="token operator">:</span> g <span class="token operator">+</span> <span class="token punctuation">(</span>SG_UNIT <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5730\u65B9\u8F83\u96BE\u7406\u89E3\uFF0C\u9700\u8981\u8BE6\u7EC6\u8BF4\u660E\uFF1Ak&gt;m\uFF0C\u8BF4\u660E\u65B9\u624D\u6269\u5BB9\u4E86\uFF0C\u6B64\u65F6 m \u4E00\u5B9A\u7B49\u4E8E\u65E7\u7684\u6570\u7EC4\u957F\u5EA6 - 1\uFF0C\u6B64\u65F6 g = ((m &lt;&lt; 1) + 1) &amp; SMASK\u3002\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u6570\u7EC4\u957F\u5EA6\u672C\u6765\u662F 8\uFF0C\u73B0\u5728\u6269\u5BB9\u5230 16\uFF0Cm = 8 - 1 = 7\uFF0Cg = 7 &lt;&lt; 1 + 1 = 15 = 16 - 1\uFF0C\u540C\u65F6\u628A\u7B2C 17 \u4F4D\u7F6E\u56DE\u5230 0\uFF1Bk &lt;= m\uFF0C\u8BF4\u660E\u6CA1\u6709\u6269\u5BB9\uFF0C\u6B64\u65F6 g = g + (SG_UNIT &lt;&lt; 1)\uFF0C\u610F\u4E3A\u4F4E 16 \u4F4D\u6CA1\u6709\u53D8\u5316\uFF0C\u8FD8\u662F 7\uFF0C\u7B2C 17 \u4F4D\u7F6E\u56DE\u5230 0\uFF0C\u540C\u65F6\u628A\u7B2C 18 \u4F4D\u7F6E\u4E3A 1 \u4E86\uFF0C\u8868\u660E\u88AB\u67D0\u4E2A\u7EBF\u7A0B\u4FEE\u6539\u8FC7 1 \u6B21\u3002</p><p>\u6709\u4E00\u70B9\u5F88\u5173\u952E\uFF0C\u4E0D\u8BBA\u662F\u5426\u6269\u5BB9\uFF0C\u5728\u4FEE\u6539 ws \u4E4B\u524D\uFF0C\u90FD\u9700\u8981\u628A\u7B2C 17 \u4F4D\u7F6E\u4E3A 1\uFF0C\u4FEE\u6539\u4E4B\u540E\uFF0C\u7B2C 17 \u4F4D\u7F6E\u56DE\u5230 0\u3002</p><h2 id="_7-8-forkjointask-\u7684-fork-join" tabindex="-1"><a class="header-anchor" href="#_7-8-forkjointask-\u7684-fork-join" aria-hidden="true">#</a> 7.8 ForkJoinTask \u7684 fork / join</h2><p>\u5982\u679C\u5C40\u90E8\u961F\u5217\u3001\u5168\u5C40\u4E2D\u7684\u4EFB\u52A1\u5168\u90E8\u662F\u76F8\u4E92\u72EC\u7ACB\u7684\uFF0C\u5C31\u5F88\u7B80\u5355\u4E86\u3002\u4F46\u95EE\u9898\u662F\uFF0C\u5BF9\u4E8E\u5206\u6CBB\u7B97\u6CD5\u6765\u8BF4\uFF0C\u5206\u89E3\u51FA\u6765\u7684\u4E00\u4E2A\u4E2A\u4EFB\u52A1\u5E76\u4E0D\u662F\u72EC\u7ACB\u7684\uFF0C\u800C\u662F\u76F8\u4E92\u4F9D\u8D56\uFF0C\u4E00\u4E2A\u4EFB\u52A1\u7684\u5B8C\u6210\u8981\u4F9D\u8D56\u53E6\u4E00\u4E2A\u524D\u7F6E\u4EFB\u52A1\u7684\u5B8C\u6210\u3002</p><p>\u8FD9\u79CD\u4F9D\u8D56\u5173\u7CFB\u662F\u901A\u8FC7 ForkJoinTask \u4E2D\u7684 join() \u6765\u4F53\u73B0\u7684\u3002\u56DE\u5230 7.1 \u8282\u4E2D\u4F7F\u7528\u7684\u6848\u4F8B\uFF0C\u6709\u8FD9\u6837\u7684\u4EE3\u7801\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lo <span class="token operator">&lt;</span> hi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5212\u5206</span>
        <span class="token keyword">int</span> pivot <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SortTask</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SortTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> pivot <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SortTask</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SortTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> pivot <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>
        left<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        right<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        left<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        right<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EBF\u7A0B\u5728\u6267\u884C\u5F53\u524D ForkJoinTask \u7684\u65F6\u5019\uFF0C\u4EA7\u751F\u4E86 left\u3001right \u4E24\u4E2A\u5B50 Task\u3002\u6240\u8C13 fork\uFF0C\u662F\u6307\u628A\u8FD9\u4E24\u4E2A\u5B50 Task \u653E\u5165\u961F\u5217\u91CC\u9762\uFF0Cjoin() \u5219\u662F\u8981\u7B49\u5F85 2 \u4E2A\u5B50 Task \u5B8C\u6210\u3002\u800C\u5B50 Task \u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u518D\u6B21\u4EA7\u751F\u4E24\u4E2A\u5B50 Task\u3002\u5982\u6B64\u5C42\u5C42\u5D4C\u5957\uFF0C\u7C7B\u4F3C\u4E8E\u9012\u5F52\u8C03\u7528\uFF0C\u76F4\u5230\u6700\u5E95\u5C42\u7684 Task \u8BA1\u7B97\u5B8C\u6210\uFF0C\u518D\u4E00\u7EA7\u7EA7\u8FD4\u56DE\u3002</p><h3 id="_7-8-1-fork" tabindex="-1"><a class="header-anchor" href="#_7-8-1-fork" aria-hidden="true">#</a> 7.8.1 fork</h3><p>fork() \u7684\u4EE3\u7801\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u628A\u81EA\u5DF1\u653E\u5165\u5F53\u524D\u7EBF\u7A0B\u6240\u5728\u7684\u5C40\u90E8\u961F\u5217\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushTask</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-8-2-join-\u7684\u5C42\u5C42\u5D4C\u5957" tabindex="-1"><a class="header-anchor" href="#_7-8-2-join-\u7684\u5C42\u5C42\u5D4C\u5957" aria-hidden="true">#</a> 7.8.2 join \u7684\u5C42\u5C42\u5D4C\u5957</h3><ol><li><p>join \u7684\u5C42\u5C42\u5D4C\u5957\u963B\u585E\u539F\u7406</p><p>join \u4F1A\u5BFC\u81F4\u7EBF\u7A0B\u7684\u5C42\u5C42\u5D4C\u5957\u963B\u585E\uFF0C\u5982\u56FE7-7 \u6240\u793A\u3002</p><img src="`+u+'" alt="\u56FE7-7" style="zoom:50%;"><p>\u56FE7-7 \u5C42\u5C42\u5D4C\u5957\u7684 join \u793A\u610F\u56FE</p><p>\u7EBF\u7A0B 1 \u5728\u6267\u884C ForkJoinTask1\uFF0C\u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\u8C03\u7528\u4E86 forkJoinTask2.join()\uFF0C\u6240\u4EE5\u8981\u7B49 ForkJoinTask2 \u5B8C\u6210\uFF0C\u7EBF\u7A0B 1 \u624D\u80FD\u8FD4\u56DE\uFF1B</p><p>\u7EBF\u7A0B 2 \u5728\u6267\u884C ForkJoinTask2\uFF0C\u4F46\u7531\u4E8E\u8C03\u7528\u4E86 forkJoinTask3.join()\uFF0C\u53EA\u6709\u7B49 ForkJoinTask3 \u5B8C\u6210\u540E\uFF0C\u7EBF\u7A0B 2 \u624D\u80FD\u8FD4\u56DE\uFF1B</p><p>\u7EBF\u7A0B 3 \u5728\u6267\u884C ForkJoinTask3\u3002</p><p>\u7ED3\u679C\u662F\uFF1A\u7EBF\u7A0B 3 \u9996\u5148\u6267\u884C\u5B8C\uFF0C\u7136\u540E\u7EBF\u7A0B 2 \u624D\u80FD\u6267\u884C\u5B8C\uFF0C\u6700\u540E\u7EBF\u7A0B 1 \u518D\u6267\u884C\u5B8C\u3002\u6240\u6709\u7684\u4EFB\u52A1\u5176\u5B9E\u7EC4\u6210\u4E00\u4E2A\u6709\u5411\u65E0\u73AF\u56FE DAG\u3002\u5982\u679C\u7EBF\u7A0B 3 \u8C03\u7528\u4E86 forkJoinTask1.join()\uFF0C\u90A3\u4E48\u4F1A\u5F62\u6210\u73AF\uFF0C\u9020\u6210\u6B7B\u9501\u3002</p><p>\u90A3\u4E48\uFF0C\u8FD9\u79CD\u5C42\u6B21\u4F9D\u8D56\u3001\u5C42\u6B21\u901A\u77E5\u7684 DAG\uFF0C\u5728 ForkJoinTask \u5185\u90E8\u662F\u5982\u4F55\u5B9E\u73B0\u7684\u5462\uFF1F\u7AD9\u5728 ForkJoinTask \u7684\u89D2\u5EA6\u6765\u770B\uFF0C\u6BCF 1 \u4E2A ForkJoinTask\uFF0C\u90FD\u53EF\u80FD\u6709\u591A\u4E2A\u7EBF\u7A0B\u5728\u7B49\u5F85\u5B83\u5B8C\u6210\uFF0C\u6709 1 \u4E2A\u7EBF\u7A0B\u5728\u6267\u884C\u5B83\u3002\u6240\u4EE5\u6BCF\u4E2A ForkJoinTask \u5C31\u662F\u4E00\u4E2A\u540C\u6B65\u5BF9\u8C61\uFF0C\u7EBF\u7A0B\u5728\u8C03\u7528 join() \u7684\u65F6\u5019\uFF0C\u963B\u585E\u5728\u8FD9\u4E2A\u540C\u6B65\u5BF9\u8C61\u4E0A\u9762\uFF0C\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0C\u518D\u901A\u8FC7\u8FD9\u4E2A\u540C\u6B65\u5BF9\u8C61\u901A\u77E5\u6240\u6709\u7B49\u5F85\u7684\u7EBF\u7A0B\u3002</p><p>\u5982\u56FE7-8 \u6240\u793A\uFF0C\u5229\u7528 synchronized \u5173\u952E\u5B57\u548C Java \u539F\u751F\u7684 wait / notify \u673A\u5236\uFF0C\u5B9E\u73B0\u4E86\u7EBF\u7A0B\u7684\u7B49\u5F85\u2014\u5524\u9192\u673A\u5236\u3002\u8C03\u7528 join() \u7684\u8FD9\u4E9B\u7EBF\u7A0B\uFF0C\u5185\u90E8\u5176\u5B9E\u662F\u8C03\u7528 ForkJoinTask \u8FD9\u4E2A\u5BF9\u8C61\u7684 wait()\uFF1B\u6267\u884C\u8BE5\u4EFB\u52A1\u7684 Worker \u7EBF\u7A0B\uFF0C\u5728\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u987A\u4FBF\u8C03\u7528 notifyAll()\u3002</p><img src="'+k+`" alt="\u56FE7-8" style="zoom:50%;"><p>\u56FE7-8 ForkJoinTask \u540C\u6B65\u5BF9\u8C61\u793A\u610F\u56FE</p></li><li><p>ForkJoinTask \u7684\u72B6\u6001\u89E3\u6790</p><p>\u8981\u5B9E\u73B0 fork() / join() \u7684\u8FD9\u79CD\u7EBF\u7A0B\u95F4\u7684\u540C\u6B65\uFF0C\u5BF9\u5E94\u7684 ForkJoinTask \u4E00\u5B9A\u662F\u6709\u5404\u79CD\u72B6\u6001\u7684\uFF0C\u8FD9\u4E2A\u72B6\u6001\u53D8\u91CF\u662F\u5B9E\u73B0 fork / join \u7684\u57FA\u7840\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">volatile</span> <span class="token keyword">int</span> status<span class="token punctuation">;</span> 
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NORMAL <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CANCELLED <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> EXCEPTIONAL <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SIGNA <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521D\u59CB\u65F6\uFF0Cstatus = 0\u3002\u5171\u6709\u4E94\u79CD\u72B6\u6001\uFF0C\u53EF\u4EE5\u5206\u4E3A\u4E24\u5927\u7C7B\uFF1A</p><p>\uFF081\uFF09\u672A\u5B8C\u6210\uFF1A0\uFF0CSIGNAL = 1\u3002\u5373 status &gt;= 0\u30020 \u4E3A\u521D\u59CB\u672A\u5B8C\u6210\u72B6\u6001\uFF0C1 \u8868\u793A\u6709\u7EBF\u7A0B\u963B\u585E\u5728\u4EFB\u52A1\u4E0A\uFF0C\u7B49\u5F85\u4EFB\u52A1\u5B8C\u6210\u3002</p><p>\uFF082\uFF09\u5DF2\u5B8C\u6210\uFF1ANORMAL = -1\uFF0CCANCELLED = -2\uFF0CEXCEPTIONAL = -3\u3002\u5373 status &lt; 0\u3002</p><p>NORMAL\uFF1A\u6B63\u5E38\u5B8C\u6210\u3002</p><p>CANCELLED\uFF1A\u4EFB\u52A1\u88AB\u53D6\u6D88\uFF0C\u5B8C\u6210\u3002</p><p>EXCEPTIONAL\uFF1A\u4EFB\u52A1\u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\u53D1\u751F\u5F02\u5E38\uFF0C\u9000\u51FA\u4E5F\u662F\u5B8C\u6210\u3002</p><p>\u6240\u4EE5\uFF0C\u901A\u8FC7\u5224\u65AD\u662F status &gt;= 0\uFF0C\u8FD8\u662F status &lt; 0\uFF0C\u5C31\u53EF\u77E5\u9053\u4EFB\u52A1\u662F\u5426\u5B8C\u6210\uFF0C\u8FDB\u800C\u51B3\u5B9A\u8C03\u7528 join() \u7684\u7EBF\u7A0B\u662F\u5426\u9700\u8981\u88AB\u963B\u585E\u3002</p></li><li><p>join \u7684\u8BE6\u7EC6</p><p>\u5B9E\u73B0\u4E0B\u9762\u770B\u4E00\u4E0B\u4EE3\u7801\u7684\u8BE6\u7EC6\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u975E\u6B63\u5E38\u7ED3\u675F\uFF0C\u629B\u51FA\u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">doJoin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> NORMAL<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">reportResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4EFB\u52A1\u72B6\u6001\u662F NORMAL\uFF0C\u6B63\u5E38\u6267\u884C\u5B8C\uFF0C\u53D6\u7ED3\u679C</span>
        <span class="token keyword">else</span>
            <span class="token keyword">return</span> <span class="token function">getRawResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getRawResult() \u662F ForkJoinTask \u4E2D\u7684\u4E00\u4E2A\u6A21\u677F\u65B9\u6CD5\uFF0C\u5206\u522B\u88AB RecusiveAction \u548C RecursiveTask \u5B9E\u73B0\uFF0C\u524D\u8005\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u6240\u4EE5\u8FD4\u56DE null\uFF0C\u540E\u8005\u8FD4\u56DE\u4E00\u4E2A\u7C7B\u578B\u4E3A V \u7684 result \u53D8\u91CF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RecursiveAction</span> <span class="token keyword">extends</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">Void</span> <span class="token function">getRawResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">getRawResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>reportResult() \u53EA\u662F\u5BF9 getRawResult() \u7684\u4E00\u4E2A\u5305\u88C5\uFF0C\u91CC\u9762\u591A\u4E86\u5BF9 CANCELLED \u548C EXCEPTIONAL \u8FD9\u4E24\u79CD\u5F02\u5E38\u5B8C\u6210\u72B6\u6001\u7684\u5904\u7406\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">V</span> <span class="token function">reportResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> s<span class="token punctuation">;</span> <span class="token class-name">Throwable</span> ex<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> <span class="token operator">==</span> CANCELLED<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CancellationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> EXCEPTIONAL <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ex <span class="token operator">=</span> <span class="token function">getThrowableException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        UNSAFE<span class="token punctuation">.</span><span class="token function">throwException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getRawResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u963B\u585E\u4E3B\u8981\u53D1\u751F\u5728\u4E0A\u9762\u7684 doJoin() \u51FD\u6570\u91CC\u9762\u3002\u5728 dojoin() \u91CC\u8C03\u7528 t.join() \u7684\u7EBF\u7A0B\u4F1A\u963B\u585E\uFF0C\u7136\u540E\u7B49\u5F85\u4EFB\u52A1 t \u6267\u884C\u5B8C\u6210\uFF0C\u518D\u5524\u9192\u8BE5\u963B\u585E\u7EBF\u7A0B\uFF0CdoJoin() \u8FD4\u56DE\u3002</p><p>\u6CE8\u610F\uFF1A\u5F53 doJoin() \u8FD4\u56DE\u7684\u65F6\u5019\uFF0C\u5C31\u662F\u8BE5\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u7684\u65F6\u5019\uFF0CdoJoin() \u7684\u8FD4\u56DE\u503C\u5C31\u662F\u4EFB\u52A1\u7684\u5B8C\u6210\u72B6\u6001\uFF0C\u4E5F\u5C31\u662F\u4E0A\u9762\u7684 -1\u3001-2\u3001-3 \u4E09\u79CD\u72B6\u6001\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">doJoin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> t<span class="token punctuation">;</span> 
    <span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">;</span> 
    <span class="token keyword">int</span> s<span class="token punctuation">;</span> 
    <span class="token keyword">boolean</span> completed<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4EFB\u52A1\u5DF2\u7ECF\u5B8C\u6210\uFF0C\u4E0D\u7528\u963B\u585E\u4E86\uFF0CdoJoin() \u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> s<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>w <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unpushTask</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                completed <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> rex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">setExceptionalCompletion</span><span class="token punctuation">(</span>rex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>completed<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token function">setCompletion</span><span class="token punctuation">(</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8C03\u7528\u8005\u662F\u4E00\u4E2A\u5185\u90E8\u7684 Worker \u7EBF\u7A0B\uFF0C\u963B\u585E\u5728\u6B64</span>
        <span class="token keyword">return</span> w<span class="token punctuation">.</span><span class="token function">joinTask</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
        <span class="token comment">// \u8C03\u7528\u8005\u662F\u4E00\u4E2A\u5916\u90E8\u7EBF\u7A0B\uFF0C\u963B\u585E\u5728\u6B64</span>
        <span class="token keyword">return</span> <span class="token function">externalAwaitDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u770B\u4E00\u4E0B externalAwaitDone()\uFF0C\u5373\u5916\u90E8\u7EBF\u7A0B\u7684\u963B\u585E\u8FC7\u7A0B\uFF0C\u76F8\u5BF9\u7B80\u5355\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">externalAwaitDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> s<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> interrupted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> statusOffset<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> SIGNAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        interrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>interrupted<span class="token punctuation">)</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u9996\u5148\u901A\u8FC7 synchronized \u5173\u952E\u5B57\u5BF9 ForkJoinTask \u52A0\u9501\uFF0C\u4E4B\u540E\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A</p><p>\uFF081\uFF09\u628A status \u4ECE 0 \u6539\u6210 1\uFF08SIGNAL\uFF09\uFF1B</p><p>\uFF082\uFF09\u8C03\u7528 Java \u539F\u751F\u7684 wait() \u51FD\u6570\uFF0C\u963B\u585E\u8BE5\u7EBF\u7A0B\u3002</p><p>\u5185\u90E8 Worker \u7EBF\u7A0B\u7684\u963B\u585E\uFF0C\u5373\u4E0A\u9762\u7684 w.joinTask(this)\uFF0C\u76F8\u6BD4\u5916\u90E8\u7EBF\u7A0B\u7684\u963B\u585E\u8981\u505A\u66F4\u591A\u5DE5\u4F5C\u3002\u5B83\u7684\u73B0\u4E0D\u5728 ForkJoinTask \u91CC\u9762\uFF0C\u800C\u662F\u5728 ForkJoinWorkerThread \u91CC\u9762\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinWorkerThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">joinTask</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> joinMe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> prevJoin <span class="token operator">=</span> currentJoin<span class="token punctuation">;</span>
        currentJoin <span class="token operator">=</span> joinMe<span class="token punctuation">;</span>
        <span class="token comment">// for \u6B7B\u5FAA\u73AF\uFF0C\u76F4\u5230 status &lt; 0\uFF0C\u624D\u4F1A\u8FD4\u56DE</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">,</span> retries <span class="token operator">=</span> MAX_HELP<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4EFB\u52A1\u5B8C\u6210\uFF0C\u8FD4\u56DE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> joinMe<span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                currentJoin <span class="token operator">=</span> prevJoin<span class="token punctuation">;</span>
                <span class="token keyword">return</span> s<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5728\u963B\u585E\u4E4B\u524D\uFF0C\u51E0\u6B21\u81EA\u65CB\u91CD\u8BD5</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>retries <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>queueTop <span class="token operator">!=</span> queueBase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">localHelpJoinTask</span><span class="token punctuation">(</span>joinMe<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        retries <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>           
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>retries <span class="token operator">==</span> MAX_HELP <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token operator">--</span>retries<span class="token punctuation">;</span>                 
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryDeqAndExec</span><span class="token punctuation">(</span>joinMe<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                    retries <span class="token operator">=</span> <span class="token function">helpJoinTask</span><span class="token punctuation">(</span>joinMe<span class="token punctuation">)</span> <span class="token operator">?</span> MAX_HELP <span class="token operator">:</span> retries <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                retries <span class="token operator">=</span> MAX_HELP<span class="token punctuation">;</span>           
                <span class="token comment">// \u963B\u585E\u8BE5\u7EBF\u7A0B\u3002\u6CE8\u610F\uFF0C\u8FD9\u91CC\u53EA\u662F\u5C1D\u8BD5\uFF0C\u5982\u679C\u4E0D\u6210\u529F\uFF0C</span>
                <span class="token comment">// \u4F1A\u518D\u6B21\u56DE\u5230 for \u5FAA\u73AF\u7684\u5F00\u59CB\uFF0C\u91CD\u65B0\u6267\u884C</span>
                pool<span class="token punctuation">.</span><span class="token function">tryAwaitJoin</span><span class="token punctuation">(</span>joinMe<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u51FD\u6570\u6709\u4E2A\u5173\u952E\u70B9\uFF1Afor \u91CC\u9762\u662F\u6B7B\u5FAA\u73AF\uFF0C\u5E76\u4E14\u53EA\u6709\u4E00\u4E2A\u8FD4\u56DE\u70B9\uFF0C\u5373\u53EA\u6709\u5728 joinMe.status &lt; 0\uFF0C\u4EFB\u52A1\u5B8C\u6210\u4E4B\u540E\u624D\u53EF\u80FD\u8FD4\u56DE\u3002\u5426\u5219\u4F1A\u4E0D\u65AD\u81EA\u65CB\uFF1B\u82E5\u81EA\u65CB\u4E4B\u540E\u8FD8\u4E0D\u884C\uFF0C\u5C31\u4F1A\u8C03\u7528 pool.tryAwaitJoin(joinMe) \u963B\u585E\u3002</p><p>tryAwaitJoin(joinMe) \u7684\u4EE3\u7801\u5982\u4E0B\u3002\u6CE8\u610F\uFF1A\u8FD9\u91CC\u662F tryAwaitJoin(..)\uFF0C\u800C\u4E0D\u662F awaitJoin(..)\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u80FD\u4FDD\u8BC1\u4E00\u5B9A\u4F1A\u963B\u585E\u6210\u529F\u3002\u5982\u679C\u963B\u585E\u4E0D\u6210\u529F\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u5230 for \u5FAA\u73AF\u91CC\uFF0C\u53EF\u80FD\u518D\u6B21\u8FDB\u5165\u8BE5\u51FD\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinPool</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">tryAwaitJoin</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> joinMe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> s<span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u53EA\u6709\u4EFB\u52A1\u5904\u4E8E\u672A\u5B8C\u6210\u72B6\u6001\uFF0C\u624D\u9700\u8981\u6267\u884C\u4E0B\u9762\u7684\u4EE3\u7801</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>joinMe<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7B2C 1 \u90E8\u5206\uFF1A\u963B\u585E\u4E4B\u524D\u7684\u51C6\u5907\u5DE5\u4F5C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryPreBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u7B2C 2 \u90E8\u5206\uFF1A\u963B\u585E</span>
                joinMe<span class="token punctuation">.</span><span class="token function">tryAwaitDone</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u7B2C 3 \u90E8\u5206\uFF1A\u963B\u585E\u5524\u9192\u4E4B\u540E\u7684\u6E05\u7406\u5DE5\u4F5C</span>
                <span class="token function">postBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ctl <span class="token operator">&amp;</span> STOP_BIT<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0L</span><span class="token punctuation">)</span>
                joinMe<span class="token punctuation">.</span><span class="token function">cancelIgnoringExceptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u51FD\u6570\u4E2D\uFF0C\u6709\u4E09\u4E2A\u5173\u952E\u90E8\u5206\uFF1A\u963B\u585E\u4E4B\u524D\u3001\u963B\u585E\u3001\u963B\u585E\u4E4B\u540E\u3002\u5728\u963B\u585E\u4E4B\u524D\u8981\u505A\u4E00\u4E9B\u51C6\u5907\u5DE5\u4F5C\uFF0C\u5728\u963B\u585E\u4E4B\u540E\u8981\u505A\u4E00\u4E9B\u6E05\u7406\u5DE5\u4F5C\u3002\u5177\u4F53\u662F\u54EA\u4E9B\u5DE5\u4F5C\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinPool</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u7B2C 1 \u90E8\u5206\uFF1A\u963B\u585E\u4E4B\u524D\u7684\u51C6\u5907\u5DE5\u4F5C\u3002\u6CE8\u610F\uFF0C\u53EA\u662F\u5C1D\u8BD5\uFF0C\u4E0D\u80FD\u4FDD\u8BC1\u4E00\u5B9A\u6210\u529F\u3002\u5982\u679C\u4E0D\u6210\u529F\uFF0C\u90A3\u4E48\u4F1A\u56DE\u5230\u4E0A\u9762\u7684 for \u5FAA\u73AF\uFF0C\u7136\u540E\u53EF\u80FD\u518D\u6B21\u8FDB\u5165\u8BE5\u51FD\u6570</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">tryPreBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> blockedCount<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> blockedCountOffset<span class="token punctuation">,</span> b<span class="token punctuation">,</span> b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> pc <span class="token operator">=</span> parallelism<span class="token punctuation">;</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ws<span class="token punctuation">;</span> <span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">;</span>
                <span class="token keyword">int</span> e<span class="token punctuation">,</span> ac<span class="token punctuation">,</span> tc<span class="token punctuation">,</span> rc<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
                <span class="token keyword">long</span> c <span class="token operator">=</span> ctl<span class="token punctuation">;</span>
                <span class="token keyword">int</span> u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// e &lt; 0\uFF0C\u7EBF\u7A0B\u6C60\u6B63\u5728\u5173\u95ED\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A\uFF0C\u8DF3\u51FA do \u5FAA\u73AF\uFF0C\u51FD\u6570\u4F1A\u8FD4\u56DE false</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u6808\u4E2D\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u5524\u9192\u4E00\u4E2A\u7EBF\u7A0B</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ac <span class="token operator">=</span> <span class="token punctuation">(</span>u <span class="token operator">&gt;&gt;</span> UAC_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> e <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
                         <span class="token punctuation">(</span>ws <span class="token operator">=</span> workers<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                         <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token operator">~</span>e <span class="token operator">&amp;</span> SMASK<span class="token punctuation">)</span> <span class="token operator">&lt;</span> ws<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span>
                         <span class="token punctuation">(</span>w <span class="token operator">=</span> ws<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">long</span> nc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>nextWait <span class="token operator">&amp;</span> E_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>c <span class="token operator">&amp;</span> <span class="token punctuation">(</span>AC_MASK<span class="token operator">|</span>TC_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>eventCount <span class="token operator">==</span> e <span class="token operator">&amp;&amp;</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span> nc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        w<span class="token punctuation">.</span>eventCount <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">+</span> EC_UNIT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> E_MASK<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>parked<span class="token punctuation">)</span>
                            UNSAFE<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>              
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>u <span class="token operator">&gt;&gt;&gt;</span> UTC_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> ac <span class="token operator">+</span> pc <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">long</span> nc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">-</span> AC_UNIT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> AC_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>c <span class="token operator">&amp;</span> <span class="token operator">~</span>AC_MASK<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span> nc<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token comment">// \u6CA1\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u4F46\u6709\u6D3B\u8DC3\u7EBF\u7A0B\uFF0C\u6D3B\u8DC3\u7EBF\u7A0B\u6570\u51CF 1 </span>
                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>              
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tc <span class="token operator">+</span> pc <span class="token operator">&lt;</span> MAX_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">long</span> nc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">+</span> TC_UNIT<span class="token punctuation">)</span> <span class="token operator">&amp;</span> TC_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>c <span class="token operator">&amp;</span> <span class="token operator">~</span>TC_MASK<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span> nc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// \u6CA1\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u4E5F\u6CA1\u6709\u6D3B\u8DC3\u7EBF\u7A0B\uFF0C\u8981\u5F00\u4E00\u4E2A\u65B0\u7EBF\u7A0B</span>
                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>           
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> blockedCountOffset<span class="token punctuation">,</span> b <span class="token operator">=</span> blockedCount<span class="token punctuation">,</span> b <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B2C 3 \u90E8\u5206\uFF1A\u963B\u585E\u5524\u9192\u4E4B\u540E\u7684\u6E05\u7406\u5DE5\u4F5C</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">postBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> c<span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>   
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c <span class="token operator">=</span> ctl<span class="token punctuation">,</span> c <span class="token operator">+</span> AC_UNIT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> b<span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> blockedCountOffset<span class="token punctuation">,</span> b <span class="token operator">=</span> blockedCount<span class="token punctuation">,</span> b <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684 postBlock() \u6BD4\u8F83\u7B80\u5355\uFF0C\u53EA\u662F\u628A\u6D3B\u8DC3\u7EBF\u7A0B\u6570\u52A0 1\uFF0C\u963B\u585E\u7EBF\u7A0B\u6570\u51CF 1\u3002</p><p>\u800C tryPreBlock() \u76F8\u6BD4\u66F4\u590D\u6742\uFF1A</p><p>\u9996\u5148\u662F\u628A\u963B\u585E\u7EBF\u7A0B\u6570\u52A0 1\uFF0C\u5982\u679C\u589E\u52A0\u5931\u8D25\uFF0C\u6574\u4E2A tryPreBlock() \u5C31\u8FD4\u56DE false\uFF1B\u5982\u679C\u589E\u52A0\u6210\u529F\uFF0C\u6839\u636E\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001 ctl \u53D8\u91CF\uFF0C\u6267\u884C\u5404\u79CD\u5BF9\u5E94\u7684\u64CD\u4F5C\uFF1A</p><p>\uFF081\uFF09\u82E5\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u4ECE Treiber Stack \u6808\u9876\u53D6\u51FA\uFF0C\u5524\u9192\u3002</p><p>\uFF082\uFF09\u82E5\u65E0\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u6709\u6D3B\u8DC3\u7EBF\u7A0B\uFF0C\u5219\u53EA\u628A\u6D3B\u8DC3\u7EBF\u7A0B\u6570\u51CF 1\u3002\u8FD9\u662F\u56E0\u4E3A\u5F53\u524D\u7684\u6D3B\u8DC3\u7EBF\u7A0B\u9A6C\u4E0A\u5C31\u8981\u88AB\u963B\u585E\u4E86\u3002</p><p>\uFF083\uFF09\u5982\u679C\u65E2\u65E0\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u4E5F\u65E0\u6D3B\u8DC3\u7EBF\u7A0B\uFF0C\u610F\u5473\u7740\u6240\u6709\u7EBF\u7A0B\u90FD\u5904\u4E8E\u963B\u585E\u72B6\u6001\u3002\u6B64\u65F6\u5FC5\u987B\u5F00\u4E00\u4E2A\u65B0\u7EBF\u7A0B\uFF0C\u4EE5\u5E94\u5BF9\u540E\u7EED\u7684\u4EFB\u52A1\u3002</p><p>\u5728 tryPreBlock() \u548C postBlock() \u4E4B\u95F4\uFF0C\u5C31\u662F\u5B9E\u9645\u6267\u884C\u963B\u585E\u7684\u5730\u65B9\u3002\u4E0A\u6587\u5DF2\u8BB2\uFF0C\u5916\u90E8\u7EBF\u7A0B\u7684\u963B\u585E\u662F\u901A\u8FC7\u8C03\u7528 ForkJoinTask \u7684 externalAwaitDone() \u5B8C\u6210\u7684\uFF1B\u5185\u90E8\u7EBF\u7A0B\u7684\u963B\u585E\u8C03\u7528\u4E86 tryAwaitDone(..)\uFF0C\u4EE3\u7801\u5982\u4E0B\u3002\u4E24\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0\u57FA\u672C\u7C7B\u4F3C\uFF0C\u90FD\u662F\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A\u9996\u5148\u628A status \u4ECE 0 \u6539\u5230 1\uFF1B\u5176\u6B21\uFF0C\u8C03\u7528 Java \u539F\u751F\u7684 wait() \u51FD\u6570\uFF0C\u963B\u585E\u8BE5\u7EBF\u7A0B\u3002\u8BFB\u8005\u53EF\u4EE5\u7FFB\u9605\u524D\u9762\u7684\u90E8\u5206\u5BF9\u4E24\u4E2A\u51FD\u6570\u8FDB\u884C\u6BD4\u8F83\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u7B2C 2 \u90E8\u5206\uFF1A\u963B\u585E\u7684\u6838\u5FC3\u5B9E\u73B0\u3002\u6B64\u5904\u4E5F\u662F tryAwaitDone()\uFF0C\u800C\u975E AwaitDone()\uFF0C\u65E0\u6CD5\u4FDD\u8BC1\u4E00\u5B9A\u6210\u529F\u3002</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u6210\u529F\uFF0C\u5C31\u4F1A\u56DE\u5230 for \u5FAA\u73AF\uFF0C\u7136\u540E\u53EF\u80FD\u518D\u6B21\u8FDB\u5165\u8BE5\u51FD\u6570</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">tryAwaitDone</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> s<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span>
                 <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> statusOffset<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> SIGNAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                status <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5C0F\u4E8E 0\uFF0C\u4EFB\u52A1\u5B8C\u6210\uFF0C\u65E0\u987B\u963B\u585E\uFF0C\u8FD4\u56DE</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        <span class="token function">wait</span><span class="token punctuation">(</span>millis<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// caller must check termination</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>join \u7684\u5524\u9192</p><p>\u8C03\u7528 t.join() \u4E4B\u540E\uFF0C\u7EBF\u7A0B\u4F1A\u88AB\u963B\u585E\u3002\u63A5\u4E0B\u6765\u770B\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u5728\u4EFB\u52A1 t \u6267\u884C\u5B8C\u6BD5\u540E\u5982\u4F55\u5524\u9192\u963B\u585E\u7684\u7EBF\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">doExec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> completed<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                completed <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> rex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setExceptionalCompletion</span><span class="token punctuation">(</span>rex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>completed<span class="token punctuation">)</span>
                <span class="token comment">// \u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u66F4\u65B0 status\uFF0C\u540C\u65F6\u901A\u77E5\u5176\u4ED6\u963B\u585E\u7EBF\u7A0B</span>
                <span class="token function">setCompletion</span><span class="token punctuation">(</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">setCompletion</span><span class="token punctuation">(</span><span class="token keyword">int</span> completion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u672C\u6765\u5C31\u5DF2\u7ECF\u5B8C\u6210\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> s<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> statusOffset<span class="token punctuation">,</span> s<span class="token punctuation">,</span> completion<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                    <span class="token comment">// \u901A\u77E5\u6240\u6709\u88AB\u963B\u585E\u7684\u7EBF\u7A0B</span>
                    <span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> completion<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EFB\u52A1\u7684\u6267\u884C\u53D1\u751F\u5728 doExec() \u51FD\u6570\u91CC\u9762\uFF0C\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u8C03\u7528\u4E00\u4E2A setCompletion(..) \u901A\u77E5\u6240\u6709\u7B49\u5F85\u7684\u7EBF\u7A0B\u3002\u8FD9\u91CC\u4E5F\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A</p><p>\uFF081\uFF09\u628A status \u7F6E\u4E3A\u5B8C\u6210\u72B6\u6001\u3002\u4E5F\u5C31\u662F NORMAL\u3001CANCELLED \u6216\u8005 EXCEPTIONAL\u3002</p><p>\uFF082\uFF09\u5982\u679C s != 0\uFF0C\u5373 s = SIGNAL\uFF0C\u8BF4\u660E\u6709\u7EBF\u7A0B\u6B63\u5728\u7B49\u5F85\u8FD9\u4E2A\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u3002\u8C03\u7528 Java \u539F\u751F\u7684 notifyAll() \u901A\u77E5\u6240\u6709\u7EBF\u7A0B\u3002\u5982\u679C s = 0\uFF0C\u8BF4\u660E\u6CA1\u6709\u7EBF\u7A0B\u7B49\u5F85\u8FD9\u4E2A\u4EFB\u52A1\uFF0C\u4E0D\u9700\u8981\u901A\u77E5\u3002</p></li></ol><h2 id="_7-9-forkjoinpool-\u7684\u4F18\u96C5\u5173\u95ED" tabindex="-1"><a class="header-anchor" href="#_7-9-forkjoinpool-\u7684\u4F18\u96C5\u5173\u95ED" aria-hidden="true">#</a> 7.9 ForkJoinPool \u7684\u4F18\u96C5\u5173\u95ED</h2><p>\u540C ThreadPoolExecutor \u4E00\u6837\uFF0CForkJoinPool \u7684\u5173\u95ED\u4E5F\u4E0D\u53EF\u80FD\u662F \u201C\u77AC\u65F6\u7684\u201D\uFF0C\u800C\u662F\u9700\u8981\u4E00\u4E2A\u5E73\u6ED1\u7684\u8FC7\u6E21\u8FC7\u7A0B\u3002</p><h3 id="_7-9-1-\u5173\u952E\u7684-terminate-\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_7-9-1-\u5173\u952E\u7684-terminate-\u53D8\u91CF" aria-hidden="true">#</a> 7.9.1 \u5173\u952E\u7684 terminate \u53D8\u91CF</h3><p>\u5BF9\u4E8E\u4E00\u4E2A Worker \u7EBF\u7A0B\u6765\u8BF4\uFF0C\u5B83\u4F1A\u5728\u4E00\u4E2A while \u5FAA\u73AF\u91CC\u9762\u4E0D\u65AD\u8F6E\u8BE2\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF0C\u5982\u679C\u6709\u4EFB\u52A1\uFF0C\u90A3\u4E48\u6267\u884C\uFF0C\u5904\u5728\u6D3B\u8DC3\u72B6\u6001\uFF1B\u5982\u679C\u6CA1\u6709\u4EFB\u52A1\uFF0C\u5219\u8FDB\u5165\u7A7A\u95F2\u7B49\u5F85\u72B6\u6001\u3002\u90A3\u4E48\uFF0C\u8FD9\u4E2A\u7EBF\u7A0B\u5982\u4F55\u9000\u51FA\u5462\uFF1F\u7B54\u6848\u5728\u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> swept <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                 
    <span class="token keyword">long</span> c<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>w<span class="token punctuation">.</span>terminate <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">=</span> ctl<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a<span class="token punctuation">;</span>                           
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>swept <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;&gt;</span> AC_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            swept <span class="token operator">=</span> <span class="token function">scan</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryAwaitWork</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>
            swept <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(int) (c=ctl) &lt; 0\uFF0C\u5373\u4F4E 32 \u4F4D\u7684\u6700\u9AD8\u4F4D\u4E3A 1\uFF08\u53C2\u8003\u524D\u9762 ctl \u53D8\u91CF\u7684\u89E3\u6790\uFF09\uFF0C\u8BF4\u660E\u7EBF\u7A0B\u6C60\u5DF2\u7ECF\u8FDB\u5165\u4E86\u5173\u95ED\u72B6\u6001\u3002\u4F46\u7EBF\u7A0B\u6C60\u8FDB\u5165\u5173\u95ED\u72B6\u6001\uFF0C\u4E0D\u4EE3\u8868\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u4F1A\u7ACB\u9A6C\u5173\u95ED\u3002</p><p>\u4E3A\u6B64\uFF0C\u5728 ForkJoinWorkerThread \u91CC\u8FD8\u6709\u4E00\u4E2A terminate \u53D8\u91CF\uFF0C\u521D\u59CB\u4E3A false\u3002\u5F53\u7EBF\u7A0B\u6C60\u8981\u5173\u95ED\u7684\u65F6\u5019\uFF0C\u4F1A\u628A\u76F8\u5173\u7EBF\u7A0B\u7684 terminate \u53D8\u91CF\u7F6E\u4E3A true\u3002\u8FD9\u6837\uFF0C\u8FD9\u4E9B\u7EBF\u7A0B\u5C31\u4F1A\u9000\u51FA\u4E0A\u9762\u7684 while \u5FAA\u73AF\uFF0C\u4E5F\u5C31\u4F1A\u81EA\u52A8\u9000\u51FA\u3002</p><p>\u5F53\u7EBF\u7A0B\u6C60\u5173\u95ED\u7684\u65F6\u5019\uFF0C\u4EC0\u4E48\u6837\u7684\u7EBF\u7A0B\u53EF\u4EE5\u7ACB\u9A6C\u5173\u95ED\uFF0C\u4EC0\u4E48\u6837\u7684\u7EBF\u7A0B\u4E0D\u80FD\u7ACB\u9A6C\u5173\u95ED\u5462\uFF1F\u8FD9\u5C31\u6D89\u53CA\u4E0B\u9762\u4E24\u4E2A\u51FD\u6570\u7684\u533A\u522B\u3002</p><h3 id="_7-9-2-shutdown-\u4E0E-shutdownnow-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_7-9-2-shutdown-\u4E0E-shutdownnow-\u7684\u533A\u522B" aria-hidden="true">#</a> 7.9.2 shutdown() \u4E0E shutdownNow() \u7684\u533A\u522B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    shutdown <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    shutdown <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E8C\u8005\u7684\u4EE3\u7801\u57FA\u672C\u76F8\u540C\uFF0C\u90FD\u662F\u8C03\u7528 tryTerminate(boolean) \u51FD\u6570\uFF0C\u5176\u4E2D\u4E00\u4E2A\u4F20\u5165\u7684\u662F false\uFF0C\u53E6\u4E00\u4E2A\u4F20\u5165\u7684\u662F true\u3002tryTerminate \u610F\u4E3A\u8BD5\u56FE\u5173\u95ED ForkJoinPool\uFF0C\u5E76\u4E0D\u4FDD\u8BC1\u4E00\u5B9A\u53EF\u4EE5\u5173\u95ED\u6210\u529F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> now<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> c<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">=</span> ctl<span class="token punctuation">)</span> <span class="token operator">&amp;</span> STOP_BIT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>now<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;&gt;</span> AC_SHIFT<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span>parallelism<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shutdown <span class="token operator">||</span> blockedCount <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> quiescerCount <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> queueBase <span class="token operator">!=</span> queueTop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctl <span class="token operator">==</span> c<span class="token punctuation">)</span> 
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span> c <span class="token operator">|</span> STOP_BIT<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">startTerminating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;&gt;&gt;</span> TC_SHIFT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span>parallelism<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submissionLock<span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u901A\u77E5\u963B\u585E\u5728 awaitTermination(..) \u7684\u7EBF\u7A0B\uFF0C\u5176\u903B\u8F91\u548C\u524D\u9762\u8BB2\u7684 ThreadPoolExecutor \u51E0\u4E4E\u4E00\u6837</span>
            termination<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C ThreadPoolExecutor \u4E00\u6837\uFF0CForkJoinPool \u4E2D\u4E5F\u6709 awaitTermination(..) \u51FD\u6570\uFF0C\u4EE3\u7801\u51E0\u4E4E\u76F8\u540C\uFF0C\u4E0A\u9762\u51FD\u6570\u7684\u6700\u540E\u4E00\u6BB5\uFF0C\u5C31\u662F\u5728\u6574\u4E2A\u7EBF\u7A0B\u6C60\u90FD\u5DF2\u5173\u95ED\uFF0C\u5373\u6CA1\u6709\u4EFB\u4F55\u7EBF\u7A0B\u5B58\u6D3B\u7684\u60C5\u51B5\u4E0B\uFF0C\u901A\u77E5\u963B\u585E\u5728 awaitTermination(..) \u7684\u5916\u90E8\u7EBF\u7A0B\u3002</p><p>\u5982\u679C now = true\uFF0C\u5C31\u4F1A\u6267\u884C\u4EE5\u4E0B\u4EE3\u7801\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ctlOffset<span class="token punctuation">,</span> c<span class="token punctuation">,</span> c <span class="token operator">|</span> STOP_BIT<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">startTerminating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A ctl \u53D8\u91CF\u4F4E 32 \u4F4D\u7684\u6700\u9AD8\u4F4D\uFF0C\u901A\u8FC7 CAS \u64CD\u4F5C\u7F6E\u6210 1\uFF0C\u7136\u540E\u8C03\u7528 startTerminating()\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">startTerminating</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53D6\u6D88\u5168\u5C40\u961F\u5217\u4E2D\u7684\u6240\u6709\u4EFB\u52A1</span>
    <span class="token function">cancelSubmissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> pass <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> pass <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>pass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ws <span class="token operator">=</span> workers<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span> w <span class="token operator">:</span> ws<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u628A\u6240\u6709\u7EBF\u7A0B\u7684 terminate \u7F6E\u4E3A true</span>
                    w<span class="token punctuation">.</span>terminate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>pass <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u7EBF\u7A0B\u5185\u90E8\u7684\u5C40\u90E8\u961F\u5217\u4E2D\u7684\u6240\u6709\u4EFB\u52A1\u4E5F\u88AB\u53D6\u6D88</span>
                        w<span class="token punctuation">.</span><span class="token function">cancelTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>pass <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>w<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                                w<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5524\u9192\u6240\u6709\u7B49\u5F85\u7684\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u8FD9\u4E9B\u7A7A\u95F2\u7EBF\u7A0B\u4F1A\u81EA\u52A8\u9000\u51FA</span>
            <span class="token function">terminateWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u5728 startTerminating() \u4E2D\uFF0C\u628A\u5168\u5C40\u961F\u5217\u3001\u6BCF\u4E2A\u7EBF\u7A0B\u7684\u5C40\u90E8\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\u90FD\u53D6\u6D88\u4E86\uFF0C\u540C\u65F6\u628A\u6240\u6709\u7EBF\u7A0B\u7684 terminate \u7F6E\u4E3A\u4E86 true\uFF0C\u5524\u9192\u4E86\u963B\u585E\u6808\u4E2D\u6240\u6709\u7B49\u5F85\u7684\u7A7A\u95F2\u7EBF\u7A0B\uFF08\u8FD9\u4E9B\u7EBF\u7A0B\u7684 terminate \u7F6E\u4E3A\u4E86 true\uFF0C\u4F1A\u81EA\u52A8\u9000\u51FA\uFF09\u3002</p><p>\u5982\u679C now \u4E3A false\uFF0CtryTerminate(..) \u4F1A\u8FD4\u56DE false\u3002\u53EA\u662F\u5728\u6700\u5916\u9762\u7684\u51FD\u6570 shutdown() \u91CC\u9762\uFF0C\u628A shutdown \u7F6E\u4E3A\u4E86 true\u3002\u8FD9\u6837\uFF0C\u65B0\u7684\u4EFB\u52A1\u63D0\u4EA4\u4F1A\u88AB\u62D2\u7EDD\uFF0C\u4F46\u73B0\u6709\u7684\u4EFB\u52A1\u90FD\u4F1A\u6B63\u5E38\u6267\u884C\u5B8C\u6210\u3002</p><p>\u6240\u4EE5\uFF0C\u6700\u540E\u603B\u7ED3\u4E00\u4E0B\uFF1Ashutdown() \u53EA\u62D2\u7EDD\u65B0\u63D0\u4EA4\u7684\u4EFB\u52A1\uFF1BshutdownNow() \u4F1A\u53D6\u6D88\u73B0\u6709\u7684\u5168\u5C40\u961F\u5217\u548C\u5C40\u90E8\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF0C\u540C\u65F6\u5524\u9192\u6240\u6709\u7A7A\u95F2\u7684\u7EBF\u7A0B\uFF0C\u8BA9\u8FD9\u4E9B\u7EBF\u7A0B\u81EA\u52A8\u9000\u51FA\u3002</p>`,163),v=[d];function m(b,w){return s(),a("div",null,v)}var g=n(r,[["render",m],["__file","\u7B2C7\u7AE0ForkJoinPool.html.vue"]]);export{g as default};
